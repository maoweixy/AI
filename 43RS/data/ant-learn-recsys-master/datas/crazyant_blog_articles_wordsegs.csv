id,post_title,words
78,JavaScript对Select的子元素Option的操作,javascript select 元素 option 操作 javascript 删除 所有 select 下面 option 方法 增加 之前 删除 所有 optionwhile length var length document getelementbyid courseorder options length for var length ++ document getelementbyid courseorder options remove length length cdata syntaxhighlighter config clipboardswf http crazyant net js code clipboard swf syntaxhighlighter all javascript 创建 一个 option 节点 op document createelement option op value 表明 没有 安排 科次 te document createtextnode 没有 安排 课次 op appendchild te document getelementbyid courseorder appendchild op cdata syntaxhighlighter config clipboardswf http crazyant net js code clipboard swf syntaxhighlighter all
83,当用header方法输出内容时出现“Cannot modify header information - headers already sent by”的解决方法,当用 header 方法 输出 内容 出现 cannot modify header information headers already sent by 解决 方法 解决 方法 使用 ultraeditor 打开 文件 然后 变成 utf 编码 发现 文件 前面 乱码 删掉 即可 使用 dreamweaver 文件 格式化 功能 文件 格式化 一下 ok
85,linux下禁止机箱蜂鸣方法,linux 禁止 机箱 蜂鸣 方法 图像 界面 注意 图形界面 即使 图像 界面 快捷键 出现 虚拟 终端 xset off 命令 关闭 鸣声 纯粹 终端 inittab 启动 级别 第三 级别 时候 出现 终端 setterm blength 即可 以上 两个 命令 可以 直接 加入 etc bashrc 永久 生效
87,硬盘分区表丢失、修复大事记--分区表修复利器testdisk,硬盘分区 丢失 修复 大事记 -- 分区表 修复 利器 testdisk 今天 2009 11 14 刚才 找回 几天 丢失 分区表 硬盘分区 特此 记录 事件 起因 几天 我用 疯狂 下载 东西 时候 突然 出现 硬盘 扇区 定位 错误 以为 没什么 问题 强制 继续 下载 结果 第二天 电脑 发现 电脑 启动 直接 蓝屏 进不了 xp 然后 试着 多次 重启 结果 出现 xp 欢迎 界面 立刻 变成 蓝屏 事件 发展 根据 以往 习惯 或者说 经验 选择 直接 重装系统 ghost xp 盘装 几分钟 装好 然后 重启 欢迎 界面 蓝屏 至此 猜测 也许 电脑 什么 问题 ghost 盘装 进去 换成 ghost 系统 检测 硬件 最后 给出 无法 找到 安装 系统 硬盘 事件 二度 发展 这个 时候 知道 这个 硬盘 问题 于是 问题 交换 进入 系统 发现 资源管理 里面 已经 看不到 分区 同时 进入 计算机管理 磁盘 管理 仍然 看不到 分区 硬盘 直接 反应 垃圾 然后 网上 搜索 坏消息 竟然 找出 一些 一直 好感 自信 心里 想着 硬盘 硬件 问题 估计 返厂 修理 可怜 资料 事件 转机 关掉 电脑 起来 硬件 管理 里面 不能 看到 于是 重新 打开 电脑 打开 计算机 硬件 管理 终于 一个 惊喜 硬件 管理 里面 看到 然后 推测 是不是 硬盘 于是 打开 发现 没有 坏道 竟然 健康 度为 其中 经过 一番 折腾 最后 认为 分区表 丢失 回到 正确轨道 怎么 这么 于是 上网 搜集 分区表 修复 软件 下载 分区表 医生 直接 开始 修复 扫描 最后 时候 发现 进行 下去 这才 起来 我新盘 地方 没有 格式化 不会 进行 扫描 发现 真是 这个 软件 失败 网上 看到 一个 软件 救星 扫描 扫描 考研 时间 几次 扫到 一半 关机 下次 回来 继续 扫描 终于 一天 挂机 一天 晚上 回来 一看 于是 一番 不停 折腾 最后 今晚 发现 testdisk 不用 全部 扫描 找到 所有 分区 同时 注意 分区 标志 一定 设置 就是 primary deleted logical 几个 标志 位要 设置 然后 重启 可以 本次 事件 总结 testdisk 一个 非常 软件 真的 很棒 允许 扫描 结果 直接 可以 操作 这是 ptdd 没有 功能 所以 分区表 丢失 修复 必然 要用 testdisk 不用 等到 扫描 出现 分区 扫出来 分区 标志 一定 设置 即主 分区 还是 逻辑 分区 这样 才能 完整 系统 恢复 下次 遇见 硬盘分区 不见 或者 磁盘 管理 看不到 或者 磁盘 问题 打不开 试一试 testdisk 因为 出现 分区 不见 情况 可能 磁盘 坏道 这类 故障 能干 出来
91,vi编辑器命令,vi 编辑器 命令 vi 编辑器 文字说明 模式 命令 模式 编辑 模式 末行 模式 切换 方式 命令 模式 编辑 模式 编辑 模式 esc 命令 模式 命令 模式 末行 模式 功能 命令 模式 command mode 控制 光标 移动 删除 字符 段落 复制 编辑 模式 insert mode 新增 文字 修改 文字 末行 模式 last line mode 保存 文件 离开 vi 以及 其他 设置 命令 模式 命令 命令 说明 光标 移动 一格 光标 移动 一格 光标 向下 移动 一格 光标 向上 移动 一格 数字 光标 移动 该行 行首 光标 移动 该行 行末 光标 移动 屏幕 顶端 光标 移动 屏幕 中间 光标 移动 屏幕 底端 gg 光标 移动 文章 首行 光标 移动 文章 尾行 光标 移动 单词 删除 光标 所在 字符 删除 光标 字符 dd 删除 光标 所在 dd 光标 所在 向下 删除 数字 删除 光标 所在 行尾 取代 光标 一个 字符 光标 处向 替换 esc 结束 取消 上步 操作 取消 目前 所有 操作 yy 复制 光标 所在 复制 内容 放在 光标 所在 下行 编辑 模式 命令 命令 说明 光标 插入 文本 光标 所在 行后 插入 文本 光标 插入 文本 光标 所在 行前 插入 文本 光标 所在 行下 插入 小写字母 光标 所在 行上 插入 大写字母 末行 命令 命令 说明 创建 文件 加载 文件 保存 文件 强行 操作 强行 保存 文件 退出 强行 退出 wq 保存 退出 wq 强行 保存 退出 set nu 显示 行号 set nonu 显示 行号 搜索 任意 字符串
94,搜索关键词高亮显示,搜索 关键词 高亮 显示 一个 搜索 页面 时候 经常 需要 输入 搜索 关键词 高亮 红色 标记 出来 js 方便 实现 一点 jquery 方便 就是 这么 div rest html function return this html replace php echo request search keyword span class red php echo request search keyword span 看到 前面 选择 替换 然后 正则表达式 搜索 关键词 一个 span class red span 这样 样式 标签 然后 整个 里面 关键词 高亮 方便 一句
97,PHP IE下载时提示”无法复制 无法读取源文件或磁盘”的解决办法,php ie 下载 提示 无法 复制 无法 读取 源文件 磁盘 解决办法 之前 一篇 php 下载 指定 文件 今天 终于 遇到 一个 问题 ie 另存 下载 提示 无法 复制 无法 读取 源文件 磁盘 一步 一步 调式 发现 header 报错 因为 测试 php html 混合 之前 没有 任何 输出 就是 报错 费大劲 解决 这个 问题 php html 代码 之间 加个 空行 header 报错 但是 ie 无法 另存 照样 出现 仔细检查 代码 尝试 任何 可能性 试对 解决办法 找到 代码 header content type application octet stream 修改 header content type application octet stream charset utf8 cdata syntaxhighlighter config clipboardswf http crazyant net js code clipboard swf syntaxhighlighter all ok 可以 正常 下载 做个 记录
99,PHP中文乱码解决,php 中文 乱码 解决 网上 转载 但是 代码 完全 补充 再发 通过 content type 设置 application octet stream 可以 动态 生成 内容 当作 文件 下载 相信 这个 大家 那么 content disposition 设置 下载 文件名 这个 不少 知道 基本上 下载 程序 这么 php filename document txt header content type application octet stream header content disposition attachment filename filename print hello 这样 浏览器 打开 之后 可以 下载 document txt 但是 如果 filename utf 编码 有些 浏览器 无法 正常 处理 比如 上面 那个 程序 稍稍 一下 php filename 中文 文件名 txt header content type application octet stream header content disposition attachment filename filename print hello 程序 保存 utf 编码 访问 ie6 下载 文件名 乱码 ff3 下载 文件名 只有 中文 两个 opera 一切正常 输出 header 实际上 样子 content disposition attachment filename 中文 文件名 txt cdata syntaxhighlighter config clipboardswf http crazyant net js code clipboard swf syntaxhighlighter all 其实 按照 rfc2231 定义 语言 编码 content disposition 应该 这么 定义 content disposition attachment filename utf8 b6% e5% 90% 8d txt cdata syntaxhighlighter config clipboardswf http crazyant net js code clipboard swf syntaxhighlighter all filename 后面 之前 要加 filename 值用 单引号 分成 三段 分别 字符集 utf8 语言 urlencode 文件名 最好 加上 双引号 否则 文件名 空格 后面 部分 firefox 显示 出来 注意 urlencode 结果 php urlencode 函数 结果 不太 相同 php urlencode 空格 替换成 这里 需要 替换成 20 经过 试验 发现 几种 主流 浏览器 支持 情况 如下 ie6 attachment filename url 编码 之后 utf 文件名 ff3 attachment filename utf 文件名 attachment filename utf8 url 编码 之后 utf 文件名 opera9 attachment filename utf 文件名 safari3 win 貌似 支持 上述 方法 不行 这样 看来 程序 必须 这样 才能 支持 所有 主流 浏览器 以下 代码 适用 页面 utf 编码 情况 不是 iconv 文件名 转码 php filename 中文 文件名 txt encoded filename urlencode filename encoded filename str replace 20 encoded filename ua server http user agent header content type application octet stream if preg match msie ua header content disposition attachment filename encoded filename else if preg match firefox ua header content disposition attachment filename utf8 filename else header content disposition attachment filename filename print abc cdata syntaxhighlighter config clipboardswf http crazyant net js code clipboard swf syntaxhighlighter all
103,文件下载代码-来自PBDigg,文件 下载 代码 来自 pbdigg disposition isimg attachmentpath inline attachment db charset utf && attdata filename convert encoding utf gbk attdata filename strpos server http user agent msie false && attdata filename urlencode attdata filename header cache control max age 31536000 header expires gmdate timestamp 31536000 gmt header last modified gmdate attdata uploaddate gmt header content type attdata filetype header content encoding none header content disposition disposition filename attdata filename header content length filesize attachmentpath header content transfer encoding binary readfile attachmentpath cdata syntaxhighlighter config clipboardswf http crazyant net js code clipboard swf syntaxhighlighter all
105,PHP安全笔记,php 安全 笔记 magic quotes 选项 php ini 中中 三个 magic quotes 开头 选项 magic quotes gpc 如果 on 的话 自动 转义 get post cookie 数据 这是 为什么 我们 url 输入 show tables -- 有时候 失败 原因 因为 转义 magic quotes runtime 如果 on 自动 转义 来自 数据库 字符串 数据 magic quotes sybase 会用 单引号 代替 斜杠 转义 我们 可以 使用 addslashes 函数 达到 同样 目的 不过 有时候 得用 stripslashes 取消 转义 php 命令 执行 函数 system 执行 一个 外部 应用程序 显示 输出 结果 exec 执行 一个 外部 应用程序 passthru 执行 一个 unix 系统命令 返回 原始 输出 shell exec 执行 shell 命令 返回 输出 字符串 运算符 shell exec 功能 相同 system 举例 列出 c盘 内容 phpecho pre last line system dir retval echo pre echo 命令 输出 最后 一行 last line br echo 命令 返回值 retval exec 执行 外部 应用程序 列出 c盘 内容 php output array echo pre last line exec dir output echo pre while list key value each output echo value br echo 命令 输出 最后 一行 last line br echo 命令 返回值 retval string shell exec string cmd phpecho pre output shell exec dir echo pre echo nl2br output br phpecho pre output dir echo pre echo nl2br output br eval 函数 攻击 下面 例子 我换 参数 system dir 执行 失败 是因为 php ini magic quotes for incoming get post cookie data magic quotes gpc on 这句 导致 system 括号 双引号 转义 导致 执行 失败 php myvar varname if isset get arg arg get arg arg 参数 可以 替换成 system 造成 命令 注入 攻击 eval myvar arg eval 能够 执行 里面 字符串 php 代码 echo myvar myvar 防范 命令 注入 攻击 eval 注入 攻击 方法 使用 函数 escateshellarg 函数 过滤 传来 字符串 参数 即可 客户端 脚本 攻击 sql insertion 客户端 脚本 攻击 就是 用户 留言板 框内 输入 js 脚本 然后 别人 中招 解决 方法 就是 html 输出 过滤 php 中有 两种 方法 可以 进行 html 输出 过滤 使用 strip tags 删除 字符串 php html 标签 使用 htmlspecialchars 函数 来讲 特殊字符 转换成 html 编码 不是 执行 这是 解决 问题 最佳 方法 网站 脚本 攻击 xss 解决 方法 简单 仍然 使用 htmlspecialchars 来自 url 参数 过滤 一下 即可 这样 不让 来自 url js 代码执行 ok 如果 表单 中用 action server php self 或者 action script name 时候 xss 注入 解决 方法 action 后面 url 加上 htmlspecialchars 过滤 action 写成 action 默认 提交 自身 页面 所以 必要 情况 用于 表单 自身 处理 情况 sql 注入 攻击 防御 方法 如果 确定 整数 intval 过滤 参数 如果 确定 浮点数 floatval doubleval 函数 过滤 如果 字符串 addslashes 函数 单引号 双引号 斜杠 null 字符 转义 注意 php ini magic quotes gpc 如果 on 那么 字符串 引号 自动 加上 斜杠 转义 那么 如果 我们 加上 addslashes 函数 两个 斜杠 使得 sql 语句 出现 一个 斜杠 执行 会出 错误 解决 方法 使用 get magic quotes gpc 判断 是不是 该值 设置 on 如果 on 返回 如果 offf 返回
107,PHP输出Excel实例代码,php 输出 excel 实例 代码 这里 使用 phpexcel 开源 一个 完整 实例 php require once .. includes function php 提供 sql 注入 检测 函数 inject checkrequire once .. class db php db 操作 自己 扩展 一下 db new db if get show year get show year inject check get show year else echo script location href server request uri script return 查出 开设 预约 班级 学生名单 sql select from bishe student student where bishe student sno student sno if get show year && get show year lagreyear get show year sql and bishe student time get show year 01 01 00 00 00 and bishe student time lagreyear 01 01 00 00 00 sql order by bishe student time asc rs db query sql php 代码 开始 能够 输出 excel 文件 准备 第一步 开头 操作 包括 引入 设定 文件 基本 属性 require once .. excel classes phpexcel php require once .. excel classes phpexcel writer excel5 php 单元格 字母 坐标 colx array aa ab ac ad ae af ag ah ai ak al am an ao ap aq ar as at au av aw ax ay az 创建 一个 处理 对象 实例 objexcel new phpexcel 创建 文件格式 写入 对象 实例 uncomment objwriter new phpexcel writer excel5 objexcel 设置 文档 基本 属性 objprops objexcel getproperties objprops setcreator gbktoutf8 计算机 学院 专业 实践 中心 objprops setlastmodifiedby gbktoutf8 计算机 学院 专业 实践 中心 objprops settitle gbktoutf8 毕业设计 预约 学生 objprops setsubject gbktoutf8 毕业设计 预约 学生 objprops setdescription gbktoutf8 毕业设计 预约 学生 objprops setkeywords gbktoutf8 毕业设计 预约 学生 objprops setcategory gbktoutf8 毕业设计 预约 学生 设置 当前 sheet 索引 用于 后续 内容 操作 一般 只有 使用 多个 sheet 时候 需要 显示 调用 缺省 情况 phpexcel 自动 创建 第一个 sheet 设置 sheetindex objexcel setactivesheetindex objactsheet objexcel getactivesheet 设置 当前 活动 sheet 名称 objactsheet settitle sheet1 设置 宽度 function setwidth index width global objactsheet objactsheet getcolumndimension gbktoutf8 index setwidth width 宽度 设置 for 51 ++ echo colx ind colx setwidth gbktoutf8 ind 11 objactsheet getrowdimension setrowheight 30 objactsheet getrowdimension setrowheight 20 objactsheet getrowdimension setrowheight 16 函数 设置 border function setborder index global objactsheet objactsheet getstyle index getborders gettop setborderstyle phpexcel style border border thin objactsheet getstyle index getborders getleft setborderstyle phpexcel style border border thin objactsheet getstyle index getborders getright setborderstyle phpexcel style border border thin objactsheet getstyle index getborders getbottom setborderstyle phpexcel style border border thin objactsheet getstyle index getalignment sethorizontal phpexcel style alignment horizontal center objactsheet getstyle index getalignment setvertical phpexcel style alignment vertical center objactsheet getstyle index getalignment setwraptext true 设置 function setvalue index value global objactsheet objactsheet setcellvalue index gbktoutf8 value 设置 function setvaluegbk index value global objactsheet objactsheet getcell index setvalueexplicit value phpexcel cell datatype type string 合并 单元格 function merge fc lc global objactsheet objactsheet mergecells fc lc 开始 写入 数据 lastindex 10 objactsheet setcellvalue a1 gbktoutf8 毕业设计 上机 预约 学生 合并 单元格 objactsheet mergecells a1 colx lastindex 设置 样式 objstylea1 objactsheet getstyle a1 objstylea1 getalignment sethorizontal phpexcel style alignment horizontal center objfonta1 objstylea1 getfont objfonta1 setname courier new objfonta1 setsize 18 objfonta1 setbold true rowindexb function showbottomrows xuhao 序号 xuehao xingming 姓名 bishelaoshi 毕设 老师 bishetimu 毕设 题目 phone 电话 email email beizhu 备注 global colx global rowindexb colindexb 分三步 设值 合并 边框 序号 setvalue colx colindexb rowindexb xuhao merge colx colindexb rowindexb colx colindexb rowindexb colindexb colindexb setvalue colx colindexb rowindexb xuehao merge colx colindexb rowindexb colx colindexb rowindexb colindexb colindexb 姓名 setvalue colx colindexb rowindexb xingming merge colx colindexb rowindexb colx colindexb rowindexb colindexb colindexb 毕设 老师 setvalue colx colindexb rowindexb bishelaoshi merge colx colindexb rowindexb colx colindexb rowindexb colindexb colindexb 毕设 题目 setvalue colx colindexb rowindexb bishetimu merge colx colindexb rowindexb colx colindexb rowindexb colindexb colindexb 电话 setvalue colx colindexb rowindexb phone merge colx colindexb rowindexb colx colindexb rowindexb colindexb colindexb email setvalue colx colindexb rowindexb email merge colx colindexb rowindexb colx colindexb rowindexb colindexb colindexb 备注 setvalue colx colindexb rowindexb beizhu merge colx colindexb rowindexb colx colindexb rowindexb colindexb colindexb for xx xx lastindex xx ++ setborder colx xx rowindexb rowindexb ++ showbottomrows 表格 头部 结束 第一步 结束 第二步 可以 开始 打印 数据 下面 主要 函数 里面 order while row db getrows rs showbottomrows order ++ row sno row sname row bishe teacher row bishe title row bishe phone row bishe email 刷新 border for lastindex ++ objstylea3 objactsheet getstyle a3 objstylea3 getborders gettop setborderstyle phpexcel style border border thin objstylea3 getborders getleft setborderstyle phpexcel style border border thin objstylea3 getborders getright setborderstyle phpexcel style border border thin objstylea3 getborders getbottom setborderstyle phpexcel style border border thin objstylea3 getalignment sethorizontal phpexcel style alignment horizontal center objstylea3 getalignment setvertical phpexcel style alignment vertical center objactsheet duplicatestyle objstylea3 a3 colx lastindex mysql num rows result stulist objactsheet duplicatestyle objstylea3 a3 colx lastindex db getrowsnum rs cancel time date ymdhis outputfilename cancel time bisheyuyuestudentlist xls 文件 objwriter save .. temp outputfilename header content type application octet stream header content disposition inline filename get show year 毕业设计 上机 预约 学生 xls readfile .. temp outputfilename echo script language javascript location href server request uri script cdata syntaxhighlighter config clipboardswf http crazyant net js code clipboard swf syntaxhighlighter all
109,java环境变量配置,java 环境变量 配置 安装 jdk 安装 过程 可以 自定义 安装 目录 信息 例如 我们 选择 安装 目录 java jdk1.5 08 安装 完成 右击 电脑 点击 属性 选择 高级 选项卡 点击 环境变量 系统 变量 设置 属性 java home path classpath 大小写 无所谓 存在 点击 编辑 存在 点击 新建 java home 指明 jdk 安装 路径 就是 刚才 安装 时所 选择 路径 java jdk1.5 08 路径 包括 lib bin jre 文件夹 变量 最好 设置 因为 以后 运行 tomcat eclipse 需要 变量 path 使得 系统 可以 任何 路径 识别 java 命令 java home% bin java home% jre binclasspath java 加载 class or lib 路径 只有 classpath java 命令 才能 识别 java home% lib dt jar java home% lib tools jar 要加 表示 当前 路径 java home% 就是 引用 前面 指定 java home 开始 运行 键入 cmd 键入 命令 java version java javac 几个 命令 出现 画面 说明 环境变量 配置 成功 收工 下面 开始 第一个 java 程序 下面 讲讲 java 几个 环境变量 含义 linux 配置 方法 通常 我们 需要 设置 三个 环境变量 java home path classpath java home 环境变量 就是 java 所在 目录 一些 java 软件 一些 java 工具 需要 用到 变量 设置 path classpath 时候 可以 使用 变量 方便 设置 path 指定 一个 路径 列表 用于 搜索 可执行文件 执行 一个 可执行文件 如果 文件 不能 当前 路径 找到 依次 寻找 path 一个 路径 直至 找到 或者 path 路径 不能 找到 报错 java 编译 命令 javac 执行命令 java 一些 工具 命令 javadoc jdb 安装 路径 bin 目录 因此 我们 应该 路径 添加 path 变量 classpath 指定 一个 路径 列表 用于 搜索 java 编译 或者 运行 需要 用到 classpath 列表 除了 可以 包含 路径 可以 包含 jar 文件 java 查找 时会 这个 jar 文件 当作 一个 目录 进行 查找 通常 我们 需要 jdk 安装 路径 jre lib rt jar linux jre lib rt jar 包含 classpath path classpath 指定 路径 列表 列表 各项 各个 路径 之间 使用 分隔符 分隔 windows 分隔符 分号 linux 分隔符 冒号 分别 说明 三个 环境变量 windows linux 如何 设置 不过 在此之前 我们 需要 做个 假设 假设 jdk windows 安装 路径 jdk linux 安装 路径 usr local jdk 那么 安装 jdk 至少 包括 如下 内容 jdk usr local jdk -- bin -- demo -- include -- jre -- bin -- lib -- lib windows 设置 windows 使用 set 命令 设置 环境变量 为了 一次 启动 计算机 设置 这些 环境变量 应该 系统盘 根目录 autoexec bat 文件 进行 设置 set java home jdkset path java home% bin windows windows commandset classpath java home% jre lib rt jar 有些 版本 windows 不能 变量名 替换 环境变量 内容 那么 只好 直接 jdk 不是 java home% 另外 windows windows command windows 自动 加入 路径 所以 可以 设置 去掉 如果 autoexec bat 已经 设置 path 需要 java home% bin 原来 设置 path 那条 语句 就行了 classpath 可以 根据 需要 设置 或者 加入 其它 路径 比如 自己 一些 放在 java 可以 java 添加 classpath set classpath java home% jre lib rt jar java classpath 包含 一个 当前目录 包含 目录 可以 任意 目录 下去 执行 需要 用到 目录 某个 java 程序 即使 路径 并未 包含 classpath 可以 原因 简单 虽然 没有 明确 路径 包含 classpath classpath 此时 代表 路径 假设 java 目录 下有 运行 hellojava class 那么 set classpath jdk jre lib rt jar 设置 classpath 环境变量 注意 最后 一个 cd java java 目录 java java hellojava 运行 hellojavahello java 运行 结果
111,AJAX中文乱码PHP完美解决(IE和Firefox兼容),ajax 中文 乱码 php 完美 解决 ie firefox 兼容 最近 一个 项目 遇到 ajax 中文 乱码 问题 经过 一个 下午 努力 终于 完美 解决 现将 心得 下来 希望 那些 困绕 这个 问题 头痛 不已 人们 有所 帮助 众所周知 使用 ajax 传送 接收 中文 参数 如果 客户端 服务器 相应 处理 出现 乱码 问题 网上 相应 文章 不少 但是 情况 从中 符合 自己 理想 答案 今天 就是 网上 很多 但是 差不多 asp jsp 比较 php 所以 最后 找到 自己 满意 答案 ajax 中文 乱码 可以 大概 分为 两中 第一种 服务器端 发送 中文 参数 xmlhttp open get post url true 服务 器端 接收 乱码 这个 今天 遇到 问题 处理 之前 ie 正常 但是 firefox 里面 出现 乱码 接收 参数 输出 一个 没有 发现 什么 问题 郁闷 然后 查询 语句 输出 观察 这里 数据库 查出 参数 相关 东西 终于 发现 问题 ie firefox 参数 一样 虽然 汉字 一样 但是 前后 连接 细小 区别 于是 认定 编码 问题 网上 查找 相关 资料 没能 解决问题 但是 得到 一些 启示 ajax 发送数据 采用 utf 编码 方式 发送 所以 服务器端 进行 编码 转换 这里 页面 采用 gb2312 编码 如果 采用 utf 的话 应该 不会 这步 问题 所以 服务器端 进行 utf gb2312 str iconv utf gb2312 str 然后 测试 firefox 顺利 解决 问题 以为 公告 可是 ie 测试 发现 ie 出现 问题 服务器端 接收 参数 没值 这下 郁闷 看到 发送 设置 setrequestheader content type application www form urlencoded 找到 问题所在 然后 发送 那里 进行 参数 编码 geturl encodeuri geturl geturl encodeuri geturl 两次 可以 写成 geturl encodeuri encodeuri geturl xmlhttp open get geturl true 然后 服务器端 进行 url 解码 str urldecode str 解码 str iconv utf gb2312 str 编码 转换 注意 解码 必须 编码 转换 前面 不然 得不到 正确 保存 测试 ie firefox 正常 第二种 就是 服务器端 客户端 输出 中文 出现 乱码 问题 网上 答案 比较 解决 为了 避免 各位 查找 这里 copy 原因 ajax 接收 responsetext responsexml 时候 按照 utf 格式 解码 如果 服务器 发送 数据 不是 utf 格式 那么 接收 responsetext responsexml 可能 乱码 解决办法 服务器 指定 发送数据 格式 jsp 文件 response setcontenttype text text charset utf 返回 txt 文本文件 或是 response setcontenttype text xml charset utf 返回 xml 文件 php header content type text html charset gb2312 asp response charset gb2312 jsp response setheader charset gb2312 本文 转自 网络
113,phpmyadmin无法加载mcrypt的解决方法,phpmyadmin 无法 加载 mcrypt 解决 方法 无法 加载 mcrypt 外链 英语 扩展 检查 php 配置 很多 朋友 运行 phpmyadmin 程序 见到 这样 提示 无法 加载 mcrypt 外链 英语 扩展 检查 php 配置 那么 遇到 这样 问题 应当 怎么 解决 下面 我们 一点一点把 这个 问题 解决 无法 载入 mcrypt 扩展 检查 php 配置 出现 以下 几种 情况 可能 造成 运行 phpmyadmin 程序 提示 无法 载入 mcrypt 扩展 br 检查 php 配置 错误 提示 没有 正确 安装 mysql 数据库 系统 服务 mysql 相关 服务 没有 启动 查看 正确 安装 mysql 方法 系统 system32 windows system32 目录 缺少 libmcrypt dll 文件 解决 方法 找到 php 目录 libmcrypt dll libmcrypt dll 复制到 windows system32 目录 然后 重新启动 web 服务 windows 目录 php ini 文件 没有 extension php mcrypt dll 前面 一个 所以 不能 使用 相应 功能 解决 方法 打开 php ini 文件 找到 extension php mcrypt dll 改成 extension php mcrypt dll 去掉 前面 生效 mysql 目录 没有 读取 权限 正确 目录 权限 如下 administrator 完全 控制 system 完全 控制 user 读取 运行 其他 用户 权限 全部 删除 保留 安全性 不高 建议 删除 然后 重启 mysql 服务 web 服务 建议 修改 此项 重启 一下 服务器 试过 所有 办法 之后 还是 不行 其实 还有 一步 网上 很少 解决办法 winxp iis php5 mysql5 电脑 右键 属性 高级 环境变量 系统 变量 新建 phprc php php 什么 目录 就是 什么 文章 来源于 网络
115,删除记录之前-切记要检查是不是存在该记录,删除 记录 之前 切记 检查 是不是 存在 记录 删除 一条 记录 一定 检查 记录 是不是 存在 如果 空值 可能 删掉 整个 2010 11 04 教训 用户 因为 网速慢 三次 同一个 删除 按钮 结果 数据库 一个 清空 原因 第一次 删掉 第二次 数据库 已经 存在 该值 结果 整个 表删 代码 如此 严谨 检讨
117,项目经历2-电子台账系统,项目 经历 电子 台账 系统 电子 台账 系统 开发 日期 2010 10 10 2010 10 18 主要 设计 以下 几个 方面 无限 分类 数据库 设计 数据库 文档 系统 同步 通过 数据库 数据 读取 文件 地址 获得 文件 路径 目录 超级 管理员 二级 管理员 普通用户 用户 管理 涉及 搜索 功能 关键字 分类 搜索 文件 管理 功能 登陆 日志 记录 管理 一个 选课 系统 这次 开发 发现 非常 快速 得到 老大 赏识 感觉 非常 每天 选课 系统 那样 起早贪黑 不过 充实 学生 阶段 没有 虚度 沉迷于 程序 逻辑 界面 美观 设计 之中 知道 是不是 值得 知道 简单 web 开发 值不值得 这么 不过 程序 相通 我要 一直 下去 小钱 重要 以后 经历 人生 添彩 感谢 女朋友 支持 没有 怨言 没有 时间 感谢 老大 关照 这个 系统 一次 体会 coding 乐趣 满足 老大 还给 数目 不算 非常 开心 感谢 宿舍 兄弟 每天 以后 有时候 注意 键盘 大声 有空 一定 他们 吃个 陪下罪 感谢 王老师 感谢 老师 他们 选课 系统 真正 项目 开发 上面 提升 没有 他们 机会 没有 这次 神速 完工 呵呵 好像 自己 不过 乙方 可能 满意 这个 不好 那个 不怕 什么 毕竟 一个 星期 这么 多钱 做点 实事 谢谢你们 需求 动力 呵呵 研一 发现 大家 本科 一样 大家 心思 就是 学习 实践 项目 不能 本科 一样 浑浑噩噩 过日子 即使 很累 一定 收获 一定 经历
119,日期选择控件-date_input,日期 选择 控件 date input 一款 jquery 插件 date input script language javascript src .. .. jquery 1.4 js script script type text javascript src jquery date input js script link rel stylesheet href date input css type text css script language javascript function my specific input date input button prev css cursor hand css cursor pointer button next css cursor hand css cursor pointer script input type text id my specific input 美观大方 十分 方便
122,PHP只下载不打开文件,php 下载 打开 文件 转自 http hi baidu com ssfnadn blog item b57b3394eeec0117d21b7018 html 由于 现在 浏览器 已经 可以 识别 格式 txt 文档 格式 所以 如果 只是 txt 文档 一个 文字 链接 的话 可能 只是 打开 一个 新窗口 显示 txt 文件 内容 不能 实现 点击 下载 目的 当然 这个 问题 解决办法 可以 txt 文件 改名 浏览器 认识 文件 比如 rar 这样的话 点击 浏览器 认识 只好 用户 下载 下面 这个 文件 就是 通过 设置 header 设置 文档 格式 实现 点击 下载 目的 页面 传来 两个 变量 file filename 页面 传递 过来 文件 点击 可以 下载 php file get file 下载 文件 文件 目录 filename get filename 这个 只是 文件 名字 header content type application force download header content disposition attachment filename filename readfile file cdata syntaxhighlighter config clipboardswf http crazyant net js code clipboard swf syntaxhighlighter all 首先 设置 content type application force download 强制 下载 接着 第二个 header 函数 设置 下载 文件 注意 这里 filename 包含 路径 文件名 这个 filename 将来 就是 点击 下载 后弹 对话框 里面 文件名 最后 就是 readfile 文件 输出 浏览器 这样 实现 文件 下载
124,Javascript trim()函数实现,javascript trim 函数 实现 javascript 我们 需要 用到 trim 地方 很多 但是 javascript 没有 独立 trim 函数 或者 方法 可以 使用 所以 我们 需要 自己 写个 trim 函数 实现 我们 目的 方案 原型 方式 调用 obj trim 形式 方式 简单 使用 方面 广泛 定义 方式 如下 script language javascript 删除 左右两端 空格 string prototype trim function return this replace 删除 左边 空格 string prototype ltrim function return this replace 删除 右边 空格 string prototype rtrim function return this replace script cdata syntaxhighlighter config clipboardswf http crazyant net js code clipboard swf syntaxhighlighter all 使用 示例 如下 script type text javascript alert document getelementbyid abc value trim alert document getelementbyid abc value ltrim alert document getelementbyid abc value rtrim script 方案 工具 方式 调用 trim obj 形式 方式 可以 用于 特殊 处理 需要 定义 方式 如下 script type text javascript 删除 左右两端 空格 function trim str return str replace 删除 左边 空格 function ltrim str return str replace 删除 右边 空格 function rtrim str return str replace script cdata syntaxhighlighter config clipboardswf http crazyant net js code clipboard swf syntaxhighlighter all 使用 示例 如下 script type text javascript alert trim document getelementbyid abc value alert ltrim document getelementbyid abc value alert rtrim document getelementbyid abc value script cdata syntaxhighlighter config clipboardswf http crazyant net js code clipboard swf syntaxhighlighter all
126,PHP获取IP的多种方式解析,php 获取 ip 多种 方式 解析 转自 http developer.51 cto com art 200911 164514 htmphp 获取 ip 方法 许多种 我们 今天 大家 总结 六种 方法 希望 通过 六种 方法 学习 能够 加深 我们 php 语言 进一步 了解 巩固 我们 掌握 知识 php 获取 ip 方法 php echo br php function getip if empty server http client ip cip server http client ip else if empty server http forwarded for cip server http forwarded for else if empty server remote addr cip server remote addr else cip 无法 获取 return cip echo br cdata syntaxhighlighter config clipboardswf http crazyant net js code clipboard swf syntaxhighlighter all php 获取 ip 方法 php echo br error reporting error warning parse if http server vars http forwarded for ip http server vars http forwarded for elseif http server vars http client ip ip http server vars http client ip elseif http server vars remote addr ip http server vars remote addr elseif getenv http forwarded for ip getenv http forwarded for elseif getenv http client ip ip getenv http client ip elseif getenv remote addr ip getenv remote addr else ip unknown echo ip地址 ip br cdata syntaxhighlighter config clipboardswf http crazyant net js code clipboard swf syntaxhighlighter all php 获取 ip 方法 php echo br iipp server remote addr echo iipp echo br cdata syntaxhighlighter config clipboardswf http crazyant net js code clipboard swf syntaxhighlighter all php 获取 ip 方法 php echo br php user ip server http via server http forwarded for server remote addr user ip user ip user ip server remote addr echo user ip br cdata syntaxhighlighter config clipboardswf http crazyant net js code clipboard swf syntaxhighlighter all php 获取 ip 方法 php echo br function get real ip ip false if empty server http client ip ip server http client ip if empty server http forwarded for ips explode server http forwarded for if ip array unshift ips ip ip false for count ips ++ if eregi 10 172 16 192 168 ips ip ips break return ip ip server remote addr echo get real ip echo br cdata syntaxhighlighter config clipboardswf http crazyant net js code clipboard swf syntaxhighlighter all php 获取 ip 方法 php echo br if getenv http client ip onlineip getenv http client ip elseif getenv http forwarded for onlineip getenv http forwarded for elseif getenv remote addr onlineip getenv remote addr else onlineip http server vars remote addr echo onlineip echo br cdata syntaxhighlighter config clipboardswf http crazyant net js code clipboard swf syntaxhighlighter all
128,PHP删除无限分类并同时删除它下面的所有子分类的方法,php 删除 无限 分类 同时 删除 下面 所有 分类 方法 转帖 今天 晚上 时候 一个 以前 学员 网上 怎么 删除 一个 无限 分类 时候 同时 删除 下面 所有 分类 代码 稍微 整理 一下 发出 放在 php 学员 问答 里面 方便 以后 查看 act isset get act trim get act if act del sort id isset get id intval get id sort ids sort id childrenids getchildrenids sort id if empty childrenids sort ids childrenids sql delete from article sort where sort id in sort ids res mysql query sql if res alert 删除 成功 exit else alert 删除 失败 exit cdata syntaxhighlighter config clipboardswf http crazyant net js code clipboard swf syntaxhighlighter all getchildrenids 这个 函数 以前 已经 出来 清楚 参考 自定义 函数 获取 无限 分类 id 子类 id 自定义 函数 获取 无限 分类 id 子类 id 获取 无限 分类 id 下面 子类 id sort id sort id getchildrenids sort id sql .. where sort id in sort id function getchildrenids sort id global db ids sql select from db table article sort where parent id sort id res db query sql if res while row db fetch assoc res ids row sort id ids getchildrenids row sort id return ids cdata syntaxhighlighter config clipboardswf http crazyant net js code clipboard swf syntaxhighlighter all
130,PHP-非常好用的文件操作类,php 非常 好用 文件 操作 php 本类 文件 操作 实现 文件 建立 写入 删除 修改 复制 移动 创建 目录 删除 目录 列出 目录 文件 功能 路径 后面 别忘了 author 路人 copyright myself link url http www phpr cn www phpr cn url class fileoperate var path 文件 路径 var name 文件名 var result 文件 操作 结果 方法 用来 path 目录 创建 name 文件 param string path param string name function creat file path name 建立 文件 filename path name if file exists filename echo 文件 已经 存在 请换个 文件名 else if file exists path touch name rename name filename echo 文件 建立 成功 br else echo 目录 存在 检查 方法 删除 path 路径 name 文件 param string type path param string type name function del file path name 删除 文件 filename path name if file exists filename echo 文件 存在 确认 路径 是否 正确 else if unlink filename echo 文件 删除 成功 else echo 文件 删除 失败 方法 filename 文件 重命名 newname 文件 param string type filename param string type newname function rename file filename newname 文件 目录 更名 path pathinfo filename dir path dirname 得到 文件 路径 newfilename dir newname if file exists filename 判断 文件 是否 存在 result rename filename newfilename if result true echo 文件 更名 成功 else echo 文件 更名 失败 else echo 文件 存在 方法 用来 列出 目录 文件 目录 switch 字母 顺序 列出 所有 目录 文件 switch 列出 目录 switch 列出 文件名 param string type path param int type switch function list filename path switch 列出 文件 目录名 if file exists path dir scandir path if switch 如果 switch 字母 顺序 列出 所有 目录 文件 for count dir ++ if dir and dir .. echo dir br if switch switch 列出 目录 for count dir ++ is dir path dir if dir and dir .. and true echo dir br if switch switch 列出 文件名 for count dir ++ is dir path dir if dir and dir .. and false echo dir br 方法 path 目录 创建 名为 dirname 目录 param string type path param string type dirname function creat dir path dirname 创建 目录 if file exists path result mkdir path dirname if result echo 目录 建立 成功 else echo 目录 建立 失败 else echo 路径 存在 重新 输入 方法 删除 pathname 目录 包括 目录 所有 文件 子目录 param string type pathname function del dir pathname 删除 目录 目录 所有 文件夹 文件 if is dir pathname exit 输入 不是 一个 目录 检查 handle opendir pathname while fileordir readdir handle false if fileordir && fileordir .. is dir pathname fileordir this del dir pathname fileordir unlink pathname fileordir if readdir handle false closedir handle rmdir pathname php op new fileoperate op creat file user files aa3 txt op del file user files aa3 txt op rename file user files aa3 txt 测试 文件 txt echo br op list filename user files op creat dir user files 新建 目录 op del dir user files 新建 目录
132,屏幕取色工具,屏幕 取色 工具 屏幕 取色 工具 mezer tools v1.9 6.2 填写 web 开发 必备 工具 取色 屏幕 直尺 名字 叫做 mezer tools
134,网上选课系统-进度,网上 选课 系统 进度 开始 一些 时间 记不清 不过 因为 过去 时间 觉得 必要 小小 总结 一下 系统 名称 网上 选课 系统 开发方式 php mysql 具体 经历 2009 年末 没有 结束 紧张 考研 时候 学校 公布 网上 选毕设 通知 网上 记得 当天 三楼 一起 自习 几个 同学 mu zhou lin guo wang 回到 宿舍 选课 当天 经过 一个 一个 查看 一个 觉得 基于 web 网上 选课 系统 2010 来学 第二周 老师 老师 大致 几个 毕设 同学 介绍 情况 大家 好好 不过 说明 不好 呵呵 老师 第二周 开始 对系统 总体设计 主要 功能 一个 框图 还有 列表 拿给 老师 老师 不错 给出 改进 意见 两周 完善 功能 流程图 老师 老师 非常 的话 这个 可以 实际 使用 好好 之后 两次 功能 一步 一步 完善 等到 中旬 老师 代码 快到 答辩 时间 之后 一直 311 代码 每天 老师 经常 来看 见到 王老师 两个 老师 一起 需求 答辩 老师 王老师 过来 可以 毕业 答辩 得个 这个 软件 可能 准备 暑假 继续 同时 很多 鼓励 感觉 信心 满满 答辩 结束 老师 过去 已经 申请 这个 软件 开发 经费 好好 暑假 在家 一点 10 来学 做到 20 新学期 开学 这个 软件 暑假 回去 主要 玩玩 游戏 看看 小说 后来 android 不过 代码 很少 然后 大概 12 山东 女朋友 回来 多少 -- 以下 近期 比较清楚 -- 10 按照 放假 王老师 10 回到 西安 12 入住 新区 320 开始 开发 11 之后 每天 有时 开发 14 小时 以上 软件 逐步完善 12 时不时 老师 王老师 添加 功能 心态 良好 代码 巨大 13 20 经过 紧张 几次 调试 忐忑不安 系统 当时 数据 问题 原因 测试 时候 改变 数据库 数据 上线 改过来 qudingdign 同学 第一个 使用 系统 记住 14 20 现在 28 一直 系统 完善 包括 后台 管理员 补选 超级 管理员 设置 普通 管理员 删除 限制 等等 随着 30 研究生 开学 日期 临近 老师 遇到 问题 并且 不时 一些 觉得 不必要 功能 自己 心态 稍微 有点 变化 好像 碰到 自己 心理 舒适 区域 有时 老师 问题 心里 不适 不过 坚持 下来 觉得 其实 就是 真实 工作 老师 客户 客户 衣食父母 上帝 还是 按照 他们 需来 进行 开发 因此 代码 需求 进行 自己 心态 磨练 15 今天 现在 2010 08 28 下午 18 17 超级 管理员 模块 具有 级联 删除 几个 主要 功能 突然 这个 称为 项目 软件 一手 需求 分析 设计 代码 测试 流程 下来 经历 历程 就要 结束 之后 可能 还有 问题 bug 解决 不过 感觉 已经 结束 时候 经过 这次 经历 感觉 自己 php 开发 mysql 数据库 ajax javascrpt 插件 feckeditor phpexcel 分页 等等 得到 快速 掌握 尤其 遇到 问题 直接 上网 答案 快速 解决问题 能力 很大 提升 自己 提升 极大 并且 同时 对系统 美化 过程 页面 设计 水平 有所提高 呵呵 这是 一次 锻炼 机会 抓住 这个 机会 自己 感到 骄傲 老师 几天 给我发 补助 高兴 不管 人生 第一笔 自己 实力 感到 兴奋 快乐 充满 人生 一步 信心 学习 努力 奋斗 我会 越来越 实力 生活 越来越 美好
136,php实现当前用户在线人数,php 实现 当前 用户 在线 人数 本文 转自 http www php100 com html webkaifa php phpyingyong 2010 0508 4462 html 原理 根据 不同 ip 统计 当前 多少 在线 实现 方式 可以 数据库 可以 文本 这里 文本 实现 php date 2010.04 07 author 华夏 之星 php100 com blog http hi baidu com woaidelphi blog user online count php 保存 人数 文件 touch user online 如果 没有 文件 创建 timeout 30 30 动作 认为 掉线 user arr file get contents user online user arr explode rtrim user arr print user arr temp array foreach user arr as value user explode trim value if user getenv remote addr && user time 如果 不是 用户 ip 时间 没有 超时 放入 数组 array push temp user user array push temp getenv remote addr time timeout 保存 用户 信息 user arr implode temp 写入 文件 fp fopen user online flock fp lock ex flock 不能 nfs 以及 其他 一些 网络 文件系统 正常 工作 fputs fp user arr flock fp lock un fclose fp echo 当前 count temp 在线 cdata syntaxhighlighter config clipboardswf http crazyant net js code clipboard swf syntaxhighlighter all
138,获取服务器传来的数据-必须用JS去空格,获取 服务器 传来 数据 必须 js 空格 今天 早上 现在 一直 一个 愚蠢 问题 竟然 一直 发现 如果 str str str sno 这样 下来 str 前面 空格 js 获取 此值 必须 去掉 空格 空格 函数 rstr rstr replace 空格 replace 空格 replace 另外 如果 进行 程序流程 一步 一步 核对 if 停下 一定 同时 输出 if 里面 两个 进行 对比 或者 前面 加上 来看 是否 空格 总结 一下 凡是 字符串 连接 地方 可能 产生 空格 拆分 时候 出现 原来 不想 情况 因此 一定 去掉 前后 空格 尤其 获得 服务器 传来 数据 时候 js 一定 注意 空格 发生 可能
142,mysql-修改root密码的方法,mysql 修改 root 密码 方法 首先 root 账户 登录 命令行 enter password welcome to the mysql monitor commands end with or your mysql connection id is 384server version 5.0 51b community nt log mysql community edition gpl type help or for help type to clear the buffer 下面 一行 而已 单引号 里面 内容 改成 自己 新密码 ok mysql set password password newpassword
144,PHP验证码-类,php 验证码 原文 地址 http www windsfly cn blog article asp id 10131 验证码 文件 createimg class php php version 1.0 author ben date 2008 30 email jinmaodao116 163 com 验证码 文件 int function imagecolorallocate resource image int red int green int blue 一幅 图像 分配 颜色 bool function imagefilledrectangle resource image int x1 int y1 int x2 int y2 int color 画一 矩形 填充 bool function imagerectangle resource image int x1 int y1 int x2 int y2 int col 一个 矩形 bool function imagesetpixel resource image int int int color 一个 单一 像素 class validationcode private width height codenum public checkcode 产生 验证码 private checkimage 验证码 图片 private disturbcolor 干扰 像素 参数 宽度 高度 字符 个数 function __ construct width 80 height 20 codenum this width width this height height this codenum codenum function outimg 输出 this outfileheader 产生 验证码 this createcode 产生 图片 this createimage 设置 干扰 像素 this setdisturbcolor 图片 验证码 this writecheckcodetoimage imagepng this checkimage imagedestroy this checkimage brief 输出 private function outfileheader header content type image png 产生 验证码 private function createcode this checkcode strtoupper substr md5 rand this codenum 产生 验证码 图片 private function createimage this checkimage imagecreate this width this height back imagecolorallocate this checkimage 255 255 255 border imagecolorallocate this checkimage imagefilledrectangle this checkimage this width this height back 白色 imagerectangle this checkimage this width this height border 黑色 边框 设置 图片 干扰 像素 private function setdisturbcolor for 200 ++ this disturbcolor imagecolorallocate this checkimage rand 255 rand 255 rand 255 imagesetpixel this checkimage rand 128 rand 38 this disturbcolor 验证码 图片 逐个 画上 验证码 private function writecheckcodetoimage for this codenum ++ bg color imagecolorallocate this checkimage rand 255 rand 128 rand 255 floor this width this codenum rand this height 15 imagechar this checkimage rand this checkcode bg color function __ destruct unset this width this height this codenum 包含 文件 imgcode php phpsession start require once createimg class php image new validationcode 80 20 图片 长度 宽度 字符 个数 image outimg session validationcode image checkcode 存贮 验证码 session 前台 文件 image php phpsession start test post test test strtoupper trim test submit post submit if isset submit if test session validationcode echo true else echo false html head title image title meta http equiv content type content text html charset utf script language javascript function newgdcode obj url obj src url nowtime new date gettime 后面 传递 一个 随机 参数 否则 ie7 火狐 刷新 图片 script body img src imgcode php alt 看不清楚 一张 align absmiddle style cursor pointer onclick javascript newgdcode this http blog.51 cto com viewpic php refimg this src form method post name form1 action image php input type text name test br input type submit name submit value 提交 form body head html
146,Fckeditor-动态增减按钮的方法,fckeditor 动态 增减 按钮 方法 使用 fckeditor 过程 经常 需要 根据 实际 需要 设置 工具栏 显示 隐藏 工具栏 部分 按钮 默认 情况 fckeditor 显示 全部 工具栏 fckconfig js 中有 两个 工具栏 配置 方案 一个 default 一个 basic 我们 可以 按照 格式 自定义 几个 选项 fckconfig toolbarsets c1 source docprops save newpage preview templates cut copy paste pastetext pasteword print spellcheck undo redo find replace selectall removeformat bold italic underline strikethrough subscript superscript justifyleft justifycenter justifyright justifyfull link unlink anchor style fontformat fontname fontsize textcolor bgcolor fitwindow showblocks about no comma for the last row cdata syntaxhighlighter config clipboardswf http crazyant net js code clipboard swf syntaxhighlighter all 页面 使用 fckeditor 可以 写成 这样 var ofckeditor new fckeditor fckeditor1 ofckeditor toolbarset c1 cdata syntaxhighlighter config clipboardswf http crazyant net js code clipboard swf syntaxhighlighter all
149,phpexcel-自己写的几个非常好用的函数,phpexcel 自己 几个 非常 好用 函数 一个 用到 phpexcel 程序 发现 总是 相关 phpexcel 操作 代码 复制 过来 下次 影响 速度 不说 打乱 原来 程序 思路 于是 干脆 常用 操作 写成 函数 函数 简单 易记 这样 不用 考虑 phpexcel 相关 问题 容易 回到 原来 程序开发 思路 顺风 顺雨 一路 帆风 其实 应该 自己 整理 一个 这样 更好 objexcel setactivesheetindex objactsheet objexcel getactivesheet 函数 设置 borderfunction setborder index global objactsheet objactsheet getstyle index getborders gettop setborderstyle phpexcel style border border thin objactsheet getstyle index getborders getleft setborderstyle phpexcel style border border thin objactsheet getstyle index getborders getright setborderstyle phpexcel style border border thin objactsheet getstyle index getborders getbottom setborderstyle phpexcel style border border thin objactsheet getstyle index getalignment sethorizontal phpexcel style alignment horizontal center objactsheet getstyle index getalignment setvertical phpexcel style alignment vertical center objactsheet getstyle index getalignment setwraptext true 设置 宽度 function setwidth index width global objactsheet objactsheet getcolumndimension gbktoutf8 index setwidth width 设置 背景 function setbg index global objactsheet objactsheet getstyle index getfill setfilltype phpexcel style fill fill pattern darkup objactsheet getstyle index getfill getstartcolor setargb ffffffff 设置 function setvalue index value global objactsheet objactsheet setcellvalue index gbktoutf8 value 合并 单元格 function mergecell fc lc global objactsheet objactsheet mergecells fc lc cdata syntaxhighlighter config clipboardswf http crazyant net js code clipboard swf syntaxhighlighter all
151,PHP操作EXCEL相关,php 操作 excel 相关 phpexcel 操作 excel 方便 尤其 可以 方便 加入 图片 支持 jpg gif png 格式 下载 地址 http www codeplex com phpexcel 下面 总结 几个 使用 方法 include phpexcel php include phpexcel writer excel2007 php 或者 include phpexcel writer excel5 php 用于 输出 xls 创建 一个 excel objphpexcel new phpexcel 保存 excel 2007 格式 objwriter new phpexcel writer excel2007 objphpexcel 或者 objwriter new phpexcel writer excel5 objphpexcel 2007 格式 objwriter save xxx xlsx 直接 输出 浏览器 objwriter new phpexcel writer excel5 objphpexcel header pragma public header expires header cache control must revalidate post check pre check header content type application force download header content type application vnd ms execl header content type application octet stream header content type application download header content disposition attachment filename resume xls header content transfer encoding binary objwriter save php output 设置 excel 属性 创建人 objphpexcel getproperties setcreator maarten balliauw 最后 修改 objphpexcel getproperties setlastmodifiedby maarten balliauw 标题 objphpexcel getproperties settitle office 2007 xlsx test document 题目 objphpexcel getproperties setsubject office 2007 xlsx test document 描述 objphpexcel getproperties setdescription test document for office 2007 xlsx generated using php classes 关键字 objphpexcel getproperties setkeywords office 2007 openxml php 种类 objphpexcel getproperties setcategory test result file 设置 当前 sheet objphpexcel setactivesheetindex 设置 sheet name objphpexcel getactivesheet settitle simple 设置 单元格 objphpexcel getactivesheet setcellvalue a1 string objphpexcel getactivesheet setcellvalue a2 12 objphpexcel getactivesheet setcellvalue a3 true objphpexcel getactivesheet setcellvalue c5 sum c2 c4 objphpexcel getactivesheet setcellvalue b8 min b2 c5 合并 单元格 objphpexcel getactivesheet mergecells a18 e22 分离单元 objphpexcel getactivesheet unmergecells a28 b28 保护 cell objphpexcel getactivesheet getprotection setsheet true needs to be set to true in order to enable any worksheet protection objphpexcel getactivesheet protectcells a3 e13 phpexcel 设置 格式 set cell number formatsecho date set cell number formats objphpexcel getactivesheet getstyle e4 getnumberformat setformatcode phpexcel style numberformat format currency eur simple objphpexcel getactivesheet duplicatestyle objphpexcel getactivesheet getstyle e4 e5 e13 设置 width set column widths objphpexcel getactivesheet getcolumndimension setautosize true objphpexcel getactivesheet getcolumndimension setwidth 12 设置 font objphpexcel getactivesheet getstyle b1 getfont setname candara objphpexcel getactivesheet getstyle b1 getfont setsize 20 objphpexcel getactivesheet getstyle b1 getfont setbold true objphpexcel getactivesheet getstyle b1 getfont setunderline phpexcel style font underline single objphpexcel getactivesheet getstyle b1 getfont getcolor setargb phpexcel style color color white objphpexcel getactivesheet getstyle e1 getfont getcolor setargb phpexcel style color color white objphpexcel getactivesheet getstyle d13 getfont setbold true objphpexcel getactivesheet getstyle e13 getfont setbold true 设置 align objphpexcel getactivesheet getstyle d11 getalignment sethorizontal phpexcel style alignment horizontal right objphpexcel getactivesheet getstyle d12 getalignment sethorizontal phpexcel style alignment horizontal right objphpexcel getactivesheet getstyle d13 getalignment sethorizontal phpexcel style alignment horizontal right objphpexcel getactivesheet getstyle a18 getalignment sethorizontal phpexcel style alignment horizontal justify 垂直 居中 objphpexcel getactivesheet getstyle a18 getalignment setvertical phpexcel style alignment vertical center 设置 column border objphpexcel getactivesheet getstyle a4 getborders gettop setborderstyle phpexcel style border border thin objphpexcel getactivesheet getstyle b4 getborders gettop setborderstyle phpexcel style border border thin objphpexcel getactivesheet getstyle c4 getborders gettop setborderstyle phpexcel style border border thin objphpexcel getactivesheet getstyle d4 getborders gettop setborderstyle phpexcel style border border thin objphpexcel getactivesheet getstyle e4 getborders gettop setborderstyle phpexcel style border border thin 设置 border color objphpexcel getactivesheet getstyle d13 getborders getleft getcolor setargb ff993300 objphpexcel getactivesheet getstyle d13 getborders gettop getcolor setargb ff993300 objphpexcel getactivesheet getstyle d13 getborders getbottom getcolor setargb ff993300 objphpexcel getactivesheet getstyle e13 getborders gettop getcolor setargb ff993300 objphpexcel getactivesheet getstyle e13 getborders getbottom getcolor setargb ff993300 objphpexcel getactivesheet getstyle e13 getborders getright getcolor setargb ff993300 设置 填充 颜色 objphpexcel getactivesheet getstyle a1 getfill setfilltype phpexcel style fill fill solid objphpexcel getactivesheet getstyle a1 getfill getstartcolor setargb ff808080 objphpexcel getactivesheet getstyle b1 getfill setfilltype phpexcel style fill fill solid objphpexcel getactivesheet getstyle b1 getfill getstartcolor setargb ff808080 图片 objdrawing new phpexcel worksheet drawing objdrawing setname logo objdrawing setdescription logo objdrawing setpath images officelogo jpg objdrawing setheight 36 objdrawing setworksheet objphpexcel getactivesheet objdrawing new phpexcel worksheet drawing objdrawing setname paid objdrawing setdescription paid objdrawing setpath images paid png objdrawing setcoordinates b15 objdrawing setoffsetx 110 objdrawing setrotation 25 objdrawing getshadow setvisible true objdrawing getshadow setdirection 45 objdrawing setworksheet objphpexcel getactivesheet 默认 sheet 创建 一个 worksheetecho date create new worksheet object objphpexcel createsheet phpexcel 一个 国外 站点 地址 http phpexcel codeplex com
153,Apache禁止目录访问方法介绍,apache 禁止 目录 访问 方法 介绍 本文 原文 出处 http www leapsoul cn 453 php 网站 开发 基于 web 服务器 php 网站 程序代码 安全 考虑 我们 需要 相关 目录 或者 文件 访问 权限 进行 控制 防止 意外 情况 发生 那么 我们 何来 实现 这种 功能 我们 可以 通过 apache 实现 禁止 目录 访问 禁止 游览 列出 目录 文件 列表 禁止 允许 ip 域名 访问 目录 功能 环境 说明 使用 dedecms dedeampz php 运行 环境 php 版本 5.2 apache 版本 2.2 apache 配置 禁止 目录 访问 禁止 游览 列出 目录 文件 列表 方法 访问 网站 目录 apache 默认 配置 列出 目录 文件 列表 访问 http localhost 时会 列出 相关 目录 文件 列表 我们 可以 通过 修改 apache 配置文件 httpd conf 实现 禁止 列出 目录 文件 列表 方法 如下 打开 apache 配置文件 httpd conf2 找到 directory options indexesallowoverride noneorder allow denyallow from all directory 需要 修改 options indexes options none 即可 根据 php 运行 环境 安装包 不同 options indexes 可能 options indexes followsymlinks 一并 改为 options none 即可 保存 httpd conf 重启 apache 即可 此时 访问 http localhost apache http 403 禁止 访问 错误信息 forbiddenyou don have permission to access on this server apache 单个 多个 目录 禁止 访问 方法 这种 方法 通常 用来 禁止 访问者 访问 后台 管理 目录 或者 程序 目录 方法 如下 打开 apache 配置文件 httpd conf2 创建 directory 比如 禁止 访问 某个 类库 目录 可以 这样 实现 directory var www www leapsoul cn inc order deny allowdeny from all directory 上述 代码 实现 禁止 所有 用户 访问 www leapsoul cn inc 目录 功能 实现 禁止 访问 所有 目录 inc 目录 功能 只要 directory var www www leapsoul cn inc 改为 directory var www www leapsoul cn inc 即可 重启 apache 服务器 其他 说明 允许 禁止 某个 域名 进行 目录 访问 directory var www www leapsoul cn inc order deny allowdeny from abc comallow from apache org directory 上述 代码 实现 禁止 abc com 主机 访问 inc 目录 允许 apache org 主机 访问 inc 目录 功能 允许 禁止 某个 ip 进行 目录 访问 directory var www www leapsoul cn inc order deny allowdeny from 10.1 1.2 allow from 192.168 1.0 255.255 255.0 directory 上述 代码 实现 禁止 ip10.1 1.2 访问 www leapsoul cn inc 目录 允许 ip192.168 子网 主机 访问 www leapsoul cn inc 目录 功能 注意 allow from 192.168 1.0 255.255 255.0 等同于 allow from 192.168 allow from 192.168 1.0 24 至此 通过 配置 apache 服务器 我们 可以 实现 禁止 目录 访问 列出 目录 文件 列表 可以 实现 禁止 访问 单个 或者 多个 目录 可以 访问者 进行 控制 比如 允许 禁止 某个 ip 或者 域名 目录 进行 访问 这些 功能 提高 优化 web 服务器 安全 性能 必不可少 方法 本人 试了试 发现 只注 directory 一项 可以 还要 网站 根目录 注掉
155,php函数-计算两个日期相差多少天,php 函数 计算 两个 日期 相差 多少 php 函数 功能 计算 两个 yyyy mm dd 格式 日期 相差 几天 function getchabetweentwodate date1 date2 date list a1 explode date1 date list a2 explode date2 d1 mktime date list a1 date list a1 date list a1 d2 mktime date list a2 date list a2 date list a2 days round d1 d2 3600 24 return days echo getchabetweentwodate 2010 08 11 2010 08 16 echo br echo getchabetweentwodate 2010 08 16 2010 08 11
157,毕业设计出现的一个严重错误----文件不能相互引用,毕业设计 出现 一个 严重错误 ---- 文件 不能 相互 引用 昨晚 大概 突然 几个 链接 出现 指定 网站 不能 访问 链接 错误 这样 情况 点击 其它 网页 没有 错误 一段时间 极度 郁闷 知道 点半 弄出来 今天下午 经过 一番 删除 测试 终于 发现 解决 突然 不能 访问 指定 网站 存在 问题 解决 方法 发现 paike 表中 注释 xuanke 引用 排课 正常 可以 知道 paike 没有 问题 xuanke 表有 问题 猜测 原因 两个 文件 相互 引用 造成 引用 死循环 错误 原因 已经 出来 就是 两个 文件 如果 相互 引用 的话 造成 引用 死循环 使得 程序 崩溃
159,PHP从checkbox取值,php checkbox 取值 用到 checkbox 时候 发现 php 只能 一个 相关 资料 原因 如下 php 代码 input type checkbox name weeks id weeks value input type checkbox name weeks id weeks value input type checkbox name weeks id weeks value weeks 中括号 不可 否则 php 获取 时候 只能 最后 一个 之后 php 处理 如下 php 代码 方法 weeks post weeks for count weeks ++ echo weeks br 方法 array this request getparameter weeks str implode array echo str
161,PHP-浏览器参数防注入检测函数,php 浏览器 参数 注入 检测 函数 浏览器 url 进行 过滤 防止 进行 sql 注入 function inject check sql str check eregi select insert update delete union into load file outfile sql str 进行 过滤 if check echo 输入 非法 内容 exit else return sql str cdata syntaxhighlighter config clipboardswf http crazyant net js code clipboard swf syntaxhighlighter all
179,筛选出来的常用jQuery幻灯片插件,筛选 出来 常用 jquery 幻灯片 插件 s3slider demo 本款 插件 朋友 网站 看到 当时 感觉 十分 好用 coin slider 页面 演示 幻灯片 插件 感觉 好酷 看着 简单 却觉 那么 得体 适当 一眼 喜欢 jquery easy slides 使用 简单 一眼 看上去 s3slider 有点像 收下 喜欢 这种 简单 nivo slider 号称 the most awesome 大家 可以 试试看 其它 总结 jquery 插件 网址 如下 14 基于 jquery 图片 展示 幻灯片 插件 15 幻灯片 效果 jquery 插件 15 jquery 幻灯片 插件 十个 jquery 图片 画廊 插件 推荐 2010 十佳 jquery 插件
191,jQuery圆角工具jQuery Corner,jquery 圆角 工具 jquery corner 今天 设计 一个 页面 用到 圆角 一下 jquery corner 实在 强大 官网 http jquery malsup com corner
195,非常好用的一款磁盘管理工具Acronis Disk Director Suite,非常 好用 一款 磁盘 管理工具 acronis disk director suite 因为 硬盘 fedora14 结果 发现 所有 ntfs 转化成 fat32 难以 进行 网上 一下 需要 磁盘 管理工具 进行 好几个 发现 这个 真的 acronis disk director suite 提供 一个 下载 地址 http down vista123 com acronisdiskdirector10 rar 网上 搜来 注册码 kmvgl nwapw 5jfce k3jc5 lssfmzq9u6 l9d4w zmt7t 5bn65 ghm264ktaf 35w78 57g6j eaejl njsc2v4wpg kutct tapkq 58eea kr7bh74pev mqvel r97ew mr9pp v76u42lydd qazxb 67zj2 xmmq3 l37el
198,ubuntu官方live cd和dvd下载地址,ubuntu 官方 live cd dvd 下载 地址 官方 dvd cd iso 镜像 下载 地址 包括 各种 版本 正式版 以及 最新 测试版 http cdimage ubuntu com releases
204,"推荐一个可以用u盘安装fedora,ubuntu等Linux的工具",推荐 一个 可以 安装 fedora ubuntu linux 工具 名字 叫做 universal usb installer 上网 可以 出来 下载 地址
206,对自己将来的一些思考,自己 将来 一些 思考 今天 看到 一篇 文章 名字 直白 可以 鞭策 一辈子 文章 不看 绝对 损失 思考 自己 未来 好好 想想 自己 想要 什么 想要 什么样 将来 然后 指导 自己 选择 什么样 职业 自己 静下来 想想 感觉 对于 自己 人生 最终 想要 稳定 那种 生活 不想 最终 还是 别人 手下 打工 最后 心里 感觉 开始 10 二十年 可以 打工 职业生涯 后期 不想 以此 结尾 自由 爸爸 来说 一生 别人 打过工 自己 羡慕 因为 轻松 随意 现在 生活 可是 因为 资本 问题 爸爸妈妈 很累 并且 处于 社会底层 现在 一直 想来 一会 可以 这么 规划 一生 首先 就是 工作 毕竟 开始 什么 没有 没有 资本 没有 经验 没有 经历 没有 人缘 段时间 可以 工作 可以 冒险 10 15 样子 期间 主要 两个 任务 就是 积累 资本 经历 经验 人脉 然后 40 左右 就是 职业 后期 自己 貌似 个体户 类型 事业 不要 很大 不要 很累 不要 风险 符合 自己 心性 一些 事业 孝敬 爸妈 稳定 过日子 不是 劳累 劳累 这样 想想 感觉 不错 呵呵 貌似 云雾 一些 以后 判断 什么 事情 有个 大概 准绳
210,使用DEDE的全国地区分类导入到其它CMS,使用 dede 全国 地区 分类 导入到 其它 cms 因为 用到 全国 地区 分类 直接 查看 dede 数据库 发现 有个表 已经 我们 搞定 就是 dede area 利用 这个 我们 可以 处理 变成 任何 我们 需要 格式 地区 分类 处理过程 这样 两步 进行 第一步 一个 地区 所有 地区 插入 表格 处理 父子关系 第二步 专门 update 处理 父子关系 对应 表格 一个 节点 所有 孩子 id 保存 节点 一个 程序 如下 phprequire once db class php db new db sql select from dede area where reid rs db query sql while row db getrows rs sql1 insert into brand categories upid type name note subcatid values region row name db query sql1 insertid mysql insert id sql2 select from dede area where reid row id rs2 db query sql2 while row2 db getrows rs2 sql3 insert into brand categories upid type name note subcatid values insertid region row2 name db query sql3 sql select from brand categories where type region rs db query sql while row db getrows rs str str row catid sql select from brand categories where upid row catid rs2 db query sql while row2 db getrows rs2 str row2 catid sql2 update brand categories set subcatid str where catid row catid db query sql2 cdata syntaxhighlighter config clipboardswf http crazyant net js code clipboard swf syntaxhighlighter all
215,17个非常有用的PHP类和库,17 非常 有用 php 类和库 本文 转自 互联网 我们 日常 程序开发 当中 使用 一个 而且 成熟 php 可以 减少 很多 手工 编码 通过 这些 通用 api 使用 可以 大大 减轻 我们 开发 工作 今天 我们 重点 介绍 一些 很少 非常 实用 php 组件 有助于 提高 程序 功能 重要 减少 应用程序 开发 时间 数据库 adodb 数据库 抽象类 官网 地址 http adodb sourceforge net adodb 一个 php 数据库 抽象类 支持 数据库 包括 mysql postgresql oracle ms sql sqlite 基本上 涵盖 目前 流行 数据库 而且 完全 开源 免费 可以 方便快捷 应用 程序 当中 具有 非常 可移植性 重要 中文 使用 方法 php db class mysql 数据库 类官 地址 http slaout linux62 org php index html php db class 一个 方便 php mysql 开发 非常简单 灵活 而且 代码 很少 提供 调试 功能 添加 简单 参数 可以 查询 相关 数据表 以及 输出 调试 过程 出现 错误 sqlcache 缓存 数据库 查询 结果 下载 地址 http www phpclasses org package 2646 php cache database query results in files -. htmlsqlcache 只有 一个 php 文件 主要 作用 缓存 sql 数据库 查询 结果 这样 目的 为了 避免 增加 数据库 访问 压力 减少 重复 查询语言 执行 从而 加快 网站 访问速度 iam backup mysql 数据库 备份 恢复 下载 地址 http freshmeat net projects iambackup iam backup 一个 mysql 数据库 备份 恢复 支持 gzip 在线 压缩文件 提高 数据库 备份 恢复 性能 datagrid 数据库 输出 显示 控件 下载 地址 http www apphp com php datagrid index phpdatagrid 一个 使用 php 开发 数据库 显示 控件 简单 新颖 功能强大 而且 专门 web 开发人员 准备 datagrid 绑定 数据库 需要 修改 数据库 可以 修改 输出 方式 也就是说 只用 修改 数据 不用 如何 显示 安全 phpcaptcha 生成 图片 验证码 下载 地址 http www ejeliot com pages 2phpcaptcha 可以 生成 图片 验证码 该类 需要 php 版本 以上 gd1 支持 freetype 字体 支持 用户 输入 安全 处理 下载 地址 http codeassembly com how to sanitize your php input 一个 简单 实用 可以 保证 用户 输入 数据 安全 通过 检查 get post request cookie 提交 数据 过滤 其中 危险 字符 确保 它们 提交 数据 符合 程序 要求 html purifier 下载 地址 http www ecisp cn download htmlpurifier 4.2 ziphtml purifier 一个 标准 html 过滤 使用 php5 编写 具有 删除 验证 设置 安全 白名单 代码 过滤 除清 恶意代码 可以 验证 当前 html 文件 是否 符合标准 phpaes php 加密 下载 地址 http www ecisp cn download phpaes zipphpaes 可以 实现 128 192 256 aes 加密 需要 mcrypt 扩展 可以 用于 任何 php 程序 使用 100 php 开发 完全符合 fips 197 标准 图像处理 phpthumb php 缩略图 下载 地址 http phpthumb gxdlabs com phpthubm 一个 轻量级 图像处理 主要 功能 生成 缩略图 具有 通过 调整 宽度 高度 缩放 图片 建立 剪切 旋转 图像 wideimage 图片 处理 下载 地址 http wideimage sourceforge net demos wideimage 一种 使用 php5 面向 编写 图像处理 一个 php 优点 需要 gd2 可以 处理 任何 图片 该类 具有 常见 图像 操作 功能 并且 简单 易用 php 文本 生成 图像 下载 地址 http www daftlogic com projects text to image htm 这个 可以 文本 转换成 图片 比如 电子邮件 地址 转换成 图片 或者 数字 电话号码 转换成 图片 可以 帮助 减少 信息 互联网 非法 收集 文件 处理 tcpdf 生成 pdf 文件 下载 地址 http www tcpdf org tcpdf 一个 生成 pdf 文档 而且 目前 互联网 唯一 生成 pdf php 支持 utf 编码 支持 双向 加密 pdf 文件 算法 parsecsv 下载 地址 http code google com parsecsv for php parsecsv 一个 用于 读取 csv 文件 php 能够 轻松 处理 csv 数据 支持 识别 逗号 双引号 空格 分割 数据 导出 excel 文件 下载 地址 http phpexcel codeplex com 一个 轻量级 简单 快速 php 数据 导出 excel 文件 支持 设置 excel 文件 标题 作者 标题 描述 ... 多个 工作 不同 字体 样式 单元格 边框 样式 填充 渐变 功能 可以 添加 图片 电子表格 图表 图形 xml swf charts 图表 生成 下载 地址 http www maani us xml charts xml swf charts 一个 简单 功能强大 图表 生成 工具 xml 文件 读取 生成 具有 吸引力 数据 xml 数据源 可以 使用 任何 语言 脚本 生成 php asp jsp jpgraph 图表 生成 下载 地址 http jpgraph net jpgraph 一个 使用 php5 面向对象 开发 图形库 可以 生成 常用 数据 图表 容易 整合 php 脚本
219,navicat-MySQL前台管理工具利器,navicat mysql 前台 管理工具 利器 官方网站 http www navicat com navicat mysql 一个 强大 mysql 数据库 服务器 管理 开发工具 可以 任何 3.21 以上 版本 mysql 一起 工作 支持 大部分 mysql 最新 功能 包括 触发器 存储 过程 函数 事件 视图 管理 用户 等等 不仅 专业 开发人员 来说 非常 尖端 技术 而且 对于 新手 来说 易学 易用 精心设计 图形用户界面 gui navicat mysql 可以 一种 安全 简便 方式 快速 容易 创建 组织 访问 共享 信息 navicat mysql 用户 连接 本地 远程 服务器 提供 几种 实用工具 例如 数据结构 同步 导入 导出 备份 报告 维护 数据 过程 容易 自从 2001 年初 以来 navicat 全世界 范围 下载 数百万 navicat 公认 受欢迎 mysql 前端 图形用户界面 而且 对于 本地 远程 mysql 管理 开发 三种 操作系统 平台 windows mac os linux 可用 过去 navicat 最好 服务器 管理工具 类别 几个 奖项 提名 并且 许多 托管 公司 一种 标准 托管 工具 例如 rackspace 公司 成功 管理 托管 公司 之一 世界各地 全球 企业 政府 机构 教育 机构 navicat 众所周知 可以 信任 并且 每天 使用 通常 世界 500 公司 100 多个 使用 navicat 编辑 主要 功能 表单 检视 新增 虚拟 群组 新增 自动 完码 新增 排程 工作 结果 自动 传送 电子邮件 新增 查询 检视 事件 自动 完码 新增 报告 汇出 各种 格式 pdf excel html 新增 超时 自动 重新 连接 sql 服务器 数据 结构 同步 导出 注册 文件 传送 另外 计算机 查询 创建 -- 不同 数据库 创建 查询 查询 参数 sql 控制台 建立 查看 ssh 密钥 支持 所有 mysql 版本 ssh http 隧道 汇入 汇出 数据 报表 设计 建立
224,9个高质量图标的最佳搜索引擎,高质量 图标 最佳 搜索引擎 原文 链接 高质量 图标 最佳 搜索引擎 对于 每个 网站 开发者 来说 设计 重要 一部分 图标 设计 一个 环节 可以 找到 许多 集合 图标 网站 找到 免费 高质量 图标 分享 一些 免费 高质量 图标 搜索引擎 原因 访问 这些 引擎 找到 高质量 图标 如果 知道 网站 我们 分享 iconfinder 简便 并且 有效 方式 网站 设计者 开发人员 提供 高质量 图标 iconlet 一个 单纯 免费 图标 图像 搜索引擎 iconscaniconseeker 最好 在线 图标 搜索引擎 万多个 高质量 图标 每个 图标 适合 windows macintosh linux 系统 png ico icns 格式 icons search 有助于 网上 找到 高质量 图标 图标 搜索引擎 mriconsveryicon 一个 非常 有用 网站 可以 找到 高质量 图标 千多个 图标 包共 万多个 高质量 网络 图标 iconlook iconlook com 可以 找到 想要 图标 自己 一个 http www easyicon cn
234,C++标准库string类型学习笔记,c++ 标准 string 类型 学习 笔记 string 类型 支持 长度 可变 字符串 需要 包含 头文件 include string string 对象 定义 初始化 string 支持 好几种 初始化 方式 初始化 方式 说明 string s1 默认 构造函数 s1 空串 string s2 s1 s2 初始化 s1 一个 副本 string s3 value s3 初始化 一个 字符串 面值 副本 string s4 s4 初始化 字符 副本 c++ primer4 标注 字符串 面值 标准 string 类型 不是 一种 类型 string 对象 可以 进行 操作 执行 操作 string 操作 说明 empty 判断 是否 空串 若为 返回 trues size 返回 字符 个数 返回 位置 字符 位置 开始 s1 s2 字符串 连接 可以 操作符 s1 s2 字符串 拷贝 s1 内容 替换成 s2 副本 v1 v2 比较 v1 v2 内容 相等 返回 true 保持 这些 操作符 惯有 含义 string 类型 其他 操作 可以 cin str 命令 读入 字符串 空格 分开 读入 可以 cout str 输出 字符串 命令 可以 getline cin str 命令 读入 一行 字符串 包括 空格 读入 循环 遍历 string 时候 下表值 不要 int 类型 因为 string 内置 长度 函数 size 返回 string size type 类型 这是 一个 unsingned 类型 机器 int 类型 范围 太小 因此 需要 这样 遍历 string for size type str size ++ 可以 str 这样 方式 str 一位 覆盖 新值
236,C++数组类型学习笔记,c++ 数组 类型 学习 笔记 现代 c++ 程序 尽量 使用 vector 迭代 类型 避免 使用 低级 数组 指针 设计 良好 程序 只有 强调 速度 时才 实现 内部 使用 数组 指针 数组 缺陷 数组 长度 固定 程序员 无法 知道 一个 给定 数组 长度 没有 提供 size 操作 返回 大小 没有 提供 push back 操作 添加 元素 如果 更改 数组 长度 我们 不得不 建立 一个 更大 数组 原来 数组 元素 拷贝 进去 容易 出错 难以 调试 总之 数组 很烂 我们 还要 学习 数组 原因 依赖于 数组 程序 大量 存在 数组 定义 数组 维数 必须 编译 确定 例如 整形 面值 常量 枚举 常量 或者 常量 表达式 初始化 整形 const 对象 const 变量 以及 运行 才能 知道 其值 const 变量 不能 用于 数组 维数 数组 初始化 int ia 直接 给出 初始化 列表 int ia 没有 初始化 初始化 相关 初始化 情况 说明 函数 体外 定义 数组 元素 初始化 函数 体内 定义 内置 数组 提供 初始化 函数 体内 或者 外面 自定义 类型 自动 调用 默认 构造函数 初始化 字符 数组 初始化 char ca1 给出 初始化 列表 char ca2 初始化 末尾 有个 空字符 因此 字符 数组 字符串 char ca3 ab 字符串 字面 初始化 字符 数组 末尾 自动 char ca3 ab 错误 因为 字符串 字面 带有 现在 放不下 数组 操作 数组 标的 正确 类型 size 历时 生命 类型 数组 相关 操作 仔细检查 下标 是否 越界
245,数据采集利器-PHP用DOM方式处理HTML之《Simple HTML DOM》,数据 采集 利器 php dom 方式 处理 html simple html dom 最近 经常 需要 采集 一些 网上 数据 发现 一个 php 处理 html 利器 simple html dom 官方 网址 http simplehtmldom sourceforge net 一下 文档 使用 非常 方便 关键 能够 css 选择器 访问 dom jquery 相似 实在 难得 利器 以下 一个 测试代码 用于 抓取 大众 点评 网上 咖啡 分类 所有 店铺 程序 cdata syntaxhighlighter config clipboardswf http crazyant net js code clipboard swf syntaxhighlighter all phprequire once simple html dom php ini set memory limit 1000m ini set max execution time 6000000 for 21 ++ html file get html http www dianping com search category 17 30 g1498p g30g1498 as html find shopname sum foreach as as if plaintext 分店 href http www dianping com href echo outertext ------ href ------- br sum ++ echo br br 结束 数目 sum hr 数据 采集 结果 采集 21 数据 另外 还有 一个 强大 php 处理 html 利器 号称 jquery 相似 并且 simplehtmldom 强大 但是 叫做 phpquery 地址 http code google com phpquery
251,"c++字符集之间转换(UTF-8,UNICODE,Gb2312)",c++ 字符集 之间 转换 utf unicode gb2312 c++ 同学 经常 遇到 汉字编码 问题 处理 麻烦 博文 一篇 文章 介绍 这个 问题 utf 字节 一个 字符 unicode 字节 一个 字符 gb2312 字节 一个 字符 例子 utf 编码 e4 bd a0 11100100 10111101 10100000 unicode 编码 4f 60 01001111 01100000 按照 utf 编码 规则 分解 如下 xxxx0100 xx111101 xx100000 除了 之外 数字 拼接 一起 变成 unicode 编码 注意 utf 前面 表示 整个 utf 字节 构成 经过 utf 编码 之后 再也不会 出现 敏感 字符 因为 最高 始终 定义 class cchinesecode public static void utf 8tounicode wchar pout char ptext utf 转换成 unicode static void unicodetoutf char pout wchar ptext unicode 转换成 utf static void unicodetogb2312 char pout wchar udata unicode 转换成 gb2312 static void gb2312tounicode wchar pout char gbbuffer gb2312 转换成 unicode static void gb2312toutf string pout char ptext int plen gb2312 转为 utf static void utf 8togb2312 string pout char ptext int plen utf 转为 gb2312 实现 void cchinesecode utf 8tounicode wchar pout char ptext char uchar char pout uchar ptext 0x0f ptext 0x0f uchar ptext 0x03 ptext 0x3f return void cchinesecode unicodetoutf char pout wchar ptext 注意 wchar 高低 顺序 低字节 高字节 char pchar char ptext pout 0xe0 pchar 0xf0 pout 0x80 pchar 0x0f pchar 0xc0 pout 0x80 pchar 0x3f return void cchinesecode unicodetogb2312 char pout wchar udata widechartomultibyte cp acp null udata pout sizeof wchar null null return void cchinesecode gb2312tounicode wchar pout char gbbuffer multibytetowidechar cp acp mb precomposed gbbuffer pout return void cchinesecode gb2312toutf string pout char ptext int plen char buf int nlength plen char rst new char nlength memset buf memset rst nlength int int while plen 如果 英文 直接 复制 if ptext rst ++ ptext ++ else wchar pbuffer gb2312tounicode pbuffer ptext unicodetoutf buf pbuffer unsigned short int tmp tmp rst buf tmp rst buf tmp rst buf rst 返回 结果 pout rst delete rst return void cchinesecode utf 8togb2312 string pout char ptext int plen char newbuf new char plen char ctemp memset ctemp int int while plen if ptext newbuf ++ ptext ++ else wchar wtemp utf 8tounicode wtemp ptext unicodetogb2312 ctemp wtemp newbuf ctemp newbuf ctemp newbuf pout newbuf delete newbuf return
254,C++实现字符串与数字的连接,c++ 实现 字符串 数字 连接 因为 用到 c++ 中将 字符串 数字 连接 竟然 发现 c++ 没有 直接 字符串 连接符 感觉 c++ 不便 文章 解决 主要 数字 变成 char 数组 这种 方法 测试代码 如下 include iostream using namespace std include string int main string strdir test dazhong allinone char file no int filen 123 itoa filen file no 10 数字 存储 char 数组 strdir file no string 标准 类型 可以 直接 char 数组 进行 连接 strdir txt cout strdir endl system pause return 运行 结果 test dazhong allinone 123 txt 任意键 继续
259,win7下快速硬盘安装ghost xp的方法,win7 快速 硬盘 安装 ghost xp 方法 之前 win7 硬盘 安装 xp 总是 失败 主要 因为 win7 bootloader 隐藏 不能 修改 boot ini 设置 启动项 当时 采用 这样 方法 就是 纯净 xp 光盘 安装 一下 然后 xp 硬盘 安装 ghost xp 费时费力 劳民伤财 现在 终于 发现 一个 方法 出乎 意料 其实 情理之中 软件 就是 一键 ghost 首先 win7 安装 一键 ghost 成功 启动 win7 一个 ghost 选项 没错 我们 已经 运行 ghost 软件 然后 网上 下载 ghost xp iso 解压 得到 gho 文件 然后 重启 进入 ghost 手动 载入 gho 文件 ok 实在 简单 汗颜 呵呵
381,C++ Primer 4th：第九章 《顺序容器》学习心得,c++ primer 4th 第九章 顺序 容器 学习心得 c++ 学到 深入 一点 应该 大量 了解 stl 知识 其中 支撑 部分 就是 容器 顺序 容器 包括 vector list deque 如果 善加利用 能够 很大 程度 提升 程序 开发 速度 效率 同时 减少 问题 几率 顺序 容器 类型 顺序 容器 vector 支持 快速 随机 访问 list 支持 快速 插入 删除 deque 双端 队列 顺序 容器 适配器 stack 后进先出 lifo queue 先进先出 fifo 队列 priority queue 优先级 管理 队列 容器 构造函数 创建 一个 名为 容器 容器 类型 vector 元素 类型 int string 适用 所有 容器 c2 创建 容器 c2 副本 c2 必须 具有 相同 容器 类型 存放 相同 元素 适用 所有 容器 创建 元素 迭代 标示 范围 元素 副本 适用 所有 容器 个值 元素 创建 容器 其中 必须 容器 类型 元素 类型 或者 转换 类型 适用 顺序 容器 穿件 个值 初始化 value initialized 元素 容器 适用 顺序 容器 常用 迭代 运算 iter 返回 迭代 iter 指向 元素 引用 iter mem iter 进行 引用 获取 指定 元素 名为 mem 成员 等效于 iter mem ++ iter iter 指向 容器 一个 元素 iter ++-- iter iter 指向 容器 一个 元素 iter -- iter1 iter2 比较 两个 迭代 是否 相等 两个 迭代 指向 同一 容器 同一个 元素 或者 它们 指向 同一个 容器 超出 末端 位置 两个 迭代 相等 iter1 iter2 vector deque 类型 迭代 支持 操作 iter 迭代 器上加 整数 产生 指向 容器 前面 后面 元素 迭代 计算出来 迭代 必须 指向 容器 元素 超出 容器 末端 元素 iter niter1 iter2 这是 迭代 加减法 符合 赋值 运算 iter1 加上 减去 iter2 运算 结果 赋给 iter1iter1 iter2iter1 iter2 两个 迭代 减法 运算 结果 加上 左边 迭代 器即 左边 迭代 两个 迭代 必须 指向 同一个 容器 元素 超出 元素 末端 位置 适用 vector deque 容器 迭代 关系 操作符 一个 迭代 指向 元素 容器 位于 一个 迭代 指向 元素 之前 一个 迭代 小于 一个 迭代 关系 操作符 两个 迭代 必须 指向 同一个 容器 元素 超出 容器 末端 位置 适用 vector deque 容器 容器 定义 类型 别名 size type 符号 整型 足以 存储 容器 类型 最大 可能 容器 长度 iterator 容器 类型 迭代 类型 const iterator 元素 只读 迭代 类型 reverse iterator 逆序 寻址 元素 迭代 const reverse iterator 元素 只读 不能 逆序 迭代 difference type 足够 存储 两个 迭代 差值 符号 整型 负数 value type 元素 类型 reference 元素 左值 类型 value type 同义词 const reference 元素 常量 左值 类型 等效于 const value type 容器 begin end 操作 begin 返回 一个 迭代 指向 容器 第一个 元素 end 返回 一个 迭代 指向 容器 最后 一个 元素 一个 位置 rbegin 返回 一个 逆序 迭代 指向 容器 最后 一个 元素 rend 返回 一个 逆序 迭代 指向 容器 第一个 元素 前面 位置 顺序 容器 添加 元素 操作 push back 容器 尾部 添加 值为 元素 返回 void 类型 push front 容器 前端 添加 值为 元素 返回 void 类型 适用 list deque 容器 类型 insert 迭代 指向 元素 前面 插入 值为 新元素 返回 指向 添加 元素 迭代 insert 迭代 指向 元素 前面 插入 个值 新元素 返回 void 类型 insert 迭代 指向 元素 前面 插入 迭代 标记 范围 元素 返回 void 类型 顺序 容器 大小 操作 size 返回 容器 元素 个数 返回 类型 size typec max size 返回 容器 容纳 元素 个数 返回 类型 size typec empty 返回 标记 容器 大小 是否 布尔值 resize 调整 容器 长度 大小 其能 容纳 元素 如果 size 删除 出来 元素 否则 添加 采用 初始化 新元素 resize 调整 容器 大小 其能 容纳 元素 所有 添加 元素 访问 顺序 容器 元素 操作 back 返回 容器 最后 一个 元素 引用 如果 为空 操作 未定义 front 返回 容器 第一个 元素 引用 如果 为空 操作 未定义 返回 下标 元素 引用 如果 size 操作 未定义 适用 vector deque 容器 at 返回 下表为 元素 引用 如果 下标 越界 操作 未定义 适用 vector deque 容器 10 删除 顺序 容器 元素 操作 erase 删除 迭代 指向 元素 返回 一个 迭代 指向 删除 元素 后面 元素 如果 指向 容器 最后 一个 元素 返回 迭代 指向 容器 超出 末端 位置 如果 本身 就是 指向 超出 末端 位置 迭代 函数 未定义 erase 删除 迭代 标记 范围 所有 元素 返回 一个 迭代 指向 删除 元素 后面 元素 如果 本身 就是 指向 超出 末端 位置 迭代 返回 迭代 指向 容器 超出 末端 位置 clear 删除 容器 所有 元素 返回 voidc pop back 删除 容器 最后 一个 元素 返回 void 如果 为空 容器 函数 未定义 pop front 删除 容器 第一个 元素 返回 void 如果 为空 容器 函数 未定义 适用 list deque 容器 11 顺序 容器 赋值 操作 c1 c2 删除 容器 c1 所有 元素 然后 c2 元素 复制 c1 c1 c2 类型 包括 容器 类型 元素 类型 必须 相同 c1 swap c2 交换 内容 调用 完该 函数 c1 存放 c2 原来 元素 c2 存放 c1 原来 元素 c1 c2 类型 必须 相同 函数 执行 速度 通常 c2 元素 复制到 c1 操作 assign 重新 设置 元素 迭代 标记 范围 所有 元素 复制到 必须 不是 指向 元素 迭代 assign 容器 重新 设置 存储 个值 元素 12 普通 string 操作 string 定义 一个 string 对象 命名 sstring cp 定义 一个 string 对象 cp 指向 空字符 null 结束 风格 字符串 初始化 对象 string s2 定义 一个 string 对象 初始化 s2 副本 is 输入 is 读取 一个 空白 字符 分割 字符串 写入 sos 写到 输出 os getline is 输入 is 读取 一行 字符 写入 ss1 s2 s1 s2 串接 起来 产生 一个 string 对象 s1 s2 s2 拼接 s1 后面 关系 操作符 相等 运算 以及 关系 运算 用于 string 对象 比较 等效于 区分 大小写 字典 次序 比较 13 构造 string 对象 其他 方法 string cp 创建 一个 string 对象 初始化 cp 指向 数组 元素 副本 string s2 pos2 创建 一个 string 对象 初始化 一个 存在 string 对象 s2 下表 pos2 开始 字符 副本 如果 pos2 s2 size 操作 未定义 string s2 pos2 len2 创建 一个 string 对象 初始化 s2 下标 pos2 开始 len2 个字符 副本 如果 pos2 s2 size 操作 未定义 无论 len2 多少 只能 复制 s2 sizez pos2 个字符 注意 len2 pos2 unsigned 14 容器 共有 string 操作 insert 迭代 指向 元素 之前 插入 一个 值为 新元素 返回 指向 插入 元素 迭代 insert 迭代 指向 元素 之前 插入 个值 新元素 返回 voids insert 迭代 指向 元素 之前 插入 迭代 标记 范围 所有 元素 返回 voids assign 迭代 标记 范围 元素 替换 对于 string 类型 操作 返回 对于 容器 类型 返回 voids assign 用值 副本 替换 对于 string 类型 操作 返回 对于 容器 类型 返回 voids erase 删除 迭代 指向 元素 返回 一个 迭代 指向 删除 元素 后面 元素 erase 删除 迭代 标记 范围 所有 元素 返回 一个 迭代 指向 删除 元素 后面 第一个 元素 15 string 类型 特有 版本 insert pos 下标 pos 元素 之前 插入 个字符 cs insert pos s2 下标 pos 元素 之前 插入 string 对象 s2 副本 insert pos s2 pos2 len 下标 pos 元素 之前 插入 s2 下标 pos2 开始 len 个字符 insert pos cp len 下标 pos 元素 之前 插入 cp 指向 数组 len 个字符 insert pos cp 下标 pos 元素 之前 插入 cp 指向 空字符 结束 字符串 副本 assign s2 s2 副本 替换 ss assign s2 pos2 len s2 下标 pos2 开始 len 个字符 副本 替换 ss assign cp len cp 指向 数组 len 个字符 副本 替换 ss assign cp cp 指向 空字符 结束 字符串 副本 替换 ss erase pos len 删除 下标 pos 开始 len 个字符 除非 特殊 声明 上述 所有 操作 返回 引用 16 字串 操作 substr pos 返回 一个 string 类型 字符串 包含 下标 pos 开始 个字符 substr pos 返回 一个 string 类型 字符串 包含 下标 pos 开始 末尾 所有 字符 substr 返回 副本 17 修改 string 对象 操作 args 18 定义 append args args 串接 后面 返回 引用 replace pos len args 删除 下标 pos 开始 len 个字符 args 指定 字符 代替 返回 应用 这个 版本 args 不能 b2 e2s replace args 删除 迭代 标记 范围 所有 字符 args 替换 返回 引用 这个 版本 args 不能 s2 pos2 len2 18 append replace 操作 参数 argss2string 类型 字符串 s2s2 pos2 len2 字符串 s2 下标 pos2 开始 len2 个字符 cp 指针 cp 指向 空字符 结束 数组 cp len2cp 指向 空字符 结束 数组 中前 len2 个字符 字符 副本 b2 e2 迭代 b2 e2 标记 范围 所有 字符 19 string 类型 查找 操作 参数 args 20 定义 find args 查找 args 第一次 出现 rfind args 查找 args 最后 一次 出现 find first of args 查找 args 任意 字符 第一次 出现 find last of args 查找 args 任意 字符 最后 一次 出现 find first not of args 查找 第一个 属于 args 字符 find last not of args 查找 最后 一个 属于 args 字符 20 string 类型 提供 find 操作 参数 pos 下标 pos 标记 位置 开始 查找 字符 pos 默认值 0s2 pos 下标 pos 标记 位置 开始 查找 string 对象 s2 pos 默认值 0cp pos 下标 pos 标记 位置 开始 查找 指针 cp 指向 风格 空字符 结束 字符串 pos 默认值 0cp pos 下标 pos 标记 位置 开始 查找 指针 cp 指向 数组 个字符 pos 没有 默认值 21 string 类型 compare 操作 compare s2 比较 s2s compare pos1 n1 s2 pos 下标 位置 开始 n1 个字符 s2 比较 compare pos1 n1 s2 pos2 n2 pos1 下标 位置 开始 n1 个字符 s2 pos2 下标 位置 开始 n2 个字符 比较 compare cp 比较 cp 指向 空字符 结束 字符串 compare pos1 n1 cp pos1 下标 位置 开始 n1 个字符 cp 指向 字符串 比较 compare pos1 n1 cp n2 pos1 下标 位置 开始 n1 个字符 cp 指向 字符串 n2 个字符 比较 22 适配器 通用 操作 类型 size type 一种 类型 足以 存储 适配器 类型 最大 对象 长度 value type 元素 类型 container type 基础 容器 类型 适配器 容器 类型 实现 创建 一个 适配器 命名 aa 创建 一个 名为 适配器 初始化 容器 副本 关系 操作符 所有 适配器 支持 全部 关系 操作符 23 容器 适配器 支持 操作 empty 如果 栈为 返回 true 否则 返回 falses size 返回 栈中 元素 个数 pop 删除 栈顶 元素 返回 其值 top 返回 栈顶 元素 删除 元素 push item 栈顶 压入 新元素 24 队列 优先级 队列 支持 操作 empty 如果 列为 返回 true 否则 返回 falseq size 返回 队列 元素 个数 pop 删除 队首 元素 返回 其值 front 返回 队首 元素 删除 元素 操作 适用 队列 back 返回 队尾 元素 删除 元素 操作 适用 队列 top 返回 具有 最高 优先级 元素 删除 元素 操作 适用 优先级 队列 push item 对于 queue 队尾 压入 一个 新元素 对于 priority queue 基于 优先级 适当 位置 插入 新元素
391,在GATE工具中使用自己的XSD模式进行语义标注,gate 工具 使用 自己 xsd 模式 进行 语义 标注 研究 语义 网络 相关 课题 最底层 部分 就是 进行 语义 标注 网上 语义 标注 工具 很多 比如 http annotation semanticweb org annotationtool vie 列出 13 有些 后来 已经 不再 更新 经过 查阅 锁定 gate 因为 官方 文档 很全 并且 网上 资料 gate 下载 安装 打开 gate 官方网站 http gate ac uk 点击 download 进入 下载 页面 如下 所示 页面 给出 最新 下载 地址 导航 文档 documentation 链接 文档 比较 齐全 常规 步骤 安装 gate 打开 gate3 使用 自己 语义 标注 模式 进行 标注 过程 使用 自己 模式 需要 加载 annie 组件 加载 方法 点击 工具栏 选择 第一个 with defaults 即可 加载 schema annotation editor 插件 方法 打开 加载 插件 对话框 然后 选中 加载 插件 可以 搜索 输入 annotation 搜索 点击 ok 重启 gate 环境 已经 ok 之后 可以 自己 这里 建立 标注 文件 引入 xsd 模式 进行 标注 时候 工具 显示 xsd 模式 里面 元素 内容
402,玩大灾变出现“igxprd32显示驱动程序已经停止正常工作”解决方法,玩大 灾变 出现 igxprd32 显示 驱动程序 已经 停止 正常 工作 解决 方法 intel 集成显卡 g33 g31 出现 问题 解决 方法 program files world of warcraft wtf config wtf 文件 写字板 模式 打开 开始 或者 末尾 加上 这个 设置 函数 set fixedfunction 这个 命令 作用 关掉 一些 特效 保证 画面 完整性
408,QT-creater一个非常棒的教程,qt creater 一个 非常 教程 最近 学习 qt 发现 一个 非常 教程 不知不觉 跟着 看边 感觉 时间 理解 qt 开发 流程 非常 方便 转成 pdf 格式 提供 大家 下载 里面 教程 原始 地址 尊重 原版 地址 网盘 放心 下载 点击 下载
410,让QT支持中文的方法,qt 支持 中文 方法 qt 支持 中文 方法 简单 main 函数 实现 文件 比如 main cpp 头文件 包含 include qtextcodec 这是 处理 字符 头文件 int main int argc char argv 函数 体中 增加 一句 qtextcodec setcodecfortr qtextcodec codecforlocale 这样 界面 大部分 显示 中文 程序 里面 如果 使用 字符串 字面 使用 tr 函数 进行 比如 tr qt 编程 否则 还是 乱码
414,Linux下GCC和Makefile实例（从GCC的编译到Makefile的引入）,linux gcc makefile 实例 gcc 编译 makefile 引入 确认 已经 装好 gcc make 软件包 可以 使用 whereis 命令 查看 如果 whereis gcc whereis make 命令 结果 说明 安装 两个 软件 可以 继续 往下 使用 gcc 编译 运行 一个 helloworld 程序 涉及 单个 文件 可以 任何 一个 目录 编写 程序 然后 编译 运行 这个 实例 自己 主目录 进行 然后 进入 编写程序 界面 按下 键盘 进入 编辑 界面 然后 输入 程序 esc 进入 命令行 模式 然后 输入 wq 冒号 表示 开始 输入 命令 字母 代表 保存 文件 字母 代表 退出 编辑器 回车 退出 vim 编辑器 退回 终端 以下 之后 编译 运行 截图 使用 gcc 编译 运行 一个多 文件 程序 包含 主程序 子程序 这里 我们 两个 程序 文件 一个 文件 里面 写个 函数 另外 一个 文件 main 函数调用 第一个 文件 函数 如下 所示 ex display 代码 如下 同样 完后 esc 然后 输入 wq 退出 输入 如下 main 函数 代码 然后 保存 退出 如下 编译 运行 过程 使用 makefile 解决 文件 编译 运行 问题 正如 上节 框框 里面 叙述 如果 一个 程序 涉及 文件 很多 的话 每个 出来 麻烦 所以 makefile 出现 教程 进入 makefile 编辑 界面 输入 如下 内容 然后 保存 退出 运行 make 命令 makefile shell script 方法 对比 有人 之前 所有 命令 全写 shell script 里面 达到 makefile 效果 没错 确实 最终 效果 相同 但是 makefile 这些 好处 简化 编译 执行 命令 没有 gcc 过程 一次 make 下次 只会 编译 改动 文件 其它 文件 不会 编译 其它 还有 一些 优点 不过 第二个 优点 对于 大型项目 来说 好处 太大
444,[转]office - word2010每次打开弹出配置框解决方法,office word2010 每次 打开 配置 解决 方法 问题 叙述 前提 office 已经 激活 每次 打开 office2010 word 出现 配置 进度 excel 出现 情况 解决办法 点击 开始 点击 运行 输入 regedit 回车 确定 找到 hkey current user software microsoft office 14.0 word options 再次 打开 word 文档 正常 方法 适用 word excel 需要 配置 情况 打开 电脑 c盘 program files common files microsoft shared office12 office setup controller 找到 一个 setup exe 文件 对此 文件 重命名
449,[C++]win32输出当前系统时间函数，可用以程序计时,c++ win32 输出 当前 系统 时间 函数 可用 程序 计时 include string include iostream include time include fstream using namespace std 函数 用于 获取 当前 系统 时间 使用 传入 获取 时间 string 引用 void getsystemtime string stime time time char tmp 64 strftime tmp sizeof tmp localtime stime tmp int main string nowtime 存储 获取 系统 时间 输出 起始 时间 getsystemtime nowtime cout nowtime endl 一步 仅仅 为了 耗费 程序 时间 ofstream fout tt txt for long 1000 1000 ++ fout endl 输出 结束 时间 getsystemtime nowtime cout nowtime endl system pause return 程序运行 结果 截图
454,[PHP]发送邮件方法介绍和代码示例,php 发送 邮件 方法 介绍 代码 示例 很多 朋友 遇到 发送 邮件 需求 他们 网上 下载 一段 代码 然后 填好 主题 内容 发现 怎么 发送 失败 这里 首先 弄清楚 一点 发送 邮件 必须 邮件 服务器 完成 比如 smtp pop3 邮件 服务器 运行 代码 发送 邮件 相当于 空中楼阁 无米之炊 一个 企业 个人 来说 想要 自己 代码 发送 邮件 必须 先有 自己 邮局 账户 这样 我们 得到 这些 信息 邮局 服务器 ip 邮局 账户 用户名 对应 账户 密码 这三项 代码 设定 之后 代码 才能 连接 目标 服务器 然后 用此 服务器 进行 邮件 发送 其中 加色 部分 最终 php 服务器 比如 apache 邮局 服务器 比如 smpt 共同完成 以下 提供 一个 代码 实现 邮件 发送 注意 send php 里面 发送 服务器 用户名 密码 配置 form php 一个 表单 用于 提交 发送 目的 邮箱地址 html body h3 phpmailer unit test h3 输入 font color ff6666 收信 font 邮箱地址 form name phpmailer action send php method post input type hidden name submitted value 邮箱地址 input type text size 50 name address br input type submit value 发送 form body html send php 接收 参数 发送 邮件 特别 注意 颜色 部分 配置 phprequire class phpmailer php 下载 文件 必须 放在 文件 所在 目录 mail new phpmailer 建立 邮件 发送 address post address mail issmtp 使用 smtp 方式 发送 mail host 11.11 11.11 企业邮局 ip地址 或者 域名 mail smtpauth true 启用 smtp 验证 功能 mail username xx crazyant net 邮局 用户名 填写 完整 email 地址 mail password 88558855 邮局 密码 mail from xx crazyant net 邮件 发送者 email 地址 mail fromname crazyant mail addaddress address 收件人 地址 可以 替换成 任何 想要 接收 邮件 email 信箱 格式 addaddress 收件人 email 收件人 姓名 mail addreplyto mail addattachment var tmp file tar gz 添加 附件 mail ishtml true set email format to html 是否 使用 html 格式 mail subject phpmailer 测试 邮件 邮件 标题 mail body table border tr td 用户名 td td 密码 td tr td 1122121 td td 3322323 td tr table 邮件 内容 mail altbody h1 h1 附加 信息 可以 省略 if mail send echo 邮件 发送 失败 echo 错误 原因 mail errorinfo exit echo 邮件 发送 成功 send php 用到 一个 phpmail http code google com apache extras org phpmailer downloads list 进行 下载 教程 pdf 说明 以及 代码 示例 放在 http www kuaipan cn index php ac file oid 20099656671300541 下载 密码 2d6quk
466,[网址]在线转换编码-BASE64_URLENCODE等,网址 在线 转换 编码 base64 urlencode http bianma.900 cha com 在线 转换 方便
471,[站长]推荐一个网页分享按钮条插件JiaThis,站长 推荐 一个 网页 分享 按钮 插件 jiathis 最近 一直 鼓捣 另外 一个 小站 www.51 projob com 顺眼 地方 改来改去 这个 使用 dede 模板 得来 系统 自带 一个 bshare 插件 用来 分享 文章 各种 站点 朋友网 人人 百度 博客 新浪 微博 然而 这个 插件 有时候 网站 经常 页面 好久 网上 发现 这个 jiathis 地址 http www jiathis com 对织 专门 一个 插件 看起来 非常 好用 这里 记录下来 以后 如果 真的 无法忍受 bshare 就要 换成 这个
478,c/c++批量向mysql插入数据,c++ 批量 mysql 插入 数据 先给 mysql 对于 api 具体 代码 改为 手动 提交 每次 5w 数据 mysql 头文件 文件 mysql 头文件 文件 include winsock include windows include stdio include stdlib include mysql include fstream include string include vector include iostream using namespace std int main 配置文件 ifstream configfin config txt ifstream filefin filelist txt 处理 文件 列表 string processfile 处理 文件 名字 string dbhost 数据库 主机 string dbuser 数据库 用户名 string dbpwd 数据库 密码 string dbname 数据库 名字 int eachprocesscount 50000 每次 处理 个数 string tmp 文件 列表 放到 vector vector string filevec while filefin tmp filevec push back tmp configfin tmp dbhost tmp dbuser tmp dbpwd tmp dbname tmp eachprocesscount unsigned int port 3306 server port for int fi fi filevec size ++ fi 每次 循环 处理 一个 文件 processfile filevec fi cout 文件 processfile endl mysql mycont mysql init mycont string uid friendid ifstream fin processfile str int int eachcount string sql while fin eof if mysql real connect mycont dbhost str dbuser str dbpwd str dbname str port null client multi statements mysql autocommit mycont mysql query mycont set names utf8 for eachcount eachcount eachprocesscount ++ eachcount if fin uid friendid 如果 还有 内容 那么 构建 插入 语句 sql insert into friendlist values uid friendid mysql query mycont sql str else break cout mysql commit mycont mysql close mycont 断开连接 else cout connect failed endl cout endl fin close system pause return 大致 一下 链接 mysql 方法 官方 下载 mysql connector2 拷贝 里面 lib 目录 dll lib 文件 当前目录 设置 当前 项目 头文件 下载 目录 inlcude4 设置 一个 lib 项目 设置 设置 文件名 上述 程序 可以 连接 数据库 地址 之类 自己 改掉
480,mysql用命令行链接远程主机的方法,mysql 命令行 链接 远程 主机 方法 假设 远程 主机 ip 110.110 110.110 用户 名为 root 密码 abcd123 键入 以下 命令 mysql h110.110 110.110 uroot p123 root 之间 可以 不用 空格 其它 一样 命令 win cmd 运行 如果 不到 mysql 命令 那么 安装 mysql 然后 要么 设置 环境变量 要么 当前目录 设置 mysql bin 目录 这样 才能 使用 mysql exe 执行 命令 备注 清空 不要 delete from table truncate table xx 不过 方法 无法 恢复 数据 但是 非常
483,phpmyadmin远程连接mysql数据库的方法,phpmyadmin 远程 连接 mysql 数据库 方法 前提 本地 php 环境 如果 本地 装有 phpmyadmin 建议 重新 下载 一个 随便 另起 一个 文件夹 修改 libraries 文件夹 config default php 文件 查找 cfg pmaabsoluteuri 其值 设置 本地 phpmyadmin 路径 例如 http 127.0 0.1 phpmyadmin 查找 cfg servers host 其值 设置 mysql 数据库 地址 例如 125.24 112.193 查找 cfg servers user 其值 设置 mysql 数据库 用户名 例如 abcd4 查找 cfg servers port 其值 设置 mysql 数据库 端口 例如 33065 查找 cfg servers password 其值 设置 mysql 数据库 密码 例如 abcd 通过 本地 phpmyadmin 路径 第二步 设置 路径 通过 mysql 数据库 用户名 密码 即可 访问 远程 数据库
485,被深深鄙视的2012找暑期实习，哥很伤心,深深 鄙视 2012 暑期 实习 伤心 2012 开始 腾讯 一面 腾讯 二面 霸面 失败 微软 霸笔 失败 360 霸面 失败 充斥 充斥 失败 充斥 希望 失望 有些 伤心 教训 如果 应聘 服务端 简历 上要 突出 c++ 弱化 php java2 如果 应聘 服务端 那么 填写 招聘 选择 时候 不要 多选 前台 面试 结束 不要 自己 如果 程序 一定 思考 然后 下笔 其次 仔仔细细 不要 潦草 应付 再次 一定 错误处理 这些 边界 处理 正确性 如果 听到 招聘 信息 一定 第一 时间 投递 简历 填写 申请 笔试 题目 一定 认认真真 因为 不好 造成 失去 面试 机会 霸面 受挫 浪费时间 锻炼 自己 解决 未知 难题 勇气 能力 对于 这些 突然 到来 难题 仔细 动脑 进行 分析 要试 解决 不是 直接 放弃 面试 一定 要端正 心态 随时 保持 稳重 接下来 努力 方向 认真 复习 相关 知识 看书 为主 包括 深入 理解 计算机系统 数据结构 算法 面试 宝典 锻炼 自己 解决 未知 难题 能力 遇到 这些 不要 直接 搜索 答案 要试 方法 锻炼 自己 心态 笔试 面试 心态 把握 不放过 任何 一个 可以 霸笔 霸面 机会 俗话说 失败 成功 之母 这句 心里 有些 难受 知道 因为 受挫 快速 成长 我会 更加 开动 自己 脑筋 探究 更加 有用 消息 进行 关注 快速反应 会学 越来越
491,程序员找工作网啊站-计算机专业学生必看,程序员 工作 计算机专业 学生 必看 自己 一个 程序员 求职 知识 管理 网站 自己 年底 就要 工作 不可避免 现在 开始 着手 复习 想来想去 复习内容 应该 包括 这些 方面 内容 专业知识 比如 操作系统 计算机网络 计算机 组成 体系结构 数据结构 算法 海量 数据处理 设计模式 等等 编程语言 比如 c++ java php 语言 语法 内涵 笔试 面试 经验 从前 笔试 面试 过程 经历 经验 能够 学习 很多 应对 方法 这些 关注 每天 一些 之后 有所 了解 简历 书写 貌似 国外 不同 公司 简历 写法 不同 因此 关注 一些 资源 行业资讯 之前 师兄 师姐 面试 时候 问点 当前 it 发生 事情 阐述 自己 理解 因此 收集 新闻 招聘 讯息 一旦 开始 招聘 大多 公司 同时 到达 不可避免 有些 忘记 遗漏 因此 一种 组织 方式 记录下来 经常 博客园 文章 不可避免 总是 想要 精彩 文章 记录下来 可是 保存 成网 方式 不好 检索 不好 管理 并且 还有 其他 很多 网上 找来 精彩文章 不好 记录 因此 很多 朋友 他们 建议 网站 www.51 projob com 直接 用织 dede 一下 自己 简单 模板 看着 自己 用来 复习 知识 记录下来 然后 自己 每天 网站 手机 不时 看一看 这些 内容 发现 确实 比较 方便 现在 网站 一些 访问 呵呵 高兴 比较 成就感 我会 每天 看点 文章 如果 精彩 段子 发上去 大家 一个 学习 去处 网站 目前 首页 截图 一下 网站 现在 分类目录 完善 首页 专业知识 数据结构 算法 系列 计算机网络 海量 数据 操作系统 设计模式 linux 其他 编程语言 c++ javahtml css js c# php 其他 笔试 面试 简历 书写 求职 经验 资源 下载 程序 人生 行业资讯 网站 每天 更新 一直 努力 欢迎 大家 访问 大家 找到 自己 理想 工作
495,WIN7下硬盘安装Ubuntu 11.10系统成功,win7 硬盘 安装 ubuntu 11.10 系统 成功 win7 旗舰版 硬盘 安装 ubuntu 11.10 成功 具体 过程 如下 划分 磁盘分区 磁盘 管理 里面 d盘 100g 压缩 40g 计算机 右击 管理 存储 磁盘 管理 空间 ubuntu 其实 ubuntu 本身 大概 需要 3g 空间 大家 可以 根据 自己 磁盘空间 大小 合理安排 分区 设置 启动项 下载 最新 版本 grub4dos 下载 解压缩 目录 grldr grldr mbr grub exe 三个 文件 复制到 根目录 下载 ubuntu 11.10 系统 iso 文件 demon 虚拟光驱 打开 casper 文件夹 目录 找到 vmlinuz initrd lz 解压 复制到 根目录 根目录 建立 menu lst 文件 内容 title install ubunturoot hd0 kernel hd0 vmlinuz boot casper iso scan filename ubuntu iso ro quiet splash locale zh cn utf 8initrd hd0 initrd lz 注意 这里 红色 文件 名字 必须 改成 实际 文件 名字 根目录 新建 一个 文件 命名 boot ini 内容 如下 boot loader operating systems grldr mbr ubuntu 下载 ubuntu 10.10 系统 iso 文件 复制到 c盘 根目录 硬盘 安装 ubuntu 重启 机器 启动项 选择 ubuntu 进入 ubuntu 桌面 打开 终端 输入 代码 sudo umount isodevice 这一 命令 取消 光盘 所在 驱动 挂载 否则 分区 界面 不到 分区 双击 安装 ubuntu 根据 提示 进行 安装 即可 这里 介绍 一下 安装 过程 涉及 分区 问题 选择 手动 使用 最大 连续 空间 点击 前进 开始 安装 一直 一步 直到 安装 完毕 修复 windows 启动项 重新启动 ubuntu 之后 结果 发现 选择 windows 启动项 进入 ubuntu 安装 界面 下面 说明 如何 修复 进人 ubuntu 系统 打开 应用程序 --- 附件 -- 终端 命令 如下 sudo gedit etc default grub 修改 grub timeout 10 然后 终端 输入 sudo update grubupdate 命令 自动 找到 windows 启动项 并且 自动更新 boot grub grub cfg 文件 进入 位置 --- 计算机 --- win7 系统盘 安装 ubuntu 系统 复制到 c盘 那些 文件 vmlinuz initrd lz grldr grldr mbr grub exe menu lst boot ini ubuntu iso 全部 回收站 特别 iso 文件 如果 删除 重启 进入 win7 进入 ubuntu 安装 界面 至此 ubuntu 11.10 安装 完毕 来自 www crazyant net www.51 projob com
499,Dedecms备份还原网站有效方法,dedecms 备份 还原 网站 有效 方法 dedecms 备份 还原 方法 提供 其实 dedecms 网站 备份 恢复 还原 有效 所以 不管 选择 成功 备份 dedecms 网站 以及 dedecms 网站 恢复 还原 成功 dedecms 网站 备份 还原 技巧 首先 旧站 后台 备份 数据库 旧站 ftp 下载 三个 文件夹 data 文件夹 下面 backup data 文件 下载 backup data 文件夹 就行了 这是 数据库 备份 uploads 文件夹 存放 图片 附件 之类 templets 文件夹 旧站 模版 如果 想要 可以 不要 安装 旧站 一样 版本 dede 网站 后台 密码 还有 数据库 密码 旧站 一样 上传下载 旧站 三个 文件 替换 新旧 三个 文件夹 后台 数据库 还原 更新 网站 内容 就行了 dedecms 备份 还原 注意 空间 安装 一个 dedecms 系统 记得 编码 要选 原来 一样 非常 重要 一步 data backup data 找到 tables struct 开头 这个 txt 文件 然后 记事本 或者 editplus 打开 然后 找到 default charset utf8 或者 default charset gbk 全部 它们 去掉 不然 后果 相当 严重 data backup data 目录 备份 数据库 文件 ftp 传到 相应 目录 进入 安装 系统 后台 系统管理 数据库 还原 全选 所有 备份文件 并且 勾选 还原 结构 然后 单击 开始 还源 数据 可以 恢复 还原 重新 登录 后台 然后 生成 html 可以 dedecms 网站 备份 还原 技巧 dedecms 备份 登陆 网站 后台 进入 系统 数据库 备份 还原 选择 页面 列出 所有 点击 提交 即可 ftp 中将 所有 文件 下载 本地 尤其 data backupdata 目录 以及 templets 目录 dedecms 恢复 网站 出现 问题 需要 转移 恢复 数据 时候 按照 以下 步骤 进行 所有 文件 传到 服务器 删除 install 目录 install lock txt index php bak 更名 index php 运行 http 新网址 install 重新安装 dedecms 进入 后台 系统 数据库 备份 还原 点击 右上角 数据 还原 进行 恢复 即可 dedecms 网站 备份 还原 技巧 适合 空间 dedecms 空间 迁移 空间 备份 数据 空间 后台 备份 数据 程序 数据 传到 空间 然后 空间 重新安装 dedecms ftp 软件 空间 程序 数据 传到 空间 注意 包括 模板 风格 上传 上传 程序 覆盖 安装 程序 修改 数据库 配置文件 这步 重要 ftp 软件 空间站 根目录 数据库 配置文件 dedecms common inc php 记事本 打开 修改 地方 如下 几处 dbhost localhost 数据库 服务器 一般 不必 dbuser root 数据库 用户名 dbpw sohu 数据库 密码 dbname vc 数据库 还原 数据 直接 后台 还原 最后 更新 dedecms 网站 缓存 可以 dedecms 备份 还原 完毕
502,按大小拆分超大文件的方法（本文测试了一个62G的文件）,大小 拆分 超大 文件 方法 本文 测试 一个 62g 文件 遇到 一个 问题 网络 下载 一个 62g 文件 新浪 微博 语料 地址 http itee uq edu au dke wise2012 htm 之后 进行 其他 处理 显然 分成 文件 处理 比较 当时 windows 系统 貌似 没有 这种 拆分 如此 文件 工具 本人 试着 c++ 内存 映射 方法 内存 里建 一个 内存 映射 文件 然后 超大 文件 一部分 映射 内存 然后 分片 文件 文件 一部分一部分 读出来 一部分 换掉 一部分 然后 写入 文件 从而 达到 拆分 文件 目的 然而 网上 好多 文章 内存 映射 这块 还是 搞懂 尤其 参数 复杂 只好 放弃 最后 发现 windows 下面 难以解决 问题 linux 早就 存在 现成 方案 解决 就是 split 命令 split 具体 使用 方法 一下 linux split 命令 功能 说明 切割 文件 split -- help -- version 字节 字节 切割 文件 输出 文件名 补充 说明 split 文件 切成 文件 预设 1000 行会 切成 一个 文件 指定 多少 就要 切成 一个 文件 字节 指定 多少 就要 切成 一个 文件 支持 单位 字节 参数 类似 切割 尽量 维持 每行 完整性 -- help 显示 帮助 -- version 显示 版本信息 输出 文件名 设置 切割 文件 前置 文件名 split 自动 前置 文件名 加上 编号 使用 例子 split 100m filename 看过 命令 发现 其中 命令 照顾 到行 就是说 截取 时候 不会 一行 中间 截断 最终 只用 一行 命令 解决 问题 split 1024m 62g txt output 命令 一个 62g 文件 分成 每个 1g 文件 并且 不会 将行 拆开 新浪 微博 这个 数据 每行 一条 不能 拆分
505,win7系统笔记本设置成虚拟WiFi热点（即“无线路由器”）,win7 系统 笔记本 设置 虚拟 wifi 热点 无线 路由器 如果 家中 只有 一根 网线 两台 多台 笔记本 需要 连接 网络 那么 我们 必须 一个 无线 有线 路由器 不是 其实 借助 软件 可以 笔记本 身为 无线 路由器 wifi 热点 windows7 为例 其实 本身 自带 wifi softap 虚拟 无线 ap 功能 激活 他们 可以 自己 笔记本 身为 一个 wifi 热点 其他 笔记本 连入 笔记本 上网 打开 笔记本 无线 网卡 开关 管理员 身份 进行 快捷键 win 输入 cmd 回车 操作 然后 打开 命令提示符 输入 netsh wlan set hostednetwork mode allow ssid binglanpc key binglanwifi 命令 回车 这样 初步 启用 设定 虚拟 wifi 网卡 ps 命令 三个 参数 mode 是否 启用 虚拟 wifi 网卡 改为 disallow 禁用 ssid 无线网络 名称 最好 英文 本文 binglanpc 为例 key 无线网络 密码 以上 字符 本文 binglanwifi 为例 网络连接 看到 多出 一个 名为 microsoft virtual wifi miniport adapter 无线连接 表示 开启 成功 为了 其他 网卡 区分 重命名 虚拟 wifi 接着 就是 连接 internet 网络连接 右键 单击 已经 连接 internet 网络连接 依次 选择 属性 共享 允许 其他 连接 虚拟 wifi 即可 点击 确定 之后 那个 提供 共享 网卡 图标 旁会 出现 共享 字样 ps 此时 可能 出现 无法 启用 共享 访问 错误代码 0x80004005 未指定 错误 遇到 情况 右键 单击 桌面上 计算机 依次 选择 管理 左边 菜单栏 双击 打开 服务 应用程序 菜单 选择 服务 右边 找到 选择 windows firewall 点击 启用 服务 然后 进行 一次 上边 这段 操作 即可 接下来 命令提示符 运行 netsh wlan start hostednetwork 从而 开启 无线网络 ps start 改为 stop 即可 关闭 无线网络 最后 这个 虚拟 wifi 红叉会 消失 表示 wifi 基站 已建好 然后 其他 笔记本 搜索 无线网络 binglanpc 输入 密码 binglanwifi 共享 上网
512,Adobe Dreamweaver CS6官方简体中文版安装+破解过程,adobe dreamweaver cs6 官方 简体中文版 安装 破解 过程 dw 用来 html css 开发 无疑 超级 快速 现在 php 还有 代码 提示 功能 真的 越来越 好用 本文 阐述 dreamweaver cs6 安装 过程 下载 官方 原版 adobe dreamweaver cs6 提供 一个 地址 点击 下载 下载 adobe dreamweaver cs6 注册机 破解补丁 提供 一个 地址 打开 下载 页面 疯狂 蚂蚁 www crazyant net 程序员 求职网 www.51 projob com3 安装 官方 原版 adobe dreamweaver cs6 步骤 断网 运行 下载 exe 文件 解压 安装包 运行 setup exe 或者 已经 自动 运行 一步 输入 序列号 一步 输入 序列号 界面 随便 输入 一串 数字 比如 全是 点下 一步 安装程序 开始 检测 序列号 发现 无法 联网 窗口 选择 以后 验证 序列号 然后 可以 继续 安装 安装 成功 运行 一下 软件 然后 破解补丁 那个 dll 文件 覆盖 程序 根目录 同名 文件 重新启动 软件 不再 提示 输入 序列号 安装 破解 结束 试用 一下 dw6 依然 犀利 利器 在手 天下 来自 www crazyant net www.51 projob com
515,看完这20部电影相当于学了经济学（投资理财必看电影）,20 电影 相当于 学了 经济学 投资 理财 必看 电影 听说 20 电影 相当于 读完 清华大学经济管理学院 复杂 商业 社会 创业 经济 商业 人情世故 法律 边沿 只有 勇气 只有 梦想 只有 天真 那么 只有 一场空 20 电影 商学院 学生 学习 商科 要求 必须 影片 其中 包括 哈佛商学院 一直 首推 华尔街 还有 沃顿 商学院 第一位 颠倒乾坤 斯坦福 要求 商科 学生 必看 锅炉房 之后 商业 运行 本质 规则 深入 了解 职场 生涯 不小 帮助 华尔街 wall street 1987 内部 交易 违法 违法 怎么 能够 发财 关键 如何 违法 同时 可以 掩盖 不看 这个 影片 怎么 能够 随便 进入 股市 拜金 glengarry glenn ross 1992 房地产 进入 萧条 时候 美国 房屋中介 销售 顾问 什么 他们 如何 利用 数据库 如何 门到 房地产 销售 出去 如何 萧条 包装 房地产 如何 瞄准 新婚 家庭 住房 需求 颠倒乾坤 trading places 1983 经济 交易 行为 代名词 只要 交易 需要 学会 评估 交易 是否 合算 需要 透视 交易 对方 内心 秘密 交易 中学 核心 法则 在世界上 任何 国家 只要 交易 地方 适用 锅炉房 boiler room 2000 难以想象 违法 交易 几乎 证券市场 形影不离 一个 19 年轻人 如此 近距离 目睹 财富 操纵 过程 富有 不过 一个 随机 选择 硅谷 传奇 pirates of silicon valley 1999 比尔 66 盖茨 斯蒂夫 66 乔布斯 几乎 所有 方面 看法 观点 对立 他们 只有 一个 事情 共同 就是 一切 可能 封杀 这个 影片 硅谷 高科技 公司 如何 孵化 不到 25 年轻人 利用 什么样 市场 规则 如何 市场 规则 客户 竞争对手 形成 一个 共同体 层出不穷 阴谋 笼罩 硅谷 上空 可口可乐 小子 the coca cola kid 1985 这是 一个男孩 可乐 创造 一项 事业 故事 作为 一个 碳酸 饮料 营销 从业员 不得不 回答 一个 问题 边远 澳大利亚 小镇 为什么 没有 一瓶 可口可乐 营销 生意 不可或缺 部分 尤其 创业 不可 缺少 发达 the secret of my success 1987 主要 讲述 美国 堪萨斯 男孩 纽约 飘荡 历程 如果 纽约 可以 代表 100 人类 商业活动 中心 那么 任何 21 世纪 年轻人 不得不 面对 大城市 浮华 喧嚣 躁动 优势 合作 in good company 2004 公司 通过 收购 长大 收购 知道 收购 销售主管 怎么 知道 销售 人员 背后议论 什么 联想 收购 ibm 失败 核心 因素 就是 根本 没有 这个 影片 公司 公司 之间 发生 买卖 时候 作为 公司 一员 位置 哪里 巴塞罗那 barcelona 1994 美国 销售 方式 真的 可以 通行 全球 一个 美国 销售员 西班牙 销售 经历 我们 学到 销售 价值观 销售 客户 文化 处理 方式 销售 客户关系 把握 10 甜心 先生 jerry maguire 1996 做生意 拿出 诚意 show me the money 看到 真的 任何 生意 如此 生意 没有 牢靠 友谊 创业 必须 牢记 教训 11 上班 一条 office space 1999 办公室 政治课 实战 教材 市场经济 环境 中当 公司 遇到 危机 裁员 本质 动机 员工 公司 作用 核心 意义 必须 学习 商业 社会 基本 规则 12 解构 企业 the corporation 2003 18 世纪 美国 法律 正式 通过 一个 企业 可以 一个 个人 组织 行为 仅仅 两个 世纪 美国 这个 公司法 居然 影响 全球 可以 中国 公司法 看到 类似 描述 这个 冠之以 法人 称号 横行 全球 世界 一个 角度 受到 影响 个人 贪婪 个人 欲望 没有止境 膨胀 本片 深刻 本质 揭示 资本主义 商业 规则 无情地 揭示 存在 弊病 13 惊爆 内幕 the insider 1999 商业 社会 本质 货币 自由 交换 只要 你情 似乎 交换 什么 可以 交易 商业价值 交易 定价 原理 商业 信誉 交易 作用 这个 影片 活生生 展示 出来 商科 学生 必须 理解 金钱 统治 人类 社会 必然结果 以及 这种 结果 具备 可逆 特性 14 影子 大亨 the hudsucker proxy 1994 一部 票房 不怎么样 商业 却说 影片 一个 公司 老板 自杀 公司 蒸蒸日上 董事会 实权 人物 开始 行动 行动 目的 当然 私欲 横流 公司 治理 企业 董事会 操作 实战 这部 影片 不可多得 实战 教案 15 反垄断 antitrust 2001 一个 斯坦福 电脑 天才 毕业 科技 大亨 录用 负责 发展 全球 通信 系统 之后 发现 原来 自己 用作 侦察 商业 对手 达到 垄断市场 目的 此片 微软 垄断 一默 讲述 一个 鲜明 时代 全球 意义 反对 金钱 高科技 垄断 故事 16 魔鬼 营业员 rogue trader 1998 1995 巴林 银行 这家 全球 古老 银行 之一 破产 曾经 英国 贵族 最为 信赖 金融机构 拥有 200 多年 优异 经营 历史 却没能 破产 结局 令人震惊 这样 一个 惨痛 结局 出自于 一个 普通 证券 交易员 尼克 66 李森之手 这部 出自 真实 案例 电影 大家 学习 银行业务 尤其 投资 业务 最好 教案 17 抢钱 世界 other people &# 39 money 1991 一部 基于 美国 真实 故事 改编 影片 从中 可以 了解 商业法 企业 兼并 商业 诉讼 规范 商业 流程 兼并 重组 流程 美国 商业 自由市场 到处 充满 利己 行为 利他行为 冲突 矛盾 恰好 是从 这些 冲突 矛盾 可以 学到 不同 动机 以及 各种 眼花缭乱 手段 18 败露 disclosure 1994 一位 踌躇满志 公司 高管 一天 不仅 失去 原应 属于 自己 晋升 机会 而且 迎来 自己 10 年前 同居 女友 担任 顶头上司 已有 妻儿 拒绝 女上司 重温旧梦 要求 于是 女上司 耍出 种种 手腕 公司 排挤 甚至 诬称 自己 性骚扰 忍无可忍 诉诸 法律 一位 精明 律师 帮助 公司 那位 霸道 女上司 展开 较量 片中 体现 办公室 政治 公司 群体 人际关系 行为准则 难得 职场 教材 19 男人 百分百 what women want 2000 一个 小小的 意外 主角 具备 能够 阅读 女性 头脑 能力 这是 一部 巧妙 方式 揭示 女性 所思 所想 影片 商业 心理学 女性 行为学 广告学 这部 影片 学习 亮点 20 门口 野蛮 barbarians at the gate 1993 1988 kkr 公司 收购 雷诺 贝斯 公司 华尔街 震惊 全球 重大 金融 事件 专业人士 事后 分析 这桩 交易 合法 基础 骗局 因为 kkr 公司 杠杆 收购 手法 不仅 需要 现金 需要 看见 现金 甚至 没有 知道 哪里 整个 过程 根本就是 圈套 kkr 那些 高层 以及 交易过程 那些 华尔街 人士 由于 表现 前所未有 贪婪 狡猾 技巧 冠以 野蛮 称号
540,C++拆分字符串代码（实现split）,c++ 拆分 字符串 代码 实现 split 以下 c++ 实现 一个 字符串 拆分 以后 存放 一个 string 当中 代码 使用 时候 传入 三个 参数 即可 非常 好用 ifndef functions define functions include iostream include string include algorithm include functional using namespace std include vector inline string ltrim string ss string iterator find if ss begin ss end not1 ptr fun isspace ss erase ss begin return ss inline string rtrim string ss string reverse iterator find if ss rbegin ss rend not1 ptr fun isspace ss erase base ss end return ss inline string trim string st ltrim rtrim st return st 一个 par 分割 整个 字符串 分割 以后 存到 vec 里面 void splitstr vector string vec string str string par string size type pos previouspos 查找 位置 一个 位置 处理 没有 分割 情况 if str find par string npos if trim str empty vec push back trim str return string strtmp for pos str find par pos string npos previouspos pos par size pos str find par pos par size strtmp str substr previouspos pos previouspos if trim strtmp empty vec push back strtmp strtmp str substr previouspos pos previouspos if trim strtmp empty vec push back strtmp endif 函数 可以 以下 示例 调用 void main vector string vec splitstr vec cout 分割 字符串 str endl cout 分割 子串 endl for int vec size ++ cout vec endl cout endl
545,[C++]数据结构之堆-上滤下滤以及用于排序,c++ 数据结构 之堆 上滤 下滤 以及 用于 排序 include iostream using namespace std 就是 一棵 完全 二叉树 物理 存储 方式 数组 一般 情况 牺牲 第一个 元素 arr 剩下 满足 开始 计数 若堆 开始 计数 那么 对于 一个 节点 孩子 孩子 基本操作 包括 上滤 下滤 上滤 不是 因此 通过 arr 元素 上滤 达到 调整 目的 下滤 不是 因此 通过 arr 元素 下滤 达到 调整 目的 define heap size 10 这里 我要 一个 里面 要放 10 元素 define arr size heap size 之前 默认 实现 牺牲 元素 define heapelemtype int 定义 元素 类型 heapelemtype heaparray arr size 存储空间 大顶 上面 最大 基本操作 上滤 非堆 也就是说 只要 调整 元素 就是 一个 新堆 注意 当前 可用 元素 最大 下标 不能 超过 arr size void shiftup heapelemtype heaparray int heapelemtype tmp heaparray while && tmp heaparray heaparray heaparray heaparray tmp 大顶 上面 最大 基本操作 下滤 不是 就是 只要 调整 元素 就是 一个 大顶 注意 当前 堆中 元素 最大 下表 不能 超过 arr size void shiftdown heapelemtype heaparray int first int heapelemtype tmp heaparray first int father first child while child father 获取 孩子 较大 孩子 下标 if child && heaparray child heaparray child child ++ 比较 节点 较大 孩子 是否 需要 继续 调整 if tmp heaparray child break 否则 的话 孩子 往上走 heaparray father heaparray child father child heaparray father tmp void printheaparr const heapelemtype heaparray const int for int ++ cout heaparray cout endl void swap heapelemtype heaparray int int heapelemtype tmp heaparray heaparray heaparray heaparray tmp 堆排序 用堆 属性 即大顶 顶部 就是 最大 节点 因此 我们 可以 每次 节点 末尾 节点 交换 然后 除了 末尾 节点 其他 节点 重新 调整 一个 然后 循环 一步 之前 需要 杂乱 节点 调整 一个 void heapsort heapelemtype heaparray int 第一步 杂乱 数组 调整 一个 大顶 需要 调整 可以 int tmp for tmp tmp tmp -- shiftdown heaparray tmp 第二步 交换 第一个 节点 最大值 末尾 节点 然后 调整 除了 末尾 节点 其他 节点 一个 新大顶 for tmp tmp tmp -- swap heaparray tmp shiftdown heaparray tmp void main cout 上滤 endl heapelemtype heaparray arr size int printheaparr heaparray shiftup heaparray printheaparr heaparray cout 下滤 endl heapelemtype heaparraysec arr size printheaparr heaparraysec shiftdown heaparraysec printheaparr heaparraysec cout 排序 endl heapelemtype heaparraysort arr size printheaparr heaparraysort heapsort heaparraysort printheaparr heaparraysort system pause
548,有句话说的非常好,有句 非常 昨晚 一个 讲座 腾讯 创新 大赛 大会 会上 学到 好多 东西 总裁 大学毕业 几百万 就是 网站 流量 非常 主要 还是 因为 兴趣 自己 非常 喜欢 事情 英王 一定 自己 感兴趣 事情 这样 充满 激情 不会 感到 疲惫 后来 有位 技术 出身 老总 一句 刚好 小狗 看到 感触 非常 每天 一些 超出 自己 能力 事情 一般 超过 自己 能力 30% 这样 技术 不断 挑战 难题 一天 发现 没有 技术难题 这时候 自动 转向 产品 就是 一个 职业规划 今天上午 参加 绿盟 实习生 招聘 面试 c++ 后来 推荐 web 其实 一直 web 知道 是否是 最终 职业 路程 毕竟 好多 时间 c++ 上面 然而 擅长 就是 web 好多年 一直 web 相关 东西 html css js asp access mysql php ajax jsp jquery 框架 mvc 二次开发 thinkphp zend dede ecshop wordpress 发现 一直 号称 我要 c++ 可是 php 了解 一直 深入 小狗 人要 自己 喜欢 事情 php 态度 现在 有些 客观 然而 各种 成功 学都 号称 人要 自己 擅长 事情 php 比较 喜欢 总是 感觉 没有 挑战性 整天 代码 修改 简单 逻辑 如果 后面 人生 一直 重复 这样 劳动 不是 没意思 不过 也许 自己 想当然 如果 绿盟 实习 机会 看看 php 到底 接触 多么 问题 到底 有没有 挑战性 希望 激发 欲望 我要 成功 欲望 越来越 发现 倾听 好处 就是 能够 听懂 别人 思想 这样 思维 碰撞 关键 能够 促进 自己 思考 越来越 发现 懒惰 甚至 不想 思考 倾听 身体 前倾 身体 坐直 集中 精神
576,PHP操作符可变变量测试变量等总结,php 操作符 可变 变量 测试 变量 总结 php mysql web 开发 读书笔记 第一章 php 快速 入门 主要 记录 一些 操作符 常见 变量 用法 php 注释 三种 方法 注释 内容 注释 内容 注释 内容 这是 shell 注释 方法 三种 获取 表单 变量 方法 name 特点 简单 缺点 需要 开启 register globals 配置 选项 选项 引发 安全 问题 post name 常用 方法 http post vars name 已经 被弃 显示 字符串 三种 方法 单引号 xxx nameyyy zzz 特点 里面 文本 当成 文本 不会 计算 内容 双引号 xx nameyy zzz 特点 里面 变量 替换成 内容 如果 双引号 需要 转义 heredoc 语法 双引号 一样 使用 方法 echo eee 内容 可以 任何 包括 eee 字符串 内容 里面 变量 解释 eee4 php 数据类型 integer 整形 float 或者 double 浮点 string 字符串 boolean 布尔 类型 array 数组 类型 object 对象 类型 null 类型 resource 资源类型 比如 数据库 连接 打开 文件 php 类型转换 php 类型转换 方法 c语言 相同 因此 只要 相同 语句 写过来 即可 discount float discount 完全 可以 以下 多种 类型转换 int double string array object 注意 这里 强制 类型转换 如果 声明 一个 变量 需要 括号 比如 这个 函数 声明 参数 声明 数组 类型 如果 括号 变成 强制 类型转换 这里 需要 括号 function printarr array arr 例如 代码 函数 用于 打印 数组 注意 形参 类型 不用 括号 function printarr array arr echo pre print arr echo pre echo br php 可变 变量 可变 变量 允许 我们 动态 改变 一个 变量 名称 varname username varname crazyant 相当于 username crazyant 声明 使用 常量 define user count 100 声明 常量 方法 total user count count 使用 常量 方法 就是 不用 符号 php 预定 很多 常量 它们 可以 使用 phpinfo 函数 进行 查看 php 变量 作用域 这块 感觉 不是 清楚 因此 记录 一下 内置 超级 全局变量 可以 脚本 任何 地方 可用 常量 定义 以后 全局 可见 脚本 变量 全局 可见 函数 可见 函数 内部 使用 全局变量 需要 声明 一下 global 声明 名字 一样 函数 内部 静态 变量 外部 可见 函数 多次 运行 可以 保存 函数 内部 变量 局部变量 函数 结束 消失 超级 全局变量 完整 列表 globals server 这是 服务器 环境变量 数组 get post cookie 这是 cookie 变量 数组 files env request session10 引用 操作符 引用 操作符 c++ 引用 操作符 用法 一模一样 这时候 可以 通过 重置 改变 它们 指向 地址 unset 这样的话 没有 相当于 销毁 指针 可是 还有 还是 711 php 错误 抑制 操作符 符号 放在 任何 表达式 前面 如果 表单 出现 错误 警告 不会 显示 出来 比如 语句 不会 显示 错误 12 php 执行 服务器 命令 操作符 out ls la echo pre out pre 两条 语句 linux 执行 语句 windows 可以 改成 dir 13 php 关于 数组 操作符 array 得到 包括 所有 元素 数组 注意 这里 相加 如果 键值 那么 没有 问题 相当于 合并 如果 只有 的话 前面 数组 元素 后面 元素 覆盖 以此类推 因此 合并 数组 还是 array array merge array array1 array ... 测试 如下 php 函数 用于 打印 数组 注意 形参 类型 不用 括号 function printarr array arr echo pre print arr echo pre arra array aa ab echo 数组 br printarr arra arrb array ba bb echo 数组 br printarr arrb arrc arra arrb echo br printarr arrc arrc array merge arra arrb echo array merge 数组 br printarr arrc 运行 截图 是否 具有 相同 键值 是否 具有 相同 键值 顺序 14 php 类型 操作符 if obj instanceof student 判断 一个 对象 是不是 某个 一个 实例 15 php 格式化 小数位 方法 使用 函数 number format 进行 比如 number format price 就是 price 变量 小数 剩下 16 测试 设置 变量 类型 获取 设置 参数 类型 返回 就是 bool int double string array object resource 这些 关键词 string gettype mixed var bool settype mixed var string type 设置 变量 类型 17 php 测试 变量 类型 函数 php 提供 一些 测试函数 变量 作为 参数 返回 true 或者 false 用来 测试 变量 类型 is array is double is float is real is long is int is integer is string is bool is object is resource is null is scalar 检查 是否是 标量 整数 bool 字符串 浮点数 is numeric 检查 是否是 任何 类型 数字 或者 数字 字符串 is callable 检查 变量 是否是 有效 函数 名称 18 php 测试 变量 状态 bool isset mixed var 测试 变量 是否 存在 存在 返回 truevoid unset mixed var 销毁 一个 变量 bool empty mixed var 测试 变量 是否 存在 以及 是否 非空 或者 019 php 变量 解释 应该 强制 类型转换 类似 int intval mixed var int base 其中 base 可以 指定 进制 float floatval mixed var string strval mixed var 20 elseif else if 至此 第一章 内容 结束 学习 内容 主要 操作符 比如 变量 类型 测试 变量 类型
581,PHP对文件的操作总结,php 文件 操作 总结 使用 fopen 打开 文件 fp fopen txt 方法 打开 一个 文件 txt fopen 具有 参数 通常 参数 第二个 参数 打开 文件 模式 以下 fopen 打开 文件 全部 模式 模式 模式 名称 解释 只读 打开 文件 从头开始 只读 打开 文件 从头开始 读写 从头开始 文件 存在 删除 文件 内容 文件 存在 创建 文件 从头开始 读写 文件 存在 删除 所有 否则 创建 文件 谨慎 模式 打开 文件 存在 文件 不会 打开 fopen 返回 false 谨慎 读写 模式 打开 文件 存在 文件 不会 打开 fopen 返回 false 追加 打开 文件 若有 内容 末尾 添加 内容 文件 存在 创建 文件 追加 打开 文件 若有 内容 末尾 开始 读写 文件 存在 创建 文件 二进制 推荐 模式 用于 其他 模式 连接 文本 用于 其他 模式 结合 推荐 除非 已经 选项 fopen 第三个 选项 可选 代表 是否 include path 搜索 一个 文件 如果 设置 fopen 第四个 参数 可选 用来 打开 远程 文件 比如 http www.51 projob com fopen 返回 只是 一个 文件 指针 进行 操作 还要 其他 函数 fopen 打开 远程 文件 首先 需要 php ini allow url open 开启 fwite 用于 文件 写入 内容 fwite fp outputstring 一个 替换 函数 file put contents 原型 int file put contents string filename string data int flag resource context 一个 可以 替代 fopen 函数 file get contents 可以 一个 文本文件 所有 内容 放入 一个 单个 字符串 fwite 参数 fwite 具有 三个 参数 int fwite resource handle string string int length 第三个 参数 写入 最大 字符 数目 比如 可以 这样 fwite fp outputstring strlen outputstring fclose fp 用于 关闭 文件 如果 关闭 成功 函数 返回 true 一般 不用 测试 判断 何时 读完 文件 feof 如果 按行 字符 读取 文件 需要 判断 是否 读完 可以 这样 判断 while feof fp 每次 读取 一行 数据 fgets fgetss fgetcsv order fgets fp 999 一直 读取数据 知道 遇到 换行 或者 eof 或者 999b string fgetss resource fp int length string allowable tags fgets 一样 不过 这个 可以 过滤 php html 标记 并且 指定 过滤 特殊 标记 放在 allowable tags 变量 可以 array fgetcsv resource fp int length string delimiter string enclosure 文件 使用 定界符 时候 可以 这种 方法 读取 比如 order fgetcsv fp 10 注意 返回 数组 读取 整个 文件 readfile fpassthru file int readfile string filename int use include path resource context 第三个 参数 只有 文件 远程 打开 返回值 文件 字节 数目 fp fopen txt rb fpassthru fp 如果 成功 返回 true 否则 返回 false arr file txt 文件 按行 读取 存放 arr 数组 array file string filename int flags resource context file 整个 文件 载入 一个 数组 每行 成为 数组 一个 元素 使用 fgetc fp 每次 读取 一个 字符 10 读取 任意 长度 string fread resource fp int length 11 查看 文件 是否 存在 file exists 12 确定 文件大小 filesize txt 13 删除 一个 文件 unlink txt 14 文件 定位 rewind fseek ftell rewind 指针 复位 文件 开始 int fseek resource fp int offset int whence 文件 指针 whence 位置 移动 offset 字节 可以 seek cur seek end 作为 whence 15 文件 锁定 这是 为了 实现 文件 互斥 访问 设置 函数 bool flock resource fp int operation int wouldblock 第二个 参数 指定 文件 类型 lock sh 操作 锁定 文件 可以 共享 别人 可以 lock ex 操作 锁定 互斥 文件 不能 共享 lock un 释放 已有 锁定 lock nb 防止 请求 加锁 阻塞 注意 flock 不能 用于 ntf 或者 fat 文件系统
591,PHP数组使用、特性、函数的总结,php 数组 使用 特性 函数 总结 包含 其他 数组 数组 成为 多维 数组 关联 数组 即非 数字 索引 数组 使用 更有意义 数据 作为 数组 索引 数组 索引 数组 products array 一个 对象 一样 初始化 数组 复制 arra arrb 即可 数组 arrb 内容 复制到 数组 arra 使用 range 可以 一个 范围 直接 放到 一个 数组 返回 比如 numbers range 10 letters range range 具有 第三个 参数 间隔 意思 比如 要用 10 之间 奇数 数组 odds range 10 数组 具有 一些 功能 如果 信息 存放 磁盘 文件 可以 直接 文件 载入 数组 如果 数组 数据 存放 数据库 可以 直接 数据库 载入 数组 可以 使用 函数 每次 提取 数组 一部分 内容 或者 数组 进行 重新 排序 php 数组 需要 预先 初始化 创建 第一次 使用 自动 创建 如果 数组 arra 元素 那么 语句 arra 将会 自动 添加 一个 新元素 数组 foreach 访问 foreach arra as echo nbsp 使用 不同 索引 关联 数组 关联 数组 可以 每个 变量值 任何 关键字 或者 索引 联系 起来 关联 数组 初始化 price array tires 100 oil 10 spark 使用 foreach 关联 数组 进行 遍历 foreach 每次 数组 内容 放到 一个 键值 里面 进行 访问 foreach price as key value echo key value br 结果 测试 关联 数组 -------------- tires 100oil 10spark 44 使用 while each 结构 访问 关联 数组 每次 一个 键值 作为 整体 返回 类似 pair key value while elem each price echo elem key elem value br 结果 一样 访问 关联 数组 list each 搭配 进行 高级 用法 reset price 貌似 遍历 因此 数组 数组 指针 变成 最后 一个 所以 重置 一下 echo br 使用 list each 遍历 数组 br while list product pri each price echo product pri br 注意 each 函数 数组 记录 当前 元素 如果 希望 两次 以上 使用 数组 必须 reset 函数 当前 元素 重新 设置 数组 开始 地方 数组 操作符 主要 联合 操作符 解释 如下 例如 arra arrb 两个 数组 联合 数组 arrb 附加 arra 但是 任何 关键字 冲突 元素 不会 添加 数字 索引 数组 升序 排序 bool sort array array int sort flags sort regular 第二个 参数 sort regular 默认 sort numeric 作为 数字 比较 sort string 作为 字符串 比较 关联 数组 升序 排序 分为 两种 按照 关键字 排序 按照 key 内容 排序 bool ksort array array int sort flags sort regular 按照 排序 按照 value 排序 bool asort array array int sort flags sort regular 其中 第二个 参数 sor 相同 数组 降序 排序 sort ksort asort 数组 进行 升序 排序 rsort krsort arsort 数组 进行 降序 排序 但是 用法 相同 10 使用 回调 函数 多维 数组 进行 排序 如下 一个 排序 echo br 使用 回调 函数 多维 数组 排序 br products array array tir tires 100 array oil oil 10 array spk spark plugs 以下 回调 函数 两个 参数 数组 一维 元素 function compare if return else if return elsereturn usort products compare 传入 函数 名字 usor 代表 用户 因为 要求 用户 传入 比较 函数 同样 uasort uksort 函数 多维 数组 排序 如果 进行 反向 排序 只要 回调 函数 返回值 取反 就行了 比如 usrot products reverse compare 11 数组 进行 重新 排序 bool shuffle array array 函数 一个 数组 随机 打乱 array reverse 返回 数组 反序 副本 不会 改变 数组 array array reverse array array bool preserve keys false 12 array push array popint array push array array mixed var mixed ... 数组 末尾 添加 元素 例如 代码 array push stack apple raspberry 一个 array popmixedarray pop array array array pop 弹出 返回 末尾 元素 php stack array orange banana apple raspberry fruit array pop stack print stack 结果 一样 末尾 元素 删除 array orange banana apple 13 explode 字符串 分成 数组 array explode string delimiter string string int limit 第三个 参数 设置 返回 limit 元素 php str one two three four positive limitprint explode str negative limit since php 5.1 print explode str 结果 array one two three four array one two three 14 php 其他 数组 函数 数组 浏览 函数 数组 一个 内部 指针 用来 遍历 数组 指针 可以 使用 改变 比如 each 就是 使用 指针 each 返回 当前 元素 然后 前移 指针 current reset 指针 指向 数组 开头 end 指针 指向 数组 末尾 next 前移 指针 然后 返回 元素 each 相反 pos prev 前移 指针 然后 返回 元素 next 相反 15 超级 强大 数组 一个 元素 使用 任何 回调 函数 array walk bool array walk array array callable funcname mixed userdata null 注意 函数 不管 数组 指针 指向 哪里 就是 从头 到位 开始 遍历 如果 第三个 参数 设置 我们 可以 自己 回调 函数 使用 参数 回调 函数 形式 如下 myfunc value key userdata 一般来说 funcname 参数 第一个 value 第二个 key 可以 忽略 key userdata 只带 参数 valueecho br 使用 array walk 每个 元素 应用 一个 函数 br arrint array echo 数组 br printarr arrint 注意 第一个 参数 因为 改变 所以 引用 function myfunc val key count val count array walk arrint myfunc 每个 元素 乘以 3echo 使用 array walk 以后 数组 br printarr arrint 结果 array 使用 array walk 以后 数组 array 12 15 18 16 统计 数组 元素 个数 count sizeof array count values sizeof count 返回值 相同 array count values 用法 不同 返回 统计 数目 php array array hello world hello print array count values array 结果 array hello world 17 键值 关联 数组 每个 元素 建立 一个 变量 extract int extract array var array int extract type extr overwrite string prefix null 比如 代码 php suppose that var array is an array returned from wddx deserialize size large var array array color blue size medium shape sphere extract var array extr prefix same wddx echo color size shape wddx size 结果 blue large sphere medium 可以 看出 意思 作为 变量名 新建 变量 为了 防止 冲突 设定 第二个 第三个 参数 用于 处理 冲突 第三个 参数 指定 新建 变量 前缀 18 小结 数组 php 超级 本章 主要 数组 进行 概念 定义 foreach each list 遍历 方法 array walk 回调 使用 打乱 排序 抽取 各种 数组 操作
600,PHP字符串函数、知识要点总结,php 字符串 函数 知识 要点 总结 主要 包括 以下 方面 字符串 格式化 字符串 连接 分割 字符串 比较 使用 字符串 函数 匹配 替换 字符串 使用 正则表达式 一篇 文章 专门 总结 字符串 格式化 chop rtrim ltrim trim 用来 清理 字符串 空格 如果 字符串 存入 文件 或者 数据库 或者 其它 字符串 进行 比较 需要 清理 空格 例如 name trime post name string trim string str string charlist 函数 trim 原型 trim 函数 默认 去除 空格 但是 第二个 参数 可以 指定 一个 需要 过滤 字符 列表 例如 trimmed trim hello hdwr 使用 html 格式化 nl2br 函数 以便 显示 函数 字符串 换行符 替换成 html br 以便 浏览器 显示 三个 格式化 字符串 函数 print printf sprintf 以便 显示 int print string arg echo 相同 只不过 返回值 true 表示 成功 int printf string format mixed args mixed ... 格式化 字符串 输出 浏览器 string sprintf string format mixed args mixed ... 返回 一个 格式化 字符串 内存 格式化 字符串 使用 printf sprintf 可以 完全 替代 number format 比如 格式 字符串 中用 %. 2f 可以 格式化 小数 格式化 字符串 格式 填充 字符 宽度 精度 类型 如果 打印 需要 使用 %% 转换 填充 字符 用来 填充 变量 直至 指定 宽度 默认 空格 如果 指定 空格 或者 需要 作为 前缀 否则 加上 作为 前缀 字符 指明 对齐 还是 默认 对齐 宽度 指定 替换 变量 多长 空间 精度 必须 前面 带个 小数点 指定 小数点 后面 需要 显示 位数 以下 格式化 类型 类型 意义 解释 整数 作为 二进制 输出 解释 整数 作为 字符 输出 解释 整数 作为 小数 输出 解释 精度 作为 浮点数 输出 解释 整数 作为 八进制 输出 解释 字符串 作为 字符串 输出 解释 整数 作为 指定 小数 输出 解释 整数 作为 带有 小写字母 十六进制 输出 解释 整数 作为 带有 小写字母 十六进制 输出 注意 参数 顺序 转换 说明 顺序 一定 相同 比如 2f 就是 列表 第二个 参数 替换 格式 更好 两个 函数 接受 参数 列表 而是 接受 一个 数组 int vprintf string format array args string vsprintf string format array args 比如 phpprint vsprintf 04d -% 02d -% 02d explode 1988 1988 08 01 改变 字符串 字母 大小写 strtoupper str 字符串 转换成 大写 strtolower str 字符串 转换成 小写 ucfirst str 如果 字符串 第一个 字符 字母 字符 转为 大写 ucwords str 字符串 每个 单词 第一个 字母 转换 大写 格式化 字符串 以便 存储 addslashes stripslashes 如果 字符串 存入 数据库 以下 几个 字符串 字符 解释 控制符 从而 引发 问题 引号 双引号 单引号 斜杠 null 字符 解决 方法 这三类 字符 前面 加上 转义字符 变成 null php 提供 两个 专门 用于 转义 字符串 函数 string addslashes string str 特殊字符 加上 转义字符 string stripcslashes string str 前者 想法 去掉 转义字符 比如 php str is your name reilly outputs is your name reilly echo addslashes str 注意 如果 服务器 开启 magic quotes gpc 选项 get post cookie 数组 变量 自动 包括 引号 显示 时候 如果 正常 可以 stripcslashes 去掉 引号 可以 可以 get magic quotes gpc 函数 检查 变量 是否 打开 使用 函数 explode implode join array explode string delimiter string string int limit 函数 使用 定界符 分割 字符串 返回 字符串 数组 limit 限制 分成 字符串 数量 php str one two three four positive limitprint explode str negative limit since php 5.1 print explode str 结果 array one two three four array one two three implode join 完成 同样 功能 就是 提供 一个 定界符 数组 合并 一个 字符串 string implode string glue array pieces 例如 php array array lastname email phone comma separated implode array echo comma separated lastname email phone empty string when using an empty array var dump implode hello array string strtok 每次 根据 分隔符 取出 一个 字符串 挨个 处理 string strtok string str string token 分隔符 可以 字符串 或者 字符 如果 字符串 当成 字符 组合 处理 php string this is tan example nstring use tab and newline as tokenizing characters as well tok strtok string while tok false echo word tok br tok strtok 注意 分割 根据 字符 进行 不是 字符串 使用 substr 函数 获得 字符串 字符串 string substr string string int start int length 如果 没有 length start 正则 返回 start 开始 末尾 字符串 负则 取得 字符串 末尾 start 个字符 如果 length 指明 个数 如果 负则 指明 截取 子串 字符串 末尾 往前 length 个字符 有点 解释 清楚 下面 例子 一看 明白 rest substr abcdef returns rest substr abcdef returns ef rest substr abcdef returns rest substr abcdef returns abcde rest substr abcdef returns cde rest substr abcdef returns false rest substr abcdef returns de echo substr abcdef bcdefecho substr abcdef bcdecho substr abcdef abcdecho substr abcdef abcdefecho substr abcdef 字符串 比较 长度 strcmp str1 等于 str2 返回 str1 str2 返回 正数 str1 str2 返回 负数 注意 一定 正负 1int strcmp string str1 string str2 strcasecmp 用法 strcmp 一模一样 只不过 不计 大小写 int strcasecmp string str1 string str2 strnatcmp strncasecmp 按照 自然 排序 进行 比如 strcmp 12 但是 这里 12int strnatcmp string str1 string str2 int strncasecmp string str1 string str2 int len strlen 返回 给定 字符串 长度 int strlen string string 10 查找 字符串 子串 位置 strstr strchr strrchr stristrstrstr strchr php 完全相同 两个 函数 区分 大小写 用于 字符 或者 字符串 string strstr string haystack mixed needle bool before needle false 第三个 参数 如果 true 返回 找到 前面 部分 默认 返回 后面 部分 不到 返回 false php email name example com domain strstr email echo domain prints example com user strstr email true as of php 5.3 0echo user prints name stristr strstr 使用 方法 一模一样 只是 不管 大小写 strrchr strstr 几乎 一样 只是 最后 出现 目标 关键字 位置 前面 返回 搜索 字符串 string strrchr string haystack mixed needle get last directory in path dir substr strrchr path 11 查找 字符串 位置 strpos strrpos 函数 strpos strrpos strstr 类似 但是 返回 不是 字符串 而是 返回 字符串 目标 位置 int strpos string haystack mixed needle int offset 如果 offset 那么 offset 开始 地方 开始 搜索 子串 注意 因为 不到 返回 false php 相等 就是 第一个 字符 因此 比较 时候 要用 比较 php mystring abc findme pos strpos mystring findme note our use of simply would not work as expected because the position of was the 0th first character if pos false echo the string findme was not found in the string mystring else if pos false echo the string findme was found in the string mystring echo and exists at position pos strrpos strpos 一样 只是 返回 查找 目标 最后 出现 位置 12 字符串 替换 str replace substr replacemixed str replace mixed search mixed replace mixed subject int count 功能 replace 替换 subject 所有 search 返回 subject 替换 结果 第四个 参数 count 表示 执行 替换 操作 次数 回调 变量 传回 使用 注意 三个 参数 可以 传入 数组 传入 搜索 数组 传入 替换 数组 传入 目标 字符串 数组 返回 替换 数组 php provides body text black bodytag str replace body% black body text body% provides hll wrld php vowels array onlyconsonants str replace vowels hello world of php provides you should eat pizza beer and ice cream every day phrase you should eat fruits vegetables and fiber every day healthy array fruits vegetables fiber yummy array pizza beer ice cream newphrase str replace healthy yummy phrase provides str str replace ll good golly miss molly count echo count mixed substr replace mixed string mixed replacement mixed start mixed length 函数 start 开始 length 个字符 替换成 replacement php var abcdefgh mnrpqr echo original var hr 下面 两个 替换 整个 替换成 bob echo substr replace var bob br echo substr replace var bob strlen var br 下面 例子 相当于 插入 bob 字符串 开始 echo substr replace var bob br 以下 两个 替换 mnrpqr bob echo substr replace var bob 10 br echo substr replace var bob br 相当于 删除 mnrpqr echo substr replace var 10 br
604,Windows Live Writer快捷方式（打开服务器文档等）,windows live writer 快捷方式 打开 服务器 文档 windows live writer 使用 键盘 即可 执行 很多 常见 任务 用于 日志 快捷方式 创建 日志 ctrl 创建 新页面 ctrl 打开 日志 ctrl 可以 打开 服务器端 文章 保存 日志 ctrl 发布 日志 ctrl shift 草稿 发布 日志 ctrl shift 插入 超链接 ctrl 计算机 添加 图片 ctrl 网页 添加 图片 ctrl shift 查看 日志 属性 f2 设置 类别 ctrl shift 更新 日志 主题 ctrl f11 改为 编辑 视图 f11 改为 预览 视图 f12 改为 视图 shift f11 文本格式 快捷方式 加粗 ctrl 斜体 ctrl 删除 ctrl 下划线 ctrl 下标 ctrl 上标 ctrl shift 项目 符号 ctrl shift 清除 格式 ctrl 空格键 居中 文本 ctrl 文本 对齐 ctrl 文本 对齐 ctrl 新建 段落 ctrl shift 标题 1ctrl alt 标题 2ctrl alt 标题 3ctrl alt 标题 4ctrl alt 标题 5ctrl alt 标题 6ctrl alt 文字 方向 设置 从左到右 适用 rtl 模式 ctrl shift 文字 方向 设置 从右到左 适用 rtl 模式 ctrl shift 常规 快捷方式 剪切 ctrl 复制 ctrl 粘贴 ctrl 选择性 粘贴 ctrl alt 全选 ctrl 查找 ctrl 撤消 ctrl 恢复 ctrl 打印 ctrl 显示 隐藏 功能区 ctrl f1 获取 有关 writer 帮助 f1
611,Redis详细完整教程-windows下的安装、测试(php+redis+mysql),redis 详细 完整 教程 windows 安装 测试 php redis mysql windows redis 安装 windows redis 下载 地址 http code google com servicestack wiki rediswindowsdownload 或者 本人 盘中 下载 只是 增加 一个 redis conf 文件 没有 文件 自己 进入 下载 页面 解压 以下 几个 文件 redis server exe 服务程序 redis check dump exe 本地 数据库 检查 redis check aof exe 更新 日志 检查 redis benchmark exe 性能 测试 用以 模拟 同时 客户端 发送 sets gets 查询 运行 需要 redis 配置文件 redis conf 没有 指定 使用 默认设置 开始运行 redis 解压 目录 redis server exe redis conf 运行 一个 客户端 连接 解压 目录 redis cli exe 127.0 0.1 6379 测试 一下 redis cli set mykey somevalueok redis cli get mykeysomevalue 测试 一下 性能 redis redis benchmark exe 127.0 0.1 6379 100000 50 至此 安装 完毕 客户端 里面 可以 运行 各种 测试 这里 大家 推荐 一个 redis 管理工具 phpredisadmin 需要 安装 php redis 扩展 第二步 一看 知道 phpmyadmin 部署 php 环境 下面 phpredisadmin 下载 地址 github 进入 下载 页面 安装 php redis 扩展 windows 安装 php redis 扩展 非常简单 下载 一个 dll 扩展 放到 php ext 目录 php ini 里边 添加 一行 配置 可以 这里 提供 php5.3 版本 redis php 扩展 压缩包 里面 有个 dll https github com nicolasff phpredis downloads 解压 dll 放到 php ext 目录 打开 php ini 增加 一行 extension php redis dll 然后 重启 apache 或者 nginx 或者 iis 可以 检测 是否 安装 成功 可以 打开 phpinfo 看下 php 操作 redis 简单 测试 确认 我们 已经 做好 以下 几个 步骤 我们 已经 安装 redis 并且 redis server exe redis conf 命令 启动 redis 服务器 我们 已经 下载 php redis dll 拷贝到 php ext 目录 并且 php ini 添加 一行 extension php redis dll 然后 重启 web 服务器 然后 我们 运行 下面 代码 phpecho phpredis sample br error reporting all ini set display errors on 已经 启用 php redis 扩展 因此 这里 可以 直接 使用 redis 对象 redis new redis 进行 连接 redis connect 127.0 0.1 6379 这里 开始 使用 redis 功能 就是 设置 一下 redis set name1 www.51 projob com redis set name2 www crazyant com echo 通过 get 方法 获取 到键 br redis get name1 br redis get name2 运行 截图 其实 获得 redis 对象 可以 任意 执行 所有 redis 命令 这些 包括 官方 redis 手册 所有 命令 官方 手册 redis mysql 实现 缓存 写入 简单 尝试 redis 适用 缓存 这里 可以 类似 内存 磁盘 关系 以下 一个 投票 程序 redis 测试 投票数 50 时候 可以 写入 mysql php 缓存 利用 测试 这里 我们 获取 传过来 投票 数据 每次 如果 增加 设定值 投票 次数 写回 mysql 大大 减轻 mysql 链接 开销 redis 使用 由此 可见一斑 var unknown type 来自 www crazyant net www.51 projob com 获取 投票 信息 id aid isset get aid ereg replace get aid 当前 投票 数字 redis 数据 this click num if aid 设定 投票数 最大值 此值 mysql update till num 50 创建 redis 对象 new redis connect 127.0 0.1 6379 得到 现在 第几个 数据 this click num get count xin newgame aid 点击数 set count xin newgame aid this click num if this click num update till num 如果 点击数 超过 设定 那么 数据 写到 mysql if this click num update till num require once dirname __ file __ db php 更新 数据库 db executenonequery update addonnewgame set game num game num update till num where dede addonnewgame aid aid 重置 投票 数目 set count xin newgame aid settimeout count xin newgame aid 24 60 60 exit this click num 这里 没有 找到 php redis 扩展 文档 官方 文档 一个 php redis php 头文件 地址 https github com ukko phpredis phpdoc 我们 只要 php 下载 下来 放到 自己 项目 里面 那么 代码 时候 可以 直接 看到 注释 可以 这样 设置 一下 eclipse setup in ideright click your project properties select the php include path categoryclick add folder ... select your checkout of phpredis phpdocclick open click ok
629,Redis+Mysql模式和内存+硬盘模式的异同,redis mysql 模式 内存 硬盘 模式 异同 学习 任何 知识 一个 循序渐进 过程 从刚 开始 懵懂 无知 简单 熟悉 然后 突然 彻悟 成果 欣喜若狂 心情 快乐 redis mysql 内存 硬盘 类似 地方 首先 首先 我们 知道 mysql 持久 存储 存放 磁盘 里面 检索 的话 涉及 一定 io 为了 解决 这个 瓶颈 于是 出现 缓存 比如 现在 memcached 简称 mc 首先 用户 访问 mc 如果 命中 访问 mysql 之后 内存 硬盘 一样 数据 复制到 mc 一部分 redis mc 缓存 并且 驻留 内存 运行 大大 提升 数据量 web 访问 访问速度 然而 mc 只是 提供 简单 数据结构 比如 string 存储 redis 提供 大量 数据结构 比如 string list set hashset sorted set 这些 使得 用户 方便 好多 毕竟 封装 一层 实用 功能 同时 实现 同样 效果 当然 redis 慢慢 舍弃 mc 内存 硬盘 关系 硬盘 放置 主体 数据 用于 持久 存储 内存 当前 运行 部分 数据 cpu 访问 内存 不是 磁盘 大大 提升 运行 速度 当然 这是 基于 程序 局部 访问 原理 推理 redis mysql 内存 磁盘 关系 一个 映射 mysql 放在 磁盘 redis 放在 内存 这样的话 web 应用 每次 访问 redis 如果 没有 找到 数据 访问 mysql 然而 redis mysql 内存 磁盘 用法 最好 不同 redis mysql 内存 硬盘 运行 模式 不同 了解 内存 硬盘 运行 过程 同学 知道 他俩 之间 通过 页面 置换 算法 进行 调度 也就是说 每次 按块 数据 硬盘 换入 或者 内存 比如 硬盘 一个 100g 文件 如果 要读 这个 文件 内存 每次 只放该 文件 10mb 一部分 小块 就是 这个 意思 于是 有人 猜测 mysql 存储 100g 数据 用户 访问 mysql 时候 10mb 数据 拷贝到 redis 比如 select 一个 id 1000 数据 id 10 id 9999 数据 放到 redis 用于 次访问 可是 关键在于 mysql 数据 访问 不是 文件 这种 局部性 原理 不同 用户 访问 完全 不同 东西 id 次序 没有 任何 关系 其实 redis 强项 擅长 保存 数据 数据 也就是说 描述性 不是 数据 本身 就此 假定 redis 几个 应用 场景 大家 批评指正 存放 计数器 数字 存放 检索 关键词 id 列表 内容 存放 用户 之间 follow 关系 用户 信息 存放 简单 静态 html 所有 css js 总之 发现 就是 redis 大量 存放 数据表 索引 如果 刚好 用到 符合条件 信息 可以 根据 索引 mysql 查找 比如 搜索 关键词 redis 第一步 我们 mysql 获取 redis 相关 信息 返回 用户 然后 记录 一个 zset redis 作为 名字 搜索 每个 id 先后顺序 存在 里面 那么 下次 有人 搜索 redis 直接 根据 列表 mysql 对应 id 信息 就行了 已经 大大 提升 访问速度 下图 一个 检索 流程图 关于 redis 一段 心得 希望 大家 批评指正 谢谢
636,PHP100视频教程2012版解压密码,php100 视频教程 2012 解压密码 php100 奖惩 确实 非常 为了 防止 盗链 张老师 设置 密码 可是 金币 不行 因为 虽然 经常 论坛 很少 发帖 网上 一下 真有 提供 密码 php100 教程 2012 新浪 微博 开放平台 php 微博 账号 登陆 网站 同步 13 解压密码 1348 293 233 212php100 教程 2012 13 codeigniter 框架 教程 视频 解压密码 1931 223 133 223php100 教程 2012 codeigniter 框架 教程 18 解压密码 2811 101 111 928 感谢 tim 提供 17 1931 223 133 223 18 2811 101 111 928
639,"windows下PHP环境（apache,PHP,Mysql）详细配置方法",windows php 环境 apache php mysql 详细 配置 方法 安装 准备 下载 php apache mysql 安装包 可以 相关 网上 下载 地址 php 5.4 win32 vc9 x86 thread safe httpd 2.2 22 win32 x86 apache openssl mysql 5.5 25 win32 下载 文件 截图 下面 安装 步骤 以下 操作 双引号 注意 自己 替换 一下 半角 字符 安装 apache 直接 运行 安装 即可 我们 安装 php apache 目录 php 压缩包 解压 内容 放到 指定 php 目录 自己 指定 这里 php php54 php54 目录 php inidevelopment 重命名 php ini 修改 apache 配置文件 php apache conf httpd conf 用于 载入 php 模块 加载 php 模块 apache 配置文件 添加 loadmodule php5 module php php54 php5apache2 dll 上面 php php54 php 安装 目录 设置 apache 文件类型 添加 addtype application httpd php php phtml 指定 php 配置文件 路径 后面 直接 添加 phpinidir php php54 重启 apache5 验证 php 是否 安装 成功 这里 我们 php apache htdocs 目录 创建 一个 phpinfo php 文件 输入 以下内容 php phpinfo 然后 打开 浏览器 输入 http localhost phpinfo php 默认 80 端口 如果 不是 80 端口 localhost 后面 必须 端口号 如果 安装 成功 打开 php 相关 信息 页面 否则 检查 相关 目录 是否 安装 正确 安装 mysql 服务 直接 运行 mysql 安装文件 按照 提示 一步 一步 执行 安装操作 添加 mysql 模块 php54 目录 ext 目录 找到 libmysql dll php mysql dll php mysqli dll 复制到 c盘 windows 目录 打开 php 配置文件 extension php mysql dll extension php mysqli dll 前面 去掉 php ini 设置 扩展 路径 extension dir php php54 ext 重启 apache9 浏览器 再次 访问 phpinfo php 页面 如果 页面 信息 mysql mysqli 表示 添加 模块 成功 否则 重新 检查 上述 步骤 验证 mysql 是否 安装 成功
647,新浪微博的mid转换成base62格式的PHP函数,新浪 微博 mid 转换成 base62 格式 php 函数 最近 有用 新浪 微博 mid 地址 转换成 格式 编码 方法 例如 221110410216147026 转换 zf4mofpn7a 比如 新浪 微博 地址 可以 组装 这样 http weibo com 1642634100 5en0uftjv8h 其中 数字 用户 id 后面 字符串 base62 加密 mid 因此 通过 组装 两个 可以 得到 信息 主体 本文 代码 http forum open weibo com read php tid 3236 uid 89934 博主 js 代码 改成 php 而来 代码 运行 博主 一样 这里 只是 mid 转成 格式 其实 逆向 php str62keys array 10 进制 转换 62 进制 param string int10 10 进制 return string 62 进制 function int10to62 int10 global str62keys s62 while int10 int10 62 s62 str62keys s62 int10 floor int10 62 return s62 通过 mid 获得 格式 param string mid return 格式 function getcodebymid mid url for strlen mid 最后 往前 字节 一组 读取 mid offset1 offset2 num substr mid offset1 offset2 offset1 mid substring offset1 offset2 num int10to62 num url num url return url echo getcodebymid 221110410216147026 为了 方便 这里 那位 博主 js 代码 这里 大家 可以 一个 对照 新浪 微博 mid url 互转 实用工具 作者 xingrz http weibo com xingrz var weiboutility 62 进制 字典 weiboutility str62keys 62 进制 转换 10 进制 param string str62 62 进制 return string 10 进制 weiboutility str62to10 function str62 var i10 for var str62 length ++ var str62 length var str62 i10 this str62keys indexof math pow 62 return i10 10 进制 转换 62 进制 param string int10 10 进制 return string 62 进制 weiboutility int10to62 function int10 var s62 var while int10 int10 62 s62 this str62keys s62 int10 math floor int10 62 return s62 url 字符 转换 mid param string url 微博 url 字符 wr4mofqpbo return string 微博 mid 201110410216293360 weiboutility url2mid function url var mid for var url length 最后 往前 字节 一组 读取 url 字符 var offset1 var offset2 var str url substring offset1 offset2 str this str62to10 str if offset1 不是 第一组 不足 位补 while str length str str mid str mid return mid mid 转换 url 字符 param string mid 微博 mid 201110410216293360 return string 微博 url 字符 wr4mofqpbo weiboutility mid2url function mid if typeof mid string return false mid 数值 较大 必须 字符串 var url for var mid length 最后 往前 字节 一组 读取 mid var offset1 var offset2 var num mid substring offset1 offset2 num this int10to62 num url num url return url
655,情理之中又意料之外的超强减肥方法,情理之中 意料之外 超强 减肥 方法 今天 人人 看到 很多 分享 一个 减肥 秘技 页面 打开 点开 这位 同学 前后 照片 真的 惊叹 减肥 210 确实 不成 样子 宽体 一种 减肥 140 显得 特别 精神 帅气 非常 减肥 前后 差距 如此 之大 瘦下来 充满 自信 神情 昭示 巨大 成功 喜悦 以下 一下 照片 下面 语录 文字 曾经 催悲 胖子 大二 时候 体重 已经 接近 200 减肥 还是 辛苦 开始 采取 节食 减肥 每天 一顿 早饭 午餐 晚餐 西红柿 黄花 结果 半个 下来 毫无 成效 一斤 不过 放弃 坚持 一个月 终于 效果 后来 头昏 看来 节食 减肥 可取 开始 加强锻炼 开始 非常 痛苦 我刚 开始 几天 只能 五百米 坚持 下来 每天 加一点 现在 每天 还是 坚持 十公里 感觉 轻松 锻炼 效果 非常明显 开始 500 喘气 现在 10 公里 轻松 写意 减肥 效果 最好 时候 一天 成功 瘦下来 之后 还是 保持 防止 反弹 减肥 已经 两年 没有 反弹 hoho 现在 成功 减掉 70 每天 还是 坚持 锻炼 身体素质 明显提高 很多 为了 减肥 戒掉 一切 饮料 零食 开始 严格控制 晚上 粗粮 红薯 燕麦片 之类 当然 现在 已经 恢复 以前 饮食 饭量 比较 昨晚 我们 两个 吃掉 三斤 排骨 外加 一个 斤重 西瓜 现在 消耗 很大 工作量 跑步 打篮球 健身房 自行车 等等 体力 还好 每天 十公里 做点 别的 运动 饮食 开始 还是 克制 胖子 现在 控制 饮食 随便 反弹 说实话 胖子 实在 悲哀 往事 不堪回首 ...... 减肥 成功 以后 还长 几厘米 现在 76 今年 五一 时候 现在 140 斤整 体重 标准 而且 每天 坚持 锻炼 身材 不错 以上 加粗 部分 减肥 成功 方法 总结 一下 方法 应该 八九不离十 其实 饮食 什么 可以 控制 当然 不能 暴饮暴食 关键 锻炼 语录 可以 看出 减肥 过程 主要 跑步 有氧 运动 本来 就是 减肥 绝好 方法 然而 汗颜 开始 500 正常 现在 每天 十公里 运动量 估计 真正 减肥 绝学 秘技 呵呵 这位 同学 留言 非常 最多 留言 就是 励志 励志 减肥 看来 同伴 真多 最近 健身房 犹豫 是不是 慢跑 方法 减肥 助益 看来 我错 恐怕 如果 每天 10 公里 这个 潜力股 变得 动若脱兔 跳若灵 140 就是 目标 进发
658,个人博客SEO第一步-提交自己的网站,个人 博客 seo 第一步 提交 自己 网站 很多 个人 博客 博主 知道 怎么 推广 专业 seo 推广 技术 其实 直接 第一步 就是 告诉 互联网 这个 站点 因此 先要 网络 各大 网站 服务商 各大 搜索引擎 各大 博客 收录 网站 提交 自己 博客地址 或者 一些 pr 值较 网站 交换 自己 友情链接 比如 本站 疯狂 蚂蚁 alexa 专业 提供 中文 alexa 世界排名 查询 服务 地址 http www alexa com 百度 博客 搜索 提交 入口 地址 http utility baidu com blogsearch submit php3 搜狗 搜索 提交 入口 地址 http www sogou com feedback blogfeedback php4 有道 博客 搜索 提交 入口 地址 http tellbot youdao com report type blog keyfrom help5 google 博客 搜索引擎 提交 入口 地址 http blogsearch google com ping hl zh cn6 live 搜索 提交 入口 http search msn com docs submit aspx7 雅虎 中国 提交 入口 http search help cn yahoo com h4 html 最后 作为 一个 个人 博客 新站 致力于 php 技术 分享 博客 博客 疯狂 蚂蚁 已经 一个 pr ip 访问量 200 以上 博客 希望 广大 站长 朋友 前来 交换 链接 共同进步
675,数据采集必备知识-php计划任务的实现,数据 采集 必备 知识 php 计划 任务 实现 站点 如果 难免 发些 原创 文章 文章 来源 必然 来源于 网络 采集 对于 采集 这里 详述 自己 simple html dom 一篇 关于 介绍 数据 采集 利器 php dom 方式 处理 html simple html dom 数据 采集 的话 当然 可以 人工 触发 就是 每天 运行 一下 脚本 可是 显然 不是 完美 如果 抓取 可以 自动 定时 获取 那么 人工 运行 执行 页面 下来 其实 php 有个 概念 计划 任务 可以 定时 运行 程序 比如 数据库 备份 更新 缓存 生成 静态 页面 生成 网站 地图 采集 里面 运用 就是 自动 采集 数据 然后 保存 数据库 比如 每天 凌晨 运行 一次 以下 php 计划 任务 实现 无人 自动 采集 介绍 用到 函数 ignore user abort setting 说明 ignore user abort 函数 设置 客户机 断开 是否 终止 脚本 执行 函数 返回 user abort 设置 之前 一个 布尔值 参数 setting 如果 设置 true 忽略 用户 断开 如果 设置 false 导致 脚本 停止 运行 如果 设置 参数 返回 当前 设置 void set time limit int seconds 说明 设置 脚本 最大 运行 时间 如果 时间 函数 返回 错误 单位 默认 时间 30 参数 计算 最大 运行 时间 如果 代表 无限 时间 采集 的话 我们 无限 时间 set time limit sleep seconds 说明 sleep 函数 延迟 代码执行 若干 参数 必需 以秒计 暂停 时间 先给 一个 基本 测试程序 用户 关闭 浏览器 程序 继续 运行 ignore user abort 设定 脚本 运行 无限 时间 set time limit 30 执行 一次 interval 30 do fp fopen text3 txt fwrite fp test fclose fp sleep interval while true 首先 运行 程序 然后 关闭 页面 程序 仍然 运行 test 每隔 30 填补 text3 txt 文件 最后 根据 php 手册 简单 介绍 一些 相关 知识 连接 处理 php 内部 系统维护 连接 状态 状态 三种 可能 情况 normal 正常 aborted 异常 退出 timeout 超时 php 脚本 正常 运行 normal 状态 连接 有效 远程 客户端 中断 连接 aborted 状态 标记 将会 打开 远程 客户端 连接 中断 通常 用户 点击 stop 按钮 导致 连接时间 超过 php 时限 timeout 状态 标记 打开 可以 决定 脚本 是否 需要 客户端 中断 连接 退出 有时候 脚本 完整 运行 带来 很多 方便 即使 没有 远程 浏览器 接受 脚本 输出 默认 情况 远程 客户端 连接 中断 脚本 将会 退出 处理过程 php ini ignore user abort apache conf 设置 对应 php value ignore user abort 以及 ignore user abort 函数 控制 如果 没有 告诉 php 忽略 用户 中断 脚本 将会 中断 除非 通过 register shutdown function 设置 关闭 触发 函数 通过 关闭 触发 函数 远程 用户 点击 stop 按钮 脚本 再次 尝试 输出 数据 php 将会 检测 连接 中断 调用 关闭 触发 函数 脚本 可能 内置 脚本 计时器 中断 默认 超时 限制 30 这个 可以 通过 设置 php ini max execution time apache conf 设置 对应 php value max execution time 参数 或者 set time limit 函数 更改 计数器 超时 时候 脚本 将会 类似 以上 连接 中断 情况 退出 先前 注册 关闭 触发 函数 这时 执行 关闭 触发 函数 可以 通过 调用 connection status 函数 检查 超时 是否 导致 关闭 触发 函数 调用 如果 超时 导致 关闭 触发 函数 调用 函数 返回 需要 注意 一点 aborted timeout 状态 可以 同时 有效 告诉 php 忽略 用户 退出 操作 可能 php 仍然 注意 用户 已经 中断 连接 脚本 仍然 运行 情况 如果 运行 时间 限制 脚本 退出 设置 关闭 触发 函数 执行 这时 发现 函数 connection status 返回 相关 函数 int ignore user abort bool setting set whether client disconnect should abort script execution sets whether client disconnect should cause script to be aborted when running php as command line script and the script tty goes away without the script being terminated then the script will die the next time it tries to write anything unless value is set to trueint connection aborted void check whether client disconnectedint connection status void returns connection status bitfield
678,MySQL-python Windows下EXE安装文件下载,mysql python windows exe 安装文件 下载 最近 python 学到 python 连接 mysql 时候 首先 python mysql 网上 下载 一个 源码 然后 放到 python lib site packages 目录 结果 运行 测试 时候 一直 没有 模块 __ mysql 网上 解答 方法 大部分 方法 可以 有人 提议 exe 自动 安装 有效 于是 谷歌 直接 python mysql exe 找到 最终 exe 安装文件 mysql python 1.2 win32 py2.7 exe 安装 之后 重新 运行 程序 完美 无误 mysql python 1.2 win32 py2.7 exe 下载 地址 http www codegood com archives 129
686,Python操作Mysql实例代码教程（查询手册）,python 操作 mysql 实例 代码 教程 查询 手册 本文 介绍 python 操作 mysql 执行 sql 语句 获取 结果 遍历 结果 取得 某个 获取 字段名 图片 插入 数据库 执行 事务 各种 代码 实例 详细 介绍 代码 居多 一桌 丰盛 唯美 代码 大餐 实例 取得 mysql 版本 windows 环境 安装 mysql 模块 用于 python 开发 请见 一篇 文章 mysql python windows exe 安装文件 下载 coding utf -# 安装 mysql db for pythonimport mysqldb as mdbcon nonetry 连接 mysql 方法 connect ip user password dbname con mdb connect localhost root root test 所有 查询 连接 con 一个 模块 cursor 上面 运行 cur con cursor 执行 一个 查询 cur execute select version 取得 查询 结果 单个 结果 data cur fetchone print database version datafinally if con 无论如何 连接 记得 关闭 con close 执行 结果 database version 5.5 25 实例 创建 一个 并且 插入 数据 主要 还是 cursor 上面 执行 execute 方法 进行 源码 coding utf -# 来源于 www crazyant net 总结 整理 import mysqldb as mdbimport sys con 设定 全局 连接 con mdb connect localhost root root test with con 获取 连接 cursor 只有 获取 cursor 我们 才能 进行 各种 操作 cur con cursor 创建 一个 数据表 writers id name cur execute create table if not exists writers id int primary key auto increment name varchar 25 以下 插入 数据 cur execute insert into writers name values jack london cur execute insert into writers name values honore de balzac cur execute insert into writers name values lion feuchtwanger cur execute insert into writers name values emile zola cur execute insert into writers name values truman capote 运行 结果 phpmyadmin 查看 mysql 命令行 查看 结果 一样 实例 python 使用 slect 获取 mysql 数据 遍历 这个 恐怕 请速 代码 coding utf -# 来源 www crazyant net 整理 总结 import mysqldb as mdbimport sys 连接 mysql 获取 连接 对象 con mdb connect localhost root root test with con 仍然 第一步 获取 连接 cursor 对象 用于 执行 查询 cur con cursor 类似 其他 语言 query 函数 execute python 执行 查询 函数 cur execute select from writers 使用 fetchall 函数 结果 多维 元组 存入 rows 里面 rows cur fetchall 依次 遍历 结果 发现 每个 元素 就是 表中 一条 记录 一个 元组 显示 for row in rows print row 运行 结果 1l jack london 2l honore de balzac 3l lion feuchtwanger 4l emile zola 5l truman capote 上面 代码 用来 所有 结果 取出 不过 打印 时候 每行 一个 元祖 打印 现在 我们 使用 方法 取出 其中 单个 数据 coding utf -# 来源 疯狂 蚂蚁 博客 www crazyant net 总结 整理 import mysqldb as mdbimport sys 获取 mysql 链接 对象 con mdb connect localhost root root test with con 获取 执行 查询 对象 cur con cursor 执行 那个 查询 这里 select 语句 cur execute select from writers 使用 cur rowcount 获取 结果 条数 numrows int cur rowcount 循环 numrows 每次 取出 一行 数据 for in range numrows 每次 取出 一行 放到 row 这是 一个 元组 id name row cur fetchone 直接 输出 两个 元素 print row row 运行 结果 jack london2 honore de balzac3 lion feuchtwanger4 emile zola5 truman capote numrows int cur rowcount 用于 获取 结果 数目 row cur fetchone 每次 取出 一行 数据 同时 记录集 指针 执行 一行 实例 使用 字典 cursor 取得 结果 可以 使用 表字 名字 访问 coding utf -# 来源 疯狂 蚂蚁 博客 www crazyant net 总结 整理 import mysqldb as mdbimport sys 获得 mysql 查询 链接 对象 con mdb connect localhost root root test with con 获取 连接 字典 cursor 注意 获取 方法 一个 cursor 其实 cursor 子类 cur con cursor mdb cursors dictcursor 执行 语句 不变 cur execute select from writers 获取数据 方法 不变 rows cur fetchall 遍历 数据 不变 比上 一个 直接 一点 for row in rows 这里 可以 使用 键值 方法 键名字 获取数据 print row id row name 实例 获取 单个 字段名 信息 方法 coding utf -# 来源 疯狂 蚂蚁 博客 www crazyant net 总结 整理 import mysqldb as mdbimport sys 获取 数据库 链接 对象 con mdb connect localhost root root test with con 获取 普通 查询 cursor cur con cursor cur execute select from writers rows cur fetchall 获取 连接 对象 描述 信息 desc cur description print cur description desc 打印 表头 就是 字段名 print 3s desc desc for row in rows 打印 结果 print 2s 3s row 运行 结果 cur description id 11 11 name 253 17 25 25 id name1 jack london2 honore de balzac3 lion feuchtwanger4 emile zola5 truman capote 实例 使用 prepared statements 执行 查询 安全 方便 coding utf -# 来源 疯狂 蚂蚁 博客 www crazyant net 总结 整理 import mysqldb as mdbimport syscon mdb connect localhost root root test with con cur con cursor 我们 看到 这里 可以 通过 一个 可以 组装 sql 语句 进行 cur execute update writers set name where id guy de maupasant 使用 cur rowcount 获取 影响 多少 print number of rows updated cur rowcount 结果 number of rows updated 实例 图片 二进制 存入 mysql 有人 喜欢 图片 存入 mysql 这种 做法 貌似 很少 大部分 程序 图片 存放 服务器 文件 数据库 中存 只是 图片 地址 而已 不过 mysql 支持 图片 存入 数据库 相应 一个 专门 blob binary large object 较大 二进制 对象 如下 程序 注意 测试 图片 自己 随便 一个 地址 正确 首先 数据库 创建 一个 用于 存放 图片 create table images id int primary key auto increment data mediumblob 然后 运行 如下 python 代码 进行 coding utf -# 来源 疯狂 蚂蚁 博客 www crazyant net 总结 整理 import mysqldb as mdbimport systry 用读 文件 模式 打开 图片 fin open .. web jpg 文本 读入 img 对象 img fin read 关闭 文件 fin close except ioerror 如果 出错 打印 错误信息 print error args args sys exit try 链接 mysql 获取 对象 conn mdb connect host localhost user root passwd root db test 获取 执行 cursor cursor conn cursor 直接 数据 作为 字符串 插入 数据库 cursor execute insert into images set data mdb escape string img 提交 数据 conn commit 提交 之后 关闭 cursor 链接 cursor close conn close except mdb error 出现异常 打印信息 print error args args sys exit 结果 escape string 函数 插入 数据库 字符串 进行 转义 这会 一些 sql 注入 攻击 实例 数据库 图片 读出来 coding utf -# 来源 疯狂 蚂蚁 博客 www crazyant net 总结 整理 import mysqldb as mdbimport systry 连接 mysql 获取 连接 对象 conn mdb connect localhost root root test cursor conn cursor 执行 查询 图片 字段 sql cursor execute select data from images limit 使用 二进制 文件 方法 打开 一个 图片 文件 存在 自动 创建 fout open image png wb 直接 数据 文件 fout write cursor fetchone 关闭 写入 文件 fout close 释放 查询 数据 资源 cursor close conn close except ioerror 捕获 io 异常 主要 文件 写入 发生 错误 print error args args sys exit 实例 使用 transaction 事务 手动 提交 自动 回滚 coding utf -# 来源 疯狂 蚂蚁 博客 www crazyant net 总结 整理 import mysqldb as mdbimport systry 连接 mysql 获取 连接 对象 conn mdb connect localhost root root test cursor conn cursor 如果 某个 数据库 支持 事务 自动 开启 这里 mysql 所以 自动 开启 事务 myism 引擎 不会 cursor execute update writers set name where id leo tolstoy cursor execute update writers set name where id boris pasternak cursor execute update writer set name where id leonid leonov 事务 特性 原子 手动 提交 conn commit cursor close conn close except mdb error 如果 出现 错误 那么 可以 回滚 就是 上面 三条 语句 要么 执行 要么 执行 conn rollback print error args args 结果 因为 存在 writer sql 第三条 语句 所以 出现 错误 error 1146 table test writer doesn exist2 出现 错误 出发 异常 处理 语句 两条 自动 变成 没有 执行 结果 不变 如果 代码 放到 一个 myisam 引擎 两句 执行 第三句 不会 如果 inndb 引擎 不会 执行 全文完 本文 翻译 http zetcode com databases mysqlpythontutorial
700,数据采集技术之在Python中Libxml模块安装与使用XPath,数据 采集 技术 python libxml 模块 安装 使用 xpath 为了 使用 xpath 技术 爬虫 抓取 网页 数据 进行 抽取 标题 正文 等等 之后 windows 安装 libxml2 模块 安装 使用 libxml 模块 模块 含有 xpath 准备 需要 软件包 python 2.7 lxml 2.3 win32 py2.7 exe 安装 最好 使用 打包 exe 这个 可以 自动 安装 lxml 使用 安装 python2.7 安装 这里 不再 赘述 lxml 安装 直接 运行 exe 自动 找到 py27 目录 进行 安装 使用 xpath 抽取 下面 一个 实例 验证 程序 来自 redice blog 文章 libxml2 安装 xpath 使用 coding utf 8import codecsimport sys 不加 如下 无法 打印 unicode 字符 产生 unicodeencodeerror 错误 sys stdout codecs lookup iso8859 sys stdout from lxml import etreehtml div div redice div div id email redice 163 com div div name address 中国 div div http www redicecn com div div tree etree html html 获取 email email 所在 div id emailnodes tree xpath div id email print nodes text 获取 地址 地址 所在 div name addressnodes tree xpath div name address print nodes text 获取 博客地址 博客地址 位于 email 之后 兄弟 节点 第二个 nodes tree xpath div id email following sibling div print nodes text 运行 结果 redice 163 com 中国 http www redicecn com
707,数据采集简单示例：采集爱帮网电话号码,数据 采集 简单 示例 采集 爱帮网 电话号码 爱帮网 单个 网址 http www aibang com detail 17881112 420243957 截图 本文 采集 页面 标题 电话号码 具体 python 代码 coding utf created on 2012 author crazyant 导入 urllib2 用于 获取 网页 import urllib2 使用 开源 webscraping xpath 模块 from webscraping import xpath common 首先 发送 请求 帮网 一个 页面 页面 含有 地址 req urllib2 request http www aibang com detail 17881112 420243957 获得 响应 reponse urllib2 urlopen req 响应 内容 存入 html 变量 html reponse read 以下 抓取 页面 标题 title xpath search html div class ppc title h1 print 标题 这里 输出 中文 因此 采用 common to unicode 输出 print common to unicode title utf 使用 xpath 得到 电话号码 节点 tel xpath search html dl class detail list dd class fb 使用 正则 拆分 数字 import rem re search tel 如果 匹配 输出 两个 单个 电话号码 print 电话 if is not none for in groups print 运行 结果 标题 清真 饭庄 新店 电话 029 88222668029 88226458 其中 主要 用到 以下 模块 xpath 用于 使用 路径 方法 找到 节点 re 正则表达式 模块 用于 拆分 电话号码 其实 字符串 函数 可以 urllib2 用于 请求 指定 url 页面 内容 存于 字符串 然后 分析 webscraping common 模块 用于 获取 中文 文本 转成 unicode 编码 这样 能够 输出
712,Python中的操作符重载,python 操作符 重载 关于 python 操作符 重载 可以 查看 2.7 文档 地址 http docs python org reference datamodel html special method names 或者 一篇 详细 中文 教程 python 魔术 方法 指南 可以 重载 python 操作符 操作符 重载 我们 对象 内置 一样 __ __ 名字 方法 特殊 挂钩 hook python 通过 这种 特殊 命名 拦截 操作符 实现 重载 python 计算 操作符 时会 自动 调用 这样 方法 例如 如果 对象 继承 __ add __ 方法 出现 表达式 时会 调用 这个 方法 通过 重载 用户 定义 对象 内置 一样 重载 操作符 操作符 重载 使得 类能 拦截 标准 python 操作 可以 重载 所有 python 表达式 操作符 可以 重载 对象 操作 print 函数调用 限定 重载 使得 实例 看起来 内置 重载 通过 特殊 命名 方法 实现 魔术 方法 调用 方式 解释 __ new __ cls ... instance myclass arg1 arg2 __ new __ 创建 实例 时候 调用 __ init __ self ... instance myclass arg1 arg2 __ init __ 创建 实例 时候 调用 __ cmp __ self other self other self other 比较 时候 调用 __ pos __ self self 一元 运算符 __ neg __ self self 一元 运算符 __ invert __ self self 取反 运算符 __ index __ self self 对象 作为 索引 使用 时候 __ nonzero __ self bool self 对象 布尔值 __ getattr __ self name self name name 存在 访问 一个 存在 属性 __ setattr __ self name val self name val 一个 属性 赋值 __ delattr __ self name del self name 删除 一个 属性 __ getattribute __ self name self name 访问 任何 属性 __ getitem __ self key self key 使用 索引 访问 元素 __ setitem __ self key val self key val 某个 索引 赋值 __ delitem __ self key del self key 删除 某个 索引 值时 __ iter __ self for in self 迭代 __ contains __ self value value in self value not in self 使用 in 操作 测试 关系 __ concat __ self value self other 连接 两个 对象 __ call __ self ... self args 调用 对象 __ enter __ self with self as with 语句 环境 管理 __ exit __ self exc val trace with self as with 语句 环境 管理 __ getstate __ self pickle dump pkl file self 序列化 __ setstate __ self data pickle load pkl file 序列化 例子 coding utf #__ getitem __ 拦截 所有 索引 操作 class obj 重载 操作符 写法 这里 重载 下标 操作符 def __ getitem __ self index return index 取得 indexer 对象 obj for in range 调用 __ getitem __ print 调用 结果 014916
717,PHP魔法方法之__sleep()方法和__wakeup()方法,php 魔法 方法 __ sleep 方法 __ wakeup 方法 public array __ sleep void void __ wakeup void serialize 函数 检查 是否 存在 一个 魔术 方法 __ sleep 如果 存在 __ sleep 方法 会先 调用 然后 执行 序列化 操作 这个 功能 可以 用于 清理 对象 返回 一个 包含 对象 所有 序列化 变量 名称 数组 如果 方法 返回 任何 内容 null 序列化 产生 一个 notice 错误 __ sleep 可能 返回 父类 私有 属性 这样 做会 导致 一个 notice 错误 __ sleep 方法 常用 提交 提交 数据 类似 清理 操作 同时 如果 一些 很大 对象 需要 全部 保存 这个 功能 相反 unserialize 检查 是否 存在 一个 __ wakeup 方法 如果 存在 调用 __ wakeup 方法 预先 准备 对象 需要 资源 __ wakeup 经常 序列化 操作 例如 重新 建立 数据库 连接 执行 其它 初始化 操作 代码 例子 meta http equiv content type content text html charset utf phpclass connection protected link private server username password db public function __ construct server username password db this server server this username username this password password this db db this connect private function connect print function connect br this link mysql connect this server this username this password mysql select db this db this link serialize 函数 检查 是否 存在 一个 魔术 方法 __ sleep 如果 存在 __ sleep 方法 会先 调用 然后 执行 序列化 操作 这个 功能 可以 用于 清理 对象 返回 一个 包含 对象 所有 序列化 变量 名称 数组 如果 方法 返回 任何 内容 null 序列化 产生 一个 notice 错误 public function __ sleep print magic methods __ sleep br return array server username password db unserialize 检查 是否 存在 一个 __ wakeup 方法 如果 存在 调用 __ wakeup 方法 预先 准备 对象 需要 资源 注意 这里 对象 需要 资源 不是 对象 属性 状态 这些 状态 调用 __ wakeup 之前 已经 存在 __ wakeup 只是 一些 数据库 连接 操作 public function __ wakeup print in methods wakeup before connect this server br print magic methods __ wakeup br this connect print in methods wakeup after connect this server br 以下 两个 代码 执行 第一块 执行 第二块 conn new connection 127.0 0.1 root root text ss serialize conn file fopen obj txt fwrite file ss file fopen obj txt ss fread file filesize obj txt conn unserialize ss 第一段 序列化 执行 结果 function connect magic methods __ sleep 同时 obj txt 里面 序列化 对象 字符串 第二段 序列化 执行 解雇 in methods wakeup before connect 127.0 0.1 magic methods __ wakeup function connect in methods wakeup after connect 127.0 0.1 总结 魔法 方法 一个 时刻 自动 调用 函数 类似 操作符 重载 这里 sleep 发生 序列化 之前 wake 发生 序列化 之前 php 其他 一些 魔法 方法 __ destruct 删除 一个 对象 对象 操作 终止 时候 调用 方法 __ get 试图 读取 一个 存在 属性 时候 调用 __ set 试图 一个 存在 属性 写入 时候 调用 __ call 试图 调用 一个 对象 存在 方法 调用 方法 __ tostring 打印 一个 对象 时候 调用 __ clone 对象 克隆 调用 __ sleep 对象 串行化 调用 __ wakeup 对象 串行化 调用 __ invoke 代码 试图 对象 当作 函数 使用 时候 调用 __ autoload 简单 就是 自动 加载 __ line __ 文件 当前 行号 __ file __ 文件 完整 路径 文件名 __ dir __ 文件 所在 目录 __ function __ 函数 名称 __ class __ 名称 __ method __ 方法 __ namespace __ 当前 命名 空间 名称
722,Python知识之什么是*args和**kwargs？,python 知识 什么 args kwargs 来看 例子 def foo args kwargs print args args print kwargs kwargs print --------------------------------------- if __ name __ __ main __ foo foo foo foo none 输出 结果 如下 args kwargs --------------------------------------- args kwargs --------------------------------------- args kwargs --------------------------------------- args none kwargs --------------------------------------- 可以 看到 两个 python 可变 参数 args 表示 任何 多个 无名 参数 一个 tuple kwargs 表示 关键字 参数 一个 dict 并且 同时 使用 args kwargs 必须 args 参数 列要 kwargs foo none 这样 调用 的话 提示 语法错误 syntaxerror non keyword arg after keyword arg 呵呵 知道 args kwargs 什么 还有 一个 很漂亮 用法 就是 创建 字典 def kw dict kwargs return kwargsprint kw dict 其实 python 带有 dict 使用 dict 即可 创建 一个 字典
724,Python关于apply的知识,python 关于 apply 知识 今天 用到 python apply 方法 感觉 非常 python apply 函数 具体 含义 apply function args keywords 函数 用于 函数参数 已经 存在 一个 元组 字典 间接 调用函数 args 一个 包含 将要 提供 函数 位置 传递 参数 元组 如果 省略 args 任何 参数 不会 传递 kwargs 一个 包含 关键字 参数 字典 apply 返回值 就是 func 返回值 apply 元祖 参数 有序 元素 顺序 必须 func 形式参数 顺序 一致 下面 几个 例子 详细 假设 执行 没有 参数 方法 def say print say in apply say 输出 结果 say in 函数 只带 元组 参数 def say print bapply say hello 老王 python 函数 关键字 参数 def say print bdef haha kw say kw apply say kw print haha 输出 结果 下面 有个 例子 apply 经典 运用 可以 一些 代码 多点 时间 陪陪 朋友 地址 http bbs cnpythoner com viewthread php tid 139 extra 函数 2.3 已经 弃用 call 替代
731,PHP数据采集之使用CURL、DOMDocument和DOMXPath,php 数据 采集 使用 curl domdocument domxpath 三个 组件 各自 独特 功能 curl 能够 抓取 下载 html 模拟 登陆 伪装 客户端 domdocument 下载 html 加载 domdomxpath 使用 xpath 语法 进行 数据 定位 采集 下面 一个 具体 例子 代码 抓取 博客 www crazyant net 首页 所有 超链接 meta http equiv content type content text html charset utf php target url http crazyant net ch curl init curl setopt ch curlopt url target url curl setopt ch curlopt failonerror true curl setopt ch curlopt followlocation true curl setopt ch curlopt autoreferer true curl setopt ch curlopt returntransfer true curl setopt ch curlopt timeout 10 html curl exec ch if html echo br curl error number curl errno ch echo br curl error curl error ch exit 创建 一个 domdocument 对象 用于 处理 一个 html dom new domdocument 一个 字符串 加载 html dom loadhtml html 使该 html 规范化 dom normalize domxpath 加载 dom 用于 查询 xpath new domxpath dom 获取 所有 标签 地址 hrefs xpath evaluate html body href for hrefs length ++ href hrefs item linktext href nodevalue echo linktext echo br 注意 domnode 没有 getattribute 方法 所以 无法 根据 得到 直接 属性 这时 可以 正则 匹配 解决 网上 看到 很多 直接 domnode 使用 getattribute 方法 竟然 通过 实在 匪夷所思 如果 更好 解释 说一说 渴望 知道 怎样 直接 xpath 返回 直接 得到 属性
734,php判断远程文件或网站是否能打开,php 判断 远程 文件 网站 是否 打开 默认 效果 print get headers http www baidu com img baidu sylogo1 gif 结果 array http 1.1 200 ok date thu 02 jun 2011 02 47 27 gmt server apache p3p cp oti dsp cor iva our ind com set cookie baiduid 7f6a5a2ed03878a7791c89c526966f3a fg expires fri 01 jun 12 02 47 27 gmt max age 31536000 path domain baidu com version last modified thu 20 jan 2011 07 15 35 gmt etag 65e 49a41e65933c0 accept ranges bytes content length 1630 cache control max age 315360000 10 expires sun 30 may 2021 02 47 27 gmt 11 connection close 12 content type image gif 参数 效果 print get headers http www baidu com img baidu sylogo1 gif 结果 array http 1.1 200 ok date thu 02 jun 2011 02 49 28 gmt server apache p3p cp oti dsp cor iva our ind com set cookie baiduid 4d875812fc482c0ade4f5c17068849ee fg expires fri 01 jun 12 02 49 28 gmt max age 31536000 path domain baidu com version last modified thu 20 jan 2011 07 15 35 gmt etag 65e 49a41e65933c0 accept ranges bytes content length 1630 cache control max age 315360000 expires sun 30 may 2021 02 49 28 gmt connection close content type image gif 怎么样 get headers 函数 还是 不错 不过 既然 效率 问题 只好 优先 考虑 curl 不错 下面 看看 curl 做法 function check remote file exists url curl curl init url 取回 数据 curl setopt curl curlopt nobody true curl setopt curl curlopt customrequest get 这个 返回 403 返回 正确 200 原因 不明 发送 请求 result curl exec curl found false 如果 请求 没有 发送 失败 if result false 检查 http 响应 是否 200 statuscode curl getinfo curl curlinfo http code if statuscode 200 found true curl close curl return found exists check remote file exists http www baidu com img baidu sylogo1 gif echo exists 存在 存在 exists check remote file exists http www baidu com test jpg echo exists 存在 存在
740,2012年度PHP最佳类库收集,2012 年度 php 最佳 类库 收集 下面 一些 非常 有用 php 类库 相信 一定 可以 web 开发 提供 更好 更为 快速 方法 图表 下面 类库 可以 创建 复杂 图表 图片 当然 它们 需要 gd 支持 pchart 一个 可以 创建 统计图 libchart 一个 简单 统计 图库 jpgraph 一个 面向对象 图片 创建 open flash chart 这是 一个 基于 flash 统计图 rss 解析 解释 rss 一件 单调 事情 不过 幸好 下面 类库 可以 帮助 方便 读取 rss feed magpierss 开源 php rss 解析器 据说 功能强大 验证 simplepie 这是 一个 非常 快速 而且 易用 rss atom 解析 缩略图 生成 phpthumb 功能 强大 如何 强大 还是 自己 体会 支付 网站 需要 处理 支付 方面 事情 需要 一个 支付 网关 程序 下面 这个 程序 可以 帮到 php payment library 支持 paypal authorize net 2checkout 2co openidphp openid 支持 openid 一个 php openid 帮助 使用 相同 用户名 口令 登录 不同 网站 一种 解决方案 如果 openid 熟悉 的话 可以 这里 看看 http openid net cn 数据 抽象 对象 关系 映射 ormadodb 数据库 抽象 doctrine 对象 关系 映射 object relational mapper orm 需要 php 5.2 版本 一个 非常 强大 database abstraction layer dbal propel 对象 关系 映射 框架 php5outlet 关于 对象 关系 映射 一个 工具 对象 关系 映射 object relational mapping 简称 orm 一种 为了 解决 面向对象 关系数据库 存在 互不 匹配 现象 技术 简单 orm 通过 使用 描述 对象 数据库 之间 映射 数据 程序 对象 自动 持久 化到 关系数据库 本质 就是 数据 一种 形式 转换 另外 一种 形式 同时 暗示 额外 执行 开销 然而 如果 orm 作为 一种 中间件 实现 很多 机会 优化 这些 手写 持久 存在 重要 用于 控制 转换 数据 需要 提供 管理 但是 同样 这些 花费 维护 手写 方案 要少 而且 就算 遵守 odmg 规范 对象 数据库 依然 需要 级别 数据 pdf 生成器 fpdf 这量 一个 可以 生成 pdf php 类库 excel 相关 站点 需要 生成 excel 没有 问题 下面 两个 类库 可以 轻松 做到 一点 php excel 这是 一个 非常简单 excel 文件 生成 php excel reader 可以 解析 读取 xls 文件 数据 mail 相关 喜欢 php mail 函数 觉得 不够 强大 下面 php 邮件 相关 绝对 不会 失望 swift mailer 免费 多功能 php 邮件 phpmailer 强大 邮件 发送 单元测试 如果 使用 测试 驱动 方法 开发 程序 下面 类库 框架 帮助 开发 simpletest 一个 php 单元测试 网页 测试 框架 phpunit 来自 xunit 家族 提供 一个 框架 可以 方便 进行 单元测试 案例 开发 非常容易 分析 测试 结果
747,python在linux下安装方法（解决旧版本冲突）,python linux 安装 方法 解决 旧版本 冲突 下载 源代码 http www python org ftp python 2.5 python 2.5 tar bz22 安装 tar jxvf python 2.5 tar bz2 cd python 2.5 configure make make install3 测试 命令行 输入 python 出现 python 解释器 表示 已经 正确 安装 suse10 rhel5 es5 系统 默认 已经 python 版本 2.4 本次 安装 shell 输入 python 发现 显示 结果 pythonpython 2.4 dec 11 2006 11 38 52 gcc 4.1 20061130 red hat 4.1 43 on linux2type help copyright credits or license for more information 版本 还是 2.4 解决办法 cd usr bin ll grep python 查看 目录 python rm rf python ln prefix python 2.5 python python prefix 解压 python 目录 python pythonpython 2.5 dec 11 2006 11 38 52 gcc 4.1 20061130 red hat 4.1 43 on linux2type help copyright credits or license for more information ok 问题 解决
749,eclipse远程发布代码的方法（SSH自动同步）,eclipse 远程 发布 代码 方法 ssh 自动 同步 eclipse 有个 插件 叫做 eclipse remote system explorer rse 具体 使用 方法 下载 rse 地址 http download eclipse org tm downloads drops 3.3 201202061000 安装 eclipse 3.4 版本 以上 解压 rse 压缩包 直接 里面 内容 复制到 eclipse 根目录 打开 eclipse 新建 项目 rse connection 填入 ip 名字 eclipse 工作 目录 切换 rse5 右键 新建 一个 connection 然后 输入 ip地址 右键 连接 然后 输入 用户名 密码 同步 完成 sftp files 里面 新建 一个 filter 里面 输入 过滤 文件夹 路径 比如 home crazyant 最后 左边 目录 出现 服务器 相应 文件夹 可以 直接 编辑 本文 www crazyant net 原创 转载 注明 出处
754,Ubuntu 安装 PostgreSQL 和 python-psycopg2基础教程（以及错误解决）,ubuntu 安装 postgresql python psycopg2 基础教程 以及 错误 解决 django 支持 以下 四种 数据库 postgresql pgql sqlite mysql oracle postgresql mysql 最受 关注 开源 数据库 mysql 国内 相对 盛行 php 领域 大力 推崇 lamp 不无关系 关于 mysql postgresql 对比 网上 很多 版本 必要 比较 不过 可以 确定 一点 postgresql django gis 支持 更加 强大 ubuntu 系统 下为 python django 安装 postgresql 数据库 包括 pgadmin3 python psycopg2 安装 postgresql 数据库 sudo apt get install postgresql postgresql client postgresql contrib 安装 过程 提示 the following new packages will be installed libossp uuid16 libpq5 postgresql postgresql 8.4 postgresql clientpostgresql client 8.4 postgresql client common postgresql commonpostgresql contrib postgresql contrib 8.4 adding user postgres to group ssl cert creating new cluster configuration etc postgresql 8.4 main data var lib postgresql 8.4 main moving configuration file var lib postgresql 8.4 main postgresql conf to etc postgresql 8.4 main moving configuration file var lib postgresql 8.4 main pg hba conf to etc postgresql 8.4 main moving configuration file var lib postgresql 8.4 main pg ident conf to etc postgresql 8.4 main configuring postgresql conf to use port 5432 starting postgresql 8.4 database server ok setting up postgresql 8.4 0ubuntu0.11 04 setting up postgresql client 8.4 0ubuntu0.11 04 setting up postgresql contrib 8.4 8.4 0ubuntu0.11 04 setting up postgresql contrib 8.4 0ubuntu0.11 04 processing triggers for libc bin 创建 配置文件 位置 etc postgresql 8.4 main 可执行程序 sudo etc init postgresql start stop restart reload force reload status postgresql 默认 配置 允许 本地 机器 访问 local access 权限 postgresql 安装 完毕 使用 系统 账户 postgres postgres 角色 登录 数据库 设置 密码 命令 sudo postgres psql 登录 sql 命令 界面 修改 postgres 用户 密码 psql postgresql 命令行 客户端 postgres alter role postgres with encrypted password mypassword postgres 设置 postgresql 启用 远程 访问 这里 设置 允许 远程 连接 权限 sudo vi etc postgresql 8.4 main postgresql conf listen addresses localhost 去掉 注释 修改 listen addresses password encryption on 去掉 注释 password encryption on2 这里 设置 允许 远程 进行 数据库 操作 sudo vi etc postgresql 8.4 main pg hba conf 最后 添加 一行 允许 局域网 ip 其他 任何 ip host all all 192.168 1.0 24 md5 其中 24 cidr 地址 可用 网关 代替 最后 pg hba conf 可能 这样 -# database administrative login by unix socketslocal all postgres ident type database user cidr address method local is for unix domain socket connections onlylocal all all ident ipv4 local connections host all all 127.0 0.1 32 md5 ipv6 local connections host all all 128 md5host all all 192.168 1.0 24 md5 修改 linux 用户 postgres 密码 sudo passwd postgres 删除 密码 sudo su postgres passwd 设置 密码 su 切换 当前 用户 postgres postgresql 创建 用户 数据库 登录 使用 sql 语句 create user pytu with password mypassword nocreatedb create database pytb owner pytu encoding utf 命令行 使用 命令 创建 sudo postgres createuser dbuser 设置 密码 sudo postgres createdb dbuser mydb 最后 经过 上面 配置 记得 重启 sudo etc init postgresql restartubuntu 10.04 etc init postgresql 8.4 restart 安装 postgresql 数据库 管理工具 pgadmin3sudo apt get install pgadmin3 实现 php mysql 管理工具 phpmyadmin 类似 可视化 数据库 管理 界面 终端 输入 pgadmin3 启动 ubuntu 11.04 出现 如下 错误 提示 不知 何原因 pgadmin3 5579 critical murrine style draw flat box assertion width failed 为了 启用 pgadmin 一些 功能 必须 运行 下面 脚本 to enable the functions of the pgadmin utility run script against the postgres database sudo postgres psql postgres usr share postgresql 8.4 contrib adminpack sql 提示 create function 创建 函数 不同 ubuntu 版本 文件 路径 可能 不同 ubuntu 版本 使用 pgadmin8.1 路径 usr share postgresql 8.1 contrib admin81 sql on current versions of ubuntu 安装 psycopg2 最后 安装 python postgresql 数据库 驱动 psycopg2 sudo apt get install python psycopg2 验证 psycopg2 安装 python import psycopg2 psycopg2 apilevel 2.0 ubuntu python postgresql 数据库 安装 配置 基本 完成 有点 注意 使用 django admin 新建 django 项目 时候 源文件 最好 不要 放在 apache 其他 web 服务器 document root 可能 看到 源代码 fatal ident authentication failed for user 问题 新建 一个 python project settings py 输入 以下 数据库 信息 之后 databases default engine django db backends postgresql psycopg2 add postgresql psycopg2 postgresql mysql sqlite3 or oracle name mydb or path to database file if using sqlite3 user dbuser not used with sqlite3 password mypassw not used with sqlite3 host set to empty string for localhost not used with sqlite3 port set to empty string for default not used with sqlite3 测试 postgresql 连接 python manage py shell from django db import connection cursor connection cursor 出现 错误 traceback most recent call last file line infile usr local lib python2.7 dist packages django 1.3 py2.7 egg django db backends __ init __. py line 250 in cursorcursor self make debug cursor self ._ cursor file usr local lib python2.7 dist packages django 1.3 py2.7 egg django db backends postgresql psycopg2 base py line 140 in cursorself connection database connect conn params operationalerror fatal ident authentication failed for user dbuser 出现 这个 错误 原因 还是 在于 上面 pg hba conf 文件 设置 debian 包括 ubuntu 默认 pg hba conf 文件 对于 localhost 本地 机器 数据库 访问 方式 ident 只有 linux shell 用户 通过 同名 postgresql 用户 才能 访问 就是 pg 超级 用户 postgres 只能 linux 用户 postgres 登录 操作 解决 类似 operationalerror fatal ident authentication failed for user postgres 问题 两种 解决 方法 执行 python manage py shell 之前 su postgres 切换 postgres 用户 修改 pg hba conf 客户端 访问 设置 laocal 访问 ident 改为 trust type database user cidr address methodlocal all all trust 修改 pg hba conf 设置 记得 重启 pg 安装 pg ctl 可以 pg ctl reload
756,putty连接linux出现中文乱码的解决方法,putty 连接 linux 出现 中文 乱码 解决 方法 当前 打开 putty 界面 上面 栏上 右键 菜单 点击 里面 change settings .. 点击 左侧 菜单栏 window 下面 appearance 选项 然后 change 用于 设置 字体 打开 change ... 菜单 显示 字体 设置 按照 如下 设置 点击 确定 点击 左侧 菜单栏 translation 继续 设置 点击 apply 发现 中文 已经 能够 正常 显示
781,重装Win7后恢复和找回Ubuntu启动项,重装 win7 恢复 找回 ubuntu 启动项 如果 电脑 之前 ubuntu 后来 重装 win7 结果 发现 ubuntu 启动项 不见 是因为 重装 windows7 安装 系统 mbr 重写 所以 安装 完成 直接 进入 windows7 不再 出现 grub2 系统 选择 界面 如果 遇到 这种 情况 完全 需要 ubuntu 重装 因为 ubuntu 并未 破坏 只是 一道 通往 ubuntu 而已 我们 现在 就要 设法 重建 一道 这样 修复 方法 很多 如果 不想 涉及 启动 代码 处理 而且 windows7 启动 管理器 情有独钟 希望 ubuntu 加入 其中 可以 windows7 及其 一键 还原 软件 并列 以便 选择 一款 软件 easybcd 可以 实现 下面 软件 界面 推荐 下载 地址 点击 下面 介绍 一下 添加 ubuntu10.04 方法 这里 easybcd2.0 为例 windows7 安装 完成 打开 easybcd 单击 左侧 add new entry 然后 operating systems 选择 linux bsd 选项卡 type 选择 grub 下面 名字 可以 比如 改为 ubuntu 然后 点击 下面 add entry 即可 可以 参照 下面 图示 重新启动 计算机 出现 windows7 启动 管理器 发现 已经 加入 ubuntu 没有 改名 显示 neosmart linux 选择 进入 系统 自动 搜索 正确 位置 然后 熟悉 grub2 界面 出现 面前 可以 选择 进入 各种 ubuntu 模式 或者 再次 进入 windows7 其实 easybcd 一款 软件 局限 windows7 使用 局限 修复 ubuntu 可以 利用 很多 有关 启动 参数 修改 无需 记忆 繁琐 代码 当然 这里 还要 一些 附加 建议 修复 ubuntu10.04 以上 版本 的话 务必 选择 grub2 修复 grub 引导 linux 系统 选择 grub 手动 选择 正确 位置 windows7 使用 easybcd 务必 使用 版本 本篇 演示 版本 修复 其他 版本 windows apple 公司 mac 可以 相应 选项卡 选择 版本 windows 安装 软件 修复 低版本 windows windows7 修复 windows xp 使用 easybcd 具有 一定 危险性 删除 系统启动 相关 参数 时请 慎重 一旦 误删 可能 导致 不必要 麻烦
790,《SEO实战密码》高清电子版PDF下载地址（SEO学习必备）,seo 实战 密码 高清 电子版 pdf 下载 地址 seo 学习 必备 最近 一些 seo 系统性 知识 网上 各种 seo 软文 看来看去 没有 什么 深入 了解 于是 网上 搜书 好久 最终 还是 豆瓣 排名 第一 seo 实战 密码 觉得 非常 最后 找到 该书 电子版 放到 网盘 欢迎 大家 下载 seo 实战 密码 高清 电子版 下载 地址 http pan baidu com netdisk singlepublic fid 499662 2945757840
796,Python使用cookielib和urllib2模拟登陆新浪微博并抓取数据,python 使用 cookielib urllib2 模拟 登陆 新浪 微博 抓取 数据 我们 知道 http 连接 状态 协议 但是 客户端 服务器端 需要 保持 一些 相互 信息 比如 cookie cookie 服务器 才能 知道 刚才 这个 用户 登录 网站 给予 客户端 访问 一些 页面 权限 浏览器 登录 新浪 微博 必须 登录 登陆 成功 打开 其他 网页 能够 访问 程序 登录 新浪 微博 其他 验证 网站 关键点 在于 需要 保存 cookie 之后 附带 cookie 再来 访问 网站 能够 达到 效果 这里 需要 python cookielib urllib2 配合 cookielib 绑定 urllib2 一起 能够 请求 网页 时候 附带 cookie 具体做法 首先 第一步 firefox httpfox 插件 浏览器 开始 浏览 新浪 微博 首页 然后 登陆 httpfox 记录 查看 一步 发送 那些 数据 请求 那个 url 之后 python 里面 模拟 这个 过程 urllib2 urlopen 发送 用户名 密码 登陆 页面 获取 登陆 cookie 之后 访问 其他 页面 获取 微博 数据 具体 代码 来自 豆瓣 一篇 文章 地址 本人 注释 欢迎 大家 一起 品尝 同学 完美 代码 coding utf8import urllibimport urllib2import cookielibimport base64import reimport jsonimport hashlib 获取 一个 保存 cookie 对象 cj cookielib lwpcookiejar 一个 保存 cookie 对象 一个 http cookie 处理器 绑定 cookie support urllib2 httpcookieprocessor cj 创建 一个 opener 保存 cookie http 处理器 还有 设置 一个 handler 用于 处理 http url 打开 opener urllib2 build opener cookie support urllib2 httphandler 包含 cookie http 处理器 http handler 资源 urllib2 对象 板顶 一起 urllib2 install opener opener postdata entry weibo gateway from savestate userticket ssosimplelogin vsnf vsnval su service miniblog servertime nonce pwencode wsse sp encoding utf url http weibo com ajaxlogin php framelogin callback parent sinassocontroller feedbackurlcallback returntype meta def get servertime url http login sina com cn sso prelogin php entry weibo callback sinassocontroller prelogincallback su dw5kzwzpbmvk client ssologin js v1.3 18 &_ 1329806375939 data urllib2 urlopen url read re compile try json data search data group data json loads json data servertime str data servertime nonce data nonce return servertime nonce except print get severtime error return nonedef get pwd pwd servertime nonce pwd1 hashlib sha1 pwd hexdigest pwd2 hashlib sha1 pwd1 hexdigest pwd3 pwd2 servertime nonce pwd3 hashlib sha1 pwd3 hexdigest return pwd3def get user username username urllib quote username username base64 encodestring username return usernamedef main username www crazyant net 微博 账号 pwd xxxx 微博 密码 url http login sina com cn sso login php client ssologin js v1.3 18 try servertime nonce get servertime except return global postdata postdata servertime servertime postdata nonce nonce postdata su get user username postdata sp get pwd pwd servertime nonce postdata urllib urlencode postdata headers user agent mozilla 5.0 x11 linux i686 rv 8.0 gecko 20100101 firefox 8.0 其实 这里 已经 能够 使用 urllib2 请求 新浪 任何 内容 这里 已经 登陆 成功 req urllib2 request url url data postdata headers headers result urllib2 urlopen req text result read print text re compile location replace try login url search text group print login url print login url urllib2 urlopen login url print login success except print login error 测试 读取数据 下面 url 可以 换成 任意 地址 内容 读取 下来 req urllib2 request url http weibo com aj mblog mbloglist page count 15 max id 3463810566724276 pre page end id 3458270641877724 pagebar &_ 134138430655960 uid 2383944094 &_ &__ rnd 1341384513840 result urllib2 urlopen req text result read print len result read unicode eval utf print eval text main 其实 获取 模拟 登陆 urllib2 可以 数据 任何 事情 甚至 可以 一个 多线程 爬虫 新浪 微博 一直 这个 想法 从来 没有 实现 如果 什么 进展 联系 共同进步
808,珠玑：在仔细研究数据的基础上得出程序的结构,珠玑 仔细 研究 数据 基础 得出 程序 结构 优化 代码 编写 优秀 程序 绝佳 方法 就是 数据 研究 数据 仔细 研究 之后 采用 合适 良好 数据结构 程序结构 代码 极大 优化 良好 改变 章节 试着 解决 这样 问题 很多 繁琐 重复 耦合 难以 维护 程序 其实 可以 简单 数据结构 应用 变得 精巧 清晰 完美 举个 例子 一个 程序 需要 统计 500 之间 数字 每个 数字 文本 出现 次数 可能 有人 写出 这样 程序 if c1 ++ if c2 ++ if c3 ++ if 498 c498 ++ if 499 c499 ++ if 500 c500 ++ 程序 500 变量 存储 每个 数字 出现 次数 然而 仔细 研究 发现 可以 一个 500 元素 数组 轻松 实现 恰当 数据 视图 实际上 决定 程序 结构 很多 程序 可以 通过 重新 组织 内部 数据 变得 并且 更好 使用 模板 技术 解决 格式化 大型 文本 需求 能用 程序实现 不要 编写 大型 程序 比如 处理 某个 23 情况 程序 其实 完全 可以 编写 针对 程序 最后 赋值 23 实现 程序员 节省 空间 方面 无计可施 自己 代码 解脱 出来 退回 起点 集中 心里 研究 数据 常常 奇效 数据 表示 形式 程序设计 根本 以下 一些 参考 方法 使用 数组 重新 编写 重复 代码 冗余 相似 代码 常常 可以 简单 数组 描述 封装 复杂 结构 如果 数据结构 比较复杂 直接 抽象 成类 尽可能 使用 高级 工具 超文本 名值 电子表格 数据库 编程语言 数据 得出 程序 结构 通过 使用 恰当 数据结构 替代 复杂 代码 数据 可以 得到 程序 结构 万变不离其宗 动手 编码 之前 优秀 程序员 彻底 理解 输入 输出 中间 数据结构 围绕 这些 结构 创建 程序
811,"django1.4设置模板路径和CSS,JS,image等路径的方法",django1.4 设置 模板 路径 css js image 路径 方法 对于 django 这类 mvc 框架 来说 路径 问题 可以 称为 一个 谜一样 东西 很多 因为 路径 知道 如何 处理 觉得 mvc 实在 云里雾里 不知所云 本文 主要 解决 django 关于 模板 路径 设置 css 文件 路径 设置 js 文件 路径 设置 图片 路径 设置 常见问题 文中 templates media 包含 js css images 目录 放到 项目 目录 根目录 具有 一般 性质 设定 模板 路径 设置 模板 路径 比较简单 只要 setting py 里面 template dirs 选项 里面 加上 这么 一句 即可 import os pathtemplate dirs os path join os path dirname __ file __ .. templates replace 意味着 可以 项目 根目录 下面 建立 一个 templates 目录 里面 所有 模板 设定 css js images 路径 setting py 里面 加入 下面 一句 指定 根目录 下面 media 路径 static path os path join os path dirname __ file __ .. media replace urls py 里面 设定 这么 一句 请求 css js images url 转到 地方 site media path django views static serve document root settings static path 那么 我们 模板 里面 现在 已经 可以 以下 方法 访问 js css images link href site media style style css rel stylesheet type text css 方法 一个 优点 不用 详细 设置 js css images 三个 不同 路径 只要 设定 一个 模版 文件 里面 直接 指定 文件 子目录 可以 比如 图片 js 可以 这么 img src site media images jpg script src site media js js script 这里 我们 没有 urls py 指定 site media images 这样 路径
814,Django中定制自己的User和Group管理模块（类似对admin的二次开发）,django 定制 自己 user group 管理 模块 类似 admin 二次开发 django admin 后台 管理 实在 强大 其实 对于 普通 模型 来说 没什么 关键 对于 权限 系统 比如 user group 管理 非常 总是 想要 充分利用 本身 功能 然而 admin 台上 直接 进行 二次开发 很多 友好 地方 比如 如果 简单 扩充 user 能够 系统 本身 user 模型 管理 添加 涉及 dj 源码 修改 源码 绝对 不是 主意 因此 必须 自己 权限 系统 其实 这里 我们 django contrib 下面 auth 进行 接口 编写 下面 示意图 其实 正是 因为 auth 包括 user group 增删 改查 auth 使用 验证 权限 之间 没有 直接 关系 因此 我们 可以 简单 django 核心 user group 作为 一个 简单 模型 使用 比如 group 添加 修改 删除 等等 使用 时候 因为 直接 访问 还是 核心 并不知道 我们 偷偷 很多 源码 自己 操纵 user group 一切 数据 数据 中介 user group 使用 知识 数据 简单 访问 而已 思路 已经 理清 可以 user group 如下 操纵 实现 自己 类似 admin 站点 管理 模块 我们 使用 只是 源码 核心 user group 模型 model 因此 我们 可以 建立 自己 模型 表单 哈哈 简单 访问 模型 表单 我们 就是 user group 数据 进行 操作 简单
818,Python模拟登陆新浪微博并实现投票功能,python 模拟 登陆 新浪 微博 实现 投票 功能 上次 发了 一篇 文章 题目 叫做 python 使用 cookielib urllib2 模拟 登陆 新浪 微博 抓取 数据 里面 代码 不要 怀疑 测试 正确 新浪 微博 模拟 登陆 有个 前提条件 新浪 微博 账号 登陆 时候 新浪 没有 提示 输入 验证码 需要 输入 验证码 不好意思 这里 处理 可以 以下 几种 方法 解决 验证码 问题 图片 识别 软件 识别 不过 识别 正确率 登陆 时候 如果 需要 验证码 我们 自己 程序 弹出 验证码 图片 自己 手工 输入 外包 验证码 输入 公司 比如 100 图片 过去 送回 文字 结果 10000 程序运行 后面 提到 urllib2 里面 cookie 已经 存放 我们 请求 任何 页面 需要 数据 因此 可以 urllib2 请求 任何 页面 微薄 投票 实现 任何 事情 详细 如下 代码 猥琐 分隔 下面 新增 内容 为了 方便 上次 代码 一起 贴出来 代码 注释 大家 可以 看一看 代码 测试 成功 coding utf8import urllibimport urllib2import cookielibimport base64import reimport jsonimport hashlibimport timefrom django template defaultfilters import urlencode 获取 一个 保存 cookie 对象 cj cookielib lwpcookiejar 一个 保存 cookie 对象 一个 http cookie 处理器 绑定 cookie support urllib2 httpcookieprocessor cj 创建 一个 opener 保存 cookie http 处理器 还有 设置 一个 handler 用于 处理 http url 打开 opener urllib2 build opener cookie support urllib2 httphandler 包含 cookie http 处理器 http handler 资源 urllib2 对象 板顶 一起 urllib2 install opener opener postdata entry weibo gateway from savestate userticket ssosimplelogin vsnf vsnval su service miniblog servertime nonce pwencode wsse sp encoding utf url http weibo com ajaxlogin php framelogin callback parent sinassocontroller feedbackurlcallback returntype meta def get servertime url http login sina com cn sso prelogin php entry weibo callback sinassocontroller prelogincallback su dw5kzwzpbmvk client ssologin js v1.3 18 &_ 1329806375939 data urllib2 urlopen url read re compile try json data search data group data json loads json data servertime str data servertime nonce data nonce return servertime nonce except print get severtime error return nonedef get pwd pwd servertime nonce pwd1 hashlib sha1 pwd hexdigest pwd2 hashlib sha1 pwd1 hexdigest pwd3 pwd2 servertime nonce pwd3 hashlib sha1 pwd3 hexdigest return pwd3def get user username username urllib quote username username base64 encodestring username return usernamedef main username www crazyant net 微博 账号 pwd xxx 微博 密码 url http login sina com cn sso login php client ssologin js v1.3 18 try servertime nonce get servertime except return global postdata postdata servertime servertime postdata nonce nonce postdata su get user username postdata sp get pwd pwd servertime nonce postdata urllib urlencode postdata headers user agent mozilla 5.0 x11 linux i686 rv 8.0 gecko 20100101 firefox 8.0 referer http vote weibo com vid 1890981 已经 能够 使用 urllib2 请求 新浪 任何 内容 登陆 成功 req urllib2 request url url data postdata headers headers result urllib2 urlopen req text result read print text re compile location replace try login url search text group print login url print login url urllib2 urlopen login url print login success except print login error 测试 读取数据 下面 url 可以 换成 任意 地址 内容 读取 下来 #--------------------------------------------------------- 以下 2012 25 21 新增 一个 投票 页面 进行 投票 #--------------------------------------------------------- 首先 请求 一下 投票 页面 这样 只是 为了 页面 返回 cookie 我们 保存 cookie res urllib2 urlopen http vote weibo com vid 1890981 分析 投票 流程 需要 如下 几个 参数 votedata item share poll id 1890981 poll category 原文 那个 headers 一项 referer 结果 导致 投票 成功 所以 这里 加上 headers more user agent mozilla 5.0 x11 linux i686 rv 8.0 gecko 20100101 firefox 8.0 referer http vote weibo com vid 1890981 投票 参数 进行 编码 用于 urllib2 请求 时候 附带 votedata urllib urlencode votedata url 数据 请求 http 我们 伪造 一个 请求 req urllib2 request url http vote weibo com poll joined data votedata headers headers more 发出请求 页面 看一看 投票 ok result urllib2 urlopen req 返回 内容 下来 看看 其实 一步 必要 text result read open out txt write text print ok main
821,PHP远程操纵Wordpress的方法(流程剖析）,php 远程 操纵 wordpress 方法 流程 剖析 一直 一个 wordpress 群发 文章 应用 这样 自动 采集 文章 然后 写个 脚本 自动 发送 文章 哈哈 虽然 python 这种 事情 貌似 更加 擅长 但是 web 界面 访问 应用 python 虚拟主机 现在 还好 至少 php 真的 容易 于是 老本行 php 搞定 php 已经 长时间 原来 纯手工 编写 后来 网上 类库 自己 整合 如今 直接 使用 框架 再也 愿意 从头开始 程序 现成 框架 大量 优秀 代码 拿来 用能 实现目标 何乐而不为 之前 zend thinkphp codeigniter 两者 其实 不错 但是 现在 还是 偏爱 codeigniter 因为 强大 在线 文档 使用 ci codeigniter xml rpc xml rpc 服务器 以下 代码 实现 服务器 wordpress 站点 标签 信息 获取 下来 打印 public function index 加载 ci xmlrpc 类库 this load library xmlrpc 设定 远程 xmlrpc php 文件 地址 this xmlrpc server http jobrule sinaapp com xmlrpc php 设定 需要 操作 方法 字符串 可以 wordpress 服务器 wp includes class wp xmlrpc server php 里面 找到 this xmlrpc method wp gettags 设定 请求 参数 可以 直接 class wp xmlrpc server php 源代码 其中 id 第一个 第二个 用户名 密码 request array admin 123456789 参数 设定 请求 里面 这时候 没有 发送 请求 this xmlrpc request request 发送 请求 if this xmlrpc send request echo this xmlrpc display error 打印 结果 看一看 echo pre print this xmlrpc display response echo pre this load view welcome message ci 官方 文档 列出 xmlrpc api this xmlrpc server 设定 发送 请求 服务器 url 端口号 this xmlrpc timeout 设定 一个 发送 请求 响应 时间 this xmlrpc method 设定 请求 服务 方法 字符串 重要 this xmlrpc request 绑定 发送 请求 数据 参数 发送 请求 this xmlrpc send request 发送 请求 this xmlrpc display error 打印 错误信息 this xmlrpc display response 打印 返回 响应 信息 this xmlrpc set debug true 开发 过程 打印 一些 调试信息 关键在于 this xmlrpc method 接口 设定 服务器发送 什么样 请求 下载 一个 wordpress 源码 打开 wp includes class wp xmlrpc server php 文件 可以 看到 所有 我们 能够 调用 服务 wordpress api wp getusersblogs this wp getusersblogs wp newpost this wp newpost wp editpost this wp editpost wp deletepost this wp deletepost wp getpost this wp getpost wp getposts this wp getposts wp newterm this wp newterm wp editterm this wp editterm wp deleteterm this wp deleteterm wp getterm this wp getterm wp getterms this wp getterms wp gettaxonomy this wp gettaxonomy wp gettaxonomies this wp gettaxonomies wp getpage this wp getpage wp getpages this wp getpages wp newpage this wp newpage wp deletepage this wp deletepage wp editpage this wp editpage wp getpagelist this wp getpagelist wp getauthors this wp getauthors wp getcategories this mw getcategories alias wp gettags this wp gettags wp newcategory this wp newcategory wp deletecategory this wp deletecategory wp suggestcategories this wp suggestcategories wp uploadfile this mw newmediaobject alias wp getcommentcount this wp getcommentcount wp getpoststatuslist this wp getpoststatuslist wp getpagestatuslist this wp getpagestatuslist wp getpagetemplates this wp getpagetemplates wp getoptions this wp getoptions wp setoptions this wp setoptions wp getcomment this wp getcomment wp getcomments this wp getcomments wp deletecomment this wp deletecomment wp editcomment this wp editcomment wp newcomment this wp newcomment wp getcommentstatuslist this wp getcommentstatuslist wp getmediaitem this wp getmediaitem wp getmedialibrary this wp getmedialibrary wp getpostformats this wp getpostformats wp getposttype this wp getposttype wp getposttypes this wp getposttypes blogger api blogger getusersblogs this blogger getusersblogs blogger getuserinfo this blogger getuserinfo blogger getpost this blogger getpost blogger getrecentposts this blogger getrecentposts blogger gettemplate this blogger gettemplate blogger settemplate this blogger settemplate blogger newpost this blogger newpost blogger editpost this blogger editpost blogger deletepost this blogger deletepost metaweblog api with mt extensions to structs metaweblog newpost this mw newpost metaweblog editpost this mw editpost metaweblog getpost this mw getpost metaweblog getrecentposts this mw getrecentposts metaweblog getcategories this mw getcategories metaweblog newmediaobject this mw newmediaobject metaweblog api aliases for blogger api see http www xmlrpc com stories storyreader 2460 metaweblog deletepost this blogger deletepost metaweblog gettemplate this blogger gettemplate metaweblog settemplate this blogger settemplate metaweblog getusersblogs this blogger getusersblogs movabletype api mt getcategorylist this mt getcategorylist mt getrecentposttitles this mt getrecentposttitles mt getpostcategories this mt getpostcategories mt setpostcategories this mt setpostcategories mt supportedmethods this mt supportedmethods mt supportedtextfilters this mt supportedtextfilters mt gettrackbackpings this mt gettrackbackpings mt publishpost this mt publishpost pingback pingback ping this pingback ping pingback extensions getpingbacks this pingback extensions getpingbacks demo sayhello this sayhello demo addtwonumbers this addtwonumbers 根据 方法 名字 容易 知道 什么 意思 知道 一个 方法 需要 发送 什么 参数 直接 找到 方法 方法 注释 可以 看出 需要 什么 参数 比如 发送 文章 newpost 方法 根据 注释 知道 需要 如下 参数 create new post for any registered post type since 3.4 param array args method parameters contains int blog id string username string password array content struct content struct can contain post type default post post status default draft post title post author post exerpt post content post date gmt post date post format post password comment status can be open closed ping status can be open closed sticky post thumbnail id of media item to use as the post thumbnail featured image custom fields array with each element containing key and value terms array with taxonomy names as keys and arrays of term ids as values terms names array with taxonomy names as keys and arrays of term names as values enclosure any other fields supported by wp insert post return string post id 至此 php 远程 操作 wordpress 基本 流程 已经 非常 清晰 本文 使用 ci xmlrpc 网友 可以 自己 网上 随便 找个 开源 代替 他们 接口 肯定 大同小异 关键 弄懂 服务端 提供 什么 服务 直接 调用
855,使用Google搭建自己的SVN或Git或Mercurial代码服务器之完美教程,使用 google 搭建 自己 svn git mercurial 代码 服务器 完美 教程 随着 自己 代码 越来越 但是 每次 发现 之前 写过 类似 现在 发现 不到 或者 一个 地方 代码 拷到 一个 地方 继续 或者 自己 很大 程序 每次 备份 方法 复制 整个 项目 粘贴 一个 地方 或者 多人 合作 总是 不到 一个 代码 合作 方法 答案 代码 托管 比如 svn 比如 git 比如 mercurial 它们 代码 放到 服务器 关键 记录 每次 修改 代码 记录 这样 可以 代码 还原 以前 版本 非常 轻松 个人 当然 免费 代码 托管 服务器 我用 google 喜欢 google 推荐 大家 以下 使用 google 搭建 svn git mercurial 详细 教程 注册 google 账户 如果 跳到 注册 地址 https accounts google com signup2 登陆 google 登陆 地址 https accounts google com3 进入 google 代码 界面 输入 地址 https code google com intl zh cn 进入 代码 管理 界面 点击 create new project 我们 创建 一个 项目 输入 验证码 然后 create project 按钮 提交 使用 客户端 访问 自己 代码 托管 现在 已经 建立 一个 svn 服务器 其他 类似 我们 可以 使用 svn git mercurial 各自 客户端 进行 操作 下面 步骤 tortoisesvn 为例 进行 介绍 首先 下载 tortoisesvn 安装 tortoisesvn 下载 地址 http tortoisesvn net downloads html6 找到 自己 svn 服务器 地址 客户端 使用 地址 checkout 然后 上传 一个 文件 服务器 ok 服务器 内容 本地 同步 文件夹 绿色 说明 同步 成功 然后 里面 新建 一个 文件 test py 文件 add svn 没有 提交 然后 点击 提交 新增 文件 提交 服务器 这时候 需要 输入 用户名 密码 其中 用户名 注册 google 邮箱 密码 这里 打开 复制 密码 填写 ok 提交 成功 至此 教程 结束 有人 遇到 问题 就是 不到 服务器 嘿嘿 这个 问题 需要 自己 搜索 一些 方法
874,2012年度读写Excel文件的最佳PHP类库收集,2012 年度 读写 excel 文件 最佳 php 类库 收集 phpexcel phpexcel 一个 使用 php 编写 类库 提供 一系列 用于 读写 不同 格式 文件 比如 excel biff 格式 xls 文件 excel 2007 officeopenxml 格式 xlsx 文件 csv 文件 libre openoffice calc ods 文件 gnumeric 文件 pdf 文件 html 文件 等等 项目 使用 微软 openxml 标准 php 进行 构建 simpleexcel php php 类库 一个 简单 但是 非常 强大 支持 微软 excel xml csv 格式文件 进行 解析 类库 支持 按行 读取 单元 或者 仅仅 一个 单元格 内容 获取 一列 一样 php excel 用于 生成 excel 文件 一个 简洁 类库 需要 一个二维 数组 作为 参数 并且 使用 一个 简单 函数 转换 数据 php export data 一个 简单 类库 用于 表格 数据 导出 类似 excel 文件 比如 xml csv tsv 支持 按流 方式 内容 输出 一个 文件 或者 直接 输出 浏览器 因此 适合 到处 大型 数据 集合 这样 不会 出现 内存 不够 情况 excel writer xml for php 一系列 php 类库 允许 动态 生成 excel 文件 几乎 可以 称作 微软 xml 体系 一个 完整 实现 php excel reader php 类库 体现 sourceforge 一个 关于 php 对于 excel 读取 项目 良好 进展 直接 二进制 方式 读取 xls 文件 并且 能够 任何 单元格 返回值 相关联 格式 本文 来自 疯狂 蚂蚁 www crazyant net
886,PHP读写Word文件的最佳类库收集,php 读写 word 文件 最佳 类库 收集 phpwordphpword 一个 php 编写 用于 创建 word 文档 类库 phpword 基于 两个 神奇 类库 phpexcel phppowerpoint 创建 大部分 特性 插入 格式化 文档 片段 插入 格式 文本 片段 插入 文本 片段 插入 页面 片段 插入 格式化 图像 二进制 ole 对象 插入 格式化 水印 插入 页眉 页脚 插入 格式化 表格 插入 动态 标题 表格 形式 内容 插入 格式化 列表 插入 格式化 高亮 超链接 非常 简洁 模板 系统 下载 地址 http phpword codeplex com releases view 49543phpdocxphpdocx 一个 用于 生成 完全 动态 完全 兼容 word 文档 php 类库 可能 需要 直接 任何 数据 集合 或者 表格 文件 生成 报表 这些 报表 也许 包括 图标 图片 表格 开头 结束 等等 数据 phpdocx 能够 使用 一些 预定 模板 文件 生成 word 文档 大大简化 工作量 使用 很少 一些 代码 能够 phpdocx 集成 web 站点 网络应用 这样 能够 用户 雇员 提供 一个 价值 服务 本文 来自 疯狂 蚂蚁 博客 www crazyant net
897,国外10个非常有趣的PHP博客,国外 10 非常 有趣 php 博客 david walsh blogdavid walsh 一个 非常 经验 php 开发者 参与 很多 大型 项目 博客 发现 几乎 每天 php 开发 建议 roshan blog roshan bhattarai 博客 能够 发现 非常 关于 php 开发 有趣 文章 woork antonio lupetti 博客 antonio lupetti 一个 专业 博客 写作 文章 大部分 关于 php 编程 tobias schlitt 充满 php 热爱 一个 tobias schlitt 专注 php 博客 分类 包括 php pear geek 等等 paul johns blogpaul 一个 国际 承认 php 专家 现在 omniti 公司 一个 高级 程序员 博客 很多 关于 项目 文章 涉及 管理 商业 政治 文化 一些 内容 antti 一个 通向 软件技术 旅程 antti holvikari 所作 一个 非常 有趣 关于 php 开发 博客 there and back againjoshua eichorn 所作 专注 ajax php 开源 博客 chris shiflett 关注 php web 应用 安全 chris shiflett 所作 专注 php 博客 essential php security 一书 作者 该书 reilly 出版社 出版 guru php php 权威 观点 maartin brampton 所作 一个 有趣 php 博客 本人 一个 php 开发 专家 stuart herbert on phpstuart hermert 通过 博客 分享 关于 部署 php 应用 维护 php 服务器 经验
912,PHP的验证码实现（w3schools推荐）,php 验证码 实现 w3schools 推荐 本文 使用 php 一些 可用 特性 实现 验证码 功能 教程 非常 简单 使用 可以 改变 字体 生成 验证码 图片 正如 我们 了解 验证码 用于 避免 垃圾 评论 或者 自动 提交 验证码 程序 资源 下载 地址 在线 演示 captcha code file php 代码 php session start 设置 可以 这里 修改 验证码 图片 参数 image width 120 image height 40 characters on image font monofont ttf 以下 字符 用于 验证码 字符 为了 避免 混淆 去掉 数字 字母 possible letters 23456789bcdfghjkmnpqrstvwxyz random dots 10 random lines 30 captcha text color 0x142864 captcha noice color 0x142864 code while characters on image code substr possible letters mt rand strlen possible letters ++ font size image height 0.75 image imagecreate image width image height 设置 背景 文本 干扰 噪点 background color imagecolorallocate image 255 255 255 arr text color hexrgb captcha text color text color imagecolorallocate image arr text color red arr text color green arr text color blue arr noice color hexrgb captcha noice color image noise color imagecolorallocate image arr noice color red arr noice color green arr noice color blue 背景 随机 生成 干扰 噪点 for random dots ++ imagefilledellipse image mt rand image width mt rand image height image noise color 背景图片 随机 生成 线条 for random lines ++ imageline image mt rand image width mt rand image height mt rand image width mt rand image height image noise color 生成 一个 文本框 然后 里面 写生 个字符 textbox imagettfbbox font size font code image width textbox image height textbox imagettftext image font size text color font code 验证码 图片 html 页面 显示 出来 header content type image jpeg 设定 图片 输出 类型 imagejpeg image 显示 图片 imagedestroy image 销毁 图片 实例 session letters code code function hexrgb hexstr int hexdec hexstr return array red 0xff int 0x10 green 0xff int 0x8 blue 0xff int 验证 验证码 正确 错误 方法 验证码 图片 文字 存放 session 变量 里面 验证 时候 我们 需要 session 里面 用户 输入 进行 比较 即可 session letters code 存放 验证码 文字 post letters code 这是 用户 输入 验证码 内容 index php 代码 包含 html css javascript and php 代码 php session start if isset request submit 服务器端 验证 代码 if empty session letters code strcasecmp session letters code post letters code msg 验证 失败 else 验证码 验证 正确 这里 验证 成功 代码 style type text css table font family arial helvetica sans serif font size 12px color 333 background color e4e4e4 table td background color f8f8f8 style form action method post name form1 id form1 table width 400 border align center cellpadding cellspacing class table php if isset msg tr td colspan align center valign top php echo msg td tr php tr td align right valign top 验证码 td td img src captcha code file php rand php echo rand id captchaimg br label for message 输入 上面 验证码 label br input id letters code name letters code type text br 无法 图片 点击 href javascript refreshcaptcha here 刷新 td tr tr td td td input name submit type submit onclick return validate value 提交 td tr table form script type text javascript function refreshcaptcha var img document images captchaimg img src img src substring img src lastindexof rand math random 1000 script
914,程序员做开发，前台、后台、测试哪个累？,程序员 开发 前台 后台 测试 哪个 聊天 得来 一个 产品 上马 时候 开始 后台 持续时间 中间 阶段 前太累 持续时间 测试 中间 后面 一直 持续时间 最长 压力 比前 两个 其实 哪个 觉得 哪个
920,PHP创建和解析JSON数据的方法,php 创建 解析 json 数据 方法 json 可以 解释 javascript 对象 表示 方法 也就是说 json 概念 来源于 javascript 对于 web 开发 模式 来说 下面 这个 大家 肯定 熟悉 由此 可以 看到 客户端 浏览器 服务器端 脚本 需要 交换 数据 对于 数据 格式 数据 直接 简单 post get 字符串 方法 提交 过去 可以 但是 一些 大型 数据 最好 使用 格式 方法 交换 比如 json xml json 什么 json 一种 用于 互联网络 传输 超量 数据 数据交换 格式 虽然 internet 交换 数据 xml 主要 地位 然而 json 更加 简单 并且 适用 轻型 数据 尽管 json 当初 javascript 发明 并且 用于 访问 远程 数据 现在 广泛 适用 各种 语言 因为 json 一种 平台 无关 数据格式 json 数据 数据类型 实例 json 支持 各种各样 数据类型 包括 数字 字符串 布尔值 数组 数据 甚至 对象 数据 一个 集合 每个 元素 形式 使用 逗号 分隔 并且 使用 大括号 包裹 我们 一个 json 数据 简单 例子 例子 表示 一个 雇员 详细信息 id name mike country usa office microsoft oracle 使用 php 创建 解析 json 数据 方法 php 5.2 版本 以后 提供 json 扩展 处理 json 数据 通过 php 两个 函数 json encode json decode 非常 方便 json 数据 进行 转换 解析 首先 我们 一段 php 数组 创建 各式 json 代码 json data array id name mike country usa office array microsoft oracle echo json encode json data 代码 直接 产生 json 数据 现在 我们 php 上面 json 解码 json string id name mike country usa office microsoft oracle obj json decode json string 现在 变量 obj 包含 使用 php 解析 json 数据 可以 使用 以下 方法 输出 访问 echo obj name displays mikeecho obj office displays microsoft 没错 obj office 一个 数组 能够 使用 php foreach 方法 遍历 foreach obj office as val echo val
930,PHP和MySQL处理树状、分级、无限分类、分层数据的方法,php mysql 处理 树状 分级 无限 分类 分层 数据 方法 文章 标题 多个 词语 表达 其实 一个 意思 就是 递归 分类 数据 分级 数据 非常 类似 数据结构 树状 结构 每个 节点 自己 孩子 节点 孩子 结点 本身 父亲 节点 这是 一个 递归 分层 形式 可以 称之为 树形 层级 数据 层级 数据结构 编程语言 非常 普通 一种 数据结构 代表 一系列 数据 每一项 一个 父亲 节点 除了 节点 其他 多个 孩子 结点 web 开发人员 使用 层级 数据结构 用于 非常 场景 包括 内容 管理系统 cms 论坛 主题 邮件 列表 还有 电子商务 网站 产品 分类 文章 主要 介绍 使用 php mysql 管理 分级 数据 方法 其中 给出 两种 流行 分级 数据模型 邻接 模型 嵌套 集合 模型 邻接 模型 用于 分层 数据 邻接 模型 一种 分级 数据模型 其中 每个 节点 一个 指向 父亲 指针 节点 指针 空值 使用 下面 sql 语句 建立 结构 插入 测试数据 -- ------------------------------------------------------------ 结构 category -- create table if not exists category category id int 10 not null auto increment category name varchar 50 not null parent id int 10 default null primary key category id engine innodb default charset utf8 auto increment 15 ---- 转存 表中 数据 category -- insert into category category id category name parent id values null 10 11 10 12 10 建立 完成 数据库 存在 数据 并且 分类 图是 每个 节点 关键字 数据库 id parent id 就是 节点 id 这种 方法 非常简单 因为 容易 看清楚 父子关系 使用 以下 简单 php 函数 代码 可以 容易 输出 树状 路径 phpfunction get path category id con mysql connect localhost root 123456 if con die 数据库 连接 失败 mysql error mysql select db test con 查找 当前 节点 节点 id 这里 使用 自身 自身 连接 实现 sql select c1 parent id c2 category name as parent name from category as c1 left join category as c2 on c1 parent id c2 category id where c1 category id category id echo sql br 测试 sql 打印 出来 拿到 数据库 执行 一下 看看 结果 result mysql query sql row mysql fetch array result 现在 row 数组 父亲 节点 id 名称 信息 树状 路径 保存 数组 里面 path array 如果 父亲 节点 不为 节点 节点 路径 里面 if row parent id null 将父 节点 信息 存入 一个 数组 元素 parent category id row parent id parent category name row parent name 递归 节点 路径 path array merge get path row parent id parent return path 根据 上面 可以 看出 id 11 我们 测试 路径 path get path 11 echo h2 路径 数组 h2 echo pre print path echo pre 路径 节点 路径 打印 出来 打印 结果 echo h2 向根 节点 打印 路径 h2 for count path -- echo path category name 由此 可以 知道 怎样 找到 一个 叶子 节点 没有 孩子 节点 节点 路径 下面 来看 怎样 从根 节点 下来 遍历 层级 结构 通过 节点 层级 关系 打印 所有 节点 phpfunction display children category id level con mysql connect localhost root 123456 if con die 数据库 连接 失败 mysql error mysql select db test con 获得 当前 节点 所有 孩子 节点 直接 孩子 没有 孙子 result mysql query select from category where parent id category id 遍历 孩子 节点 打印 节点 while row mysql fetch array result 根据 层级 按照 缩进 格式 打印 节点 名字 这里 只是 打印 可以 以下 代码 改成 其他 比如 节点 信息 存储 起来 echo str repeat -- level row category name br 递归 打印 所有 孩子 节点 display children row category id level 节点 我们 打印 所有 节点 display children 然而 邻接 模型 每个 节点 存储 父亲 节点 信息 劣势 首先 使用 数据库 查询 语句 很难 直接 实现 需要 借助 php 代码 实现 sql 语句 需要 知道 节点 位于 一个 层级 并且 每个 树层 使用 sql 自我 连接 实现 意味着 一层 处理 降低 数据库 性能 删除 节点 过程 导致 一些 问题 如果 删除 某个 节点 孩子 结果 孩子 孤儿 就是 没有 父亲 真正 体现 就是 这些 孩子 节点 从树中 相当于 消失 嵌套 集合 模型 用于 树形 分层 结构 数据 嵌套 集合 模型 叫做 先根 遍历 算法 一种 处理 树形 层级 数据 方法 代替 节点 父子关系 层级 使用 嵌套 容器 集合 表示 其中 每个 节点 具有 两个 一个 left 一个 right 决定 left right 过程 从左到右 进行 首先 left 赋值 向下 遍历 节点 孩子 最后 才能 得到 节点 right sql 语句 如下 所示 create table category category id int 10 auto increment primary key category name varchar 50 not null lft int 10 not null rgt int 10 not null 现在 可以 一句 sql 查询 得到 整个 节点 select from category where lft between and 14 order by lft asc sql 两个 数字 14 就是 节点 left right 类似 如果 想得到 某个 节点 所有 孩子 节点 需要 sql 语句 14 替换 成本 节点 left right 可以 例如 如果 想得到 所有 男人 衣服 可以 下面 sql 语句 select from category where lft between and order by lft asc 找到 一条 某个 节点 路径 一条 sql 语句 可以 搞定 select from category where lft and rgt 10 order by lft asc 仔细观察 一下 一些 叶子 节点 节点 路径 发现 所有 祖先 左值 右值 例子 一条 裙子 分类 路径 取出 观察 一下 裙子 所有 left 小于 right 大于 10 其他 祖先 节点 满足 要求 尽管 嵌套 集合 模型 更加 复杂 并且 有些 难以 理解 非常 优势 需要 依赖 其他 资源 比如 php 代码 需要 递归 同时 数据库 查询 语句 非常 简单 大多数 一条 sql 语句 可以 搞定 这些 特性 能够 显著 增加 应用程序 性能 使得 能够 接受 速度 处理 复杂 层级 结构 然而 万事 完美 更新 层级 结构 增加 删除 节点 更加 复杂 并且 可能 非常 增加 一个 节点 层级 结构 方法 一个 节点 插入 层级 数据 需要 整个 很多 节点 left right 更新 例如 如果 一个 男士 运动鞋 分类 插入 男性 衣服 短裤 后面 那么 所有 必须 大于 所有 left right 增加 为什么 因为 短裤 right 必须 分类 left right 设定 当然 以下 两条 sql 可以 解决 update category set rgt rgt where rgt 6update category set lft lft where lft 现在 中间 已经 空隙 用来 插入 分类 一条 sql 插入 节点 insert into category category name lft rgt values sneakers 树形 层级 数据 删除 一个 节点 方法 层级 集合 模型 删除 一个 节点 方法 邻接 表中 相同 操作 稍微 一些 不同 操作 复杂程度 不同 比如 删除 一个 叶子 节点 一个 孩子 节点 不同 删除 一个 叶子 节点 所有 left right 大于 节点 left right 节点 left right 减去 然后 删除 节点 以下 使用 sql 实现 过程 update category set lft lft where lft 5update category set rgt rgt where rgt 6delete from category where lft and rgt 例子 短裤 节点 删除 如果 删除 节点 孩子 节点 的话 删除 过程 会多 一个 步骤 比如 我们 删除 男性 衣服 分类 时候 update category set lft lft rgt rgt where lft and rgt 7update category set lft lft where lft 7update category set rgt rgt where rgt 7delete from category where lft and rgt 模型 对于 处理 树形 分层 数据 更好 情况 更好 情况 如果 需要 一个 更加 灵活 模型 容易 更新 邻接 模型 如果 分类 构成 一棵 复杂 并且 更新 需要 频繁 嵌套 集合 模型 肯定 之选 本文 内容 翻译 访问 其中 原文中 代码 有些 问题 本人 添加 测试数据 改正 代码
955,Ubuntu10.10 Server+Nginx+Django+Postgresql安装步骤,ubuntu10.10 server nginx django postgresql 安装 步骤 安装 ubuntu 10.101 使用 默认 安装 更新 apt 时候 选择 跳过 1.2 设置 管理员 用户名 密码 1.3 安装 openssh server 启动 ssh 服务 方便使用 bitvise tunnelier putty 工具 进行 管理 sudo apt get install openssh server2 更新 2.1 sudo vi etc apt sources list 编辑 列表 163 速度 不错 deb http mirrors.163 com ubuntu maverick main restricted universe multiversedeb http mirrors.163 com ubuntu maverick security main restricted universe multiversedeb http mirrors.163 com ubuntu maverick updates main restricted universe multiversedeb http mirrors.163 com ubuntu maverick proposed main restricted universe multiversedeb http mirrors.163 com ubuntu maverick backports main restricted universe multiversedeb src http mirrors.163 com ubuntu maverick main restricted universe multiversedeb src http mirrors.163 com ubuntu maverick security main restricted universe multiversedeb src http mirrors.163 com ubuntu maverick updates main restricted universe multiversedeb src http mirrors.163 com ubuntu maverick proposed main restricted universe multiversedeb src http mirrors.163 com ubuntu maverick backports main restricted universe multiversedeb http archive ubuntu com ubuntu maverick main restricted universe multiversedeb http archive ubuntu com ubuntu maverick security main restricted universe multiversedeb http archive ubuntu com ubuntu maverick updates main restricted universe multiversedeb http archive ubuntu com ubuntu maverick proposed main restricted universe multiversedeb http archive ubuntu com ubuntu maverick backports main restricted universe multiversedeb src http archive ubuntu com ubuntu maverick main restricted universe multiversedeb src http archive ubuntu com ubuntu maverick security main restricted universe multiversedeb src http archive ubuntu com ubuntu maverick updates main restricted universe multiversedeb src http archive ubuntu com ubuntu maverick proposed main restricted universe multiversedeb src http archive ubuntu com ubuntu maverick backports main restricted universe multiverseo lupa 速度 开源 社区 deb http mirror lupaworld com ubuntu maverick main restricted universe multiversedeb http mirror lupaworld com ubuntu maverick security main restricted universe multiversedeb http mirror lupaworld com ubuntu maverick updates main restricted universe multiversedeb http mirror lupaworld com ubuntu maverick backports main restricted universe multiversedeb http mirror lupaworld com ubuntu maverick proposed main restricted universe multiversedeb src http mirror lupaworld com ubuntu maverick main restricted universe multiversedeb src http mirror lupaworld com ubuntu maverick security main restricted universe multiversedeb src http mirror lupaworld com ubuntu maverick updates main restricted universe multiversedeb src http mirror lupaworld com ubuntu maverick backports main restricted universe multiversedeb src http mirror lupaworld com ubuntu maverick proposed main restricted universe multiverse sohu deb http mirrors sohu com ubuntu maverick main restricteddeb src http mirrors sohu com ubuntu maverick main restricteddeb http mirrors sohu com ubuntu maverick updates main restricteddeb src http mirrors sohu com ubuntu maverick updates main restricteddeb http mirrors sohu com ubuntu maverick universedeb src http mirrors sohu com ubuntu maverick universedeb http mirrors sohu com ubuntu maverick updates universedeb src http mirrors sohu com ubuntu maverick updates universedeb http mirrors sohu com ubuntu maverick multiversedeb src http mirrors sohu com ubuntu maverick multiversedeb http mirrors sohu com ubuntu maverick updates multiversedeb src http mirrors sohu com ubuntu maverick updates multiverse 官方 ubuntu 10.10 保留 几个 用于 紧急 www linuxidc com 更新 deb http security ubuntu com ubuntu maverick security main restricteddeb src http security ubuntu com ubuntu maverick security main restricteddeb http security ubuntu com ubuntu maverick security universedeb src http security ubuntu com ubuntu maverick security universedeb http security ubuntu com ubuntu maverick security multiversedeb src http security ubuntu com ubuntu maverick security multiverse 注意 vi 命令 写入 模式 esc 退出 写入 模式 进入 命令 模式 wq 保存 退出 命令 dd 删除 删除 单个 字符 更新 apt get 安装 基本 编译 环境 sudo apt get updatesudo apt get install build essential 安装 djangowget http media djangoproject com releases 1.2 django 1.2 tar gz tar zxvf django 1.2 tar gzcd django 1.2 tar gzsudo python setup py install 部署 项目 项目 拷贝到 build script 2.6 安装 postgresql6.1 安装 数据库 sudo apt get install postgresql6.2 修改 linux 用户 postgres 密码 sudo passwd postgres6.3 修改 数据库 超级 用户 postgres 密码 6.3 切换 linux postgres 用户 sudo su postgres6.3 登录 postgres 数据库 psql postgres6.3 修改 密码 alter user postgres with password 新密码 6.4 添加 自定义 用户 数据库 6.4 添加 用户 修改 密码 create user 用户名 alter user 用户名 with password 新密码 6.4 创建 属于 自定义 用户 数据库 create database 数据库 owner 用户名 6.4 查询数据库 和表 以及 用户 select from pg database select from pg user select from pg tables 退出 退出 postgres 用户 模式 exit6.5 修改 etc postgresql 8.4 main pg hba conf 配置文件 md5 trustsudo vi etc postgresql 8.4 main pg hba conflocal trusthosts trust6.6 重启 postgressudo etc init postgresql 8.4 restart 修改 项目 相应 settings py 文件 databases default engine django db backends postgresql psycopg2 add postgresql psycopg2 postgresql mysql sqlite3 or oracle name 数据库 or path to database file if using sqlite3 user 数据库 所有者 用户名 not used with sqlite3 password 数据库 所有者 密码 not used with sqlite3 host set to empty string for localhost not used with sqlite3 port set to empty string for default not used with sqlite3 安装 psycopg2 驱动程序 8.1 安装 相关 sudo apt get install python devsudo apt get install libpq dev 8.2 下载 安装 psycopg2wget http initd org psycopg tarballs psycopg2 2.2 tar gztar zxvf psycopg2 2.2 tar gzcd psycopg2 2.2 2sudo python setup py install 安装 nginx 配置 9.1 安装 最新 nginx 版本 sudo su echo deb http ppa launchpad net nginx stable ubuntu lucid main etc apt sources listapt key adv -- keyserver keyserver ubuntu com -- recv keys c300ee8capt get updateapt get install nginxsudo apt get install python flup9.2 配置 nginx 配置文件 sudo vi etc nginx nginx conf http 节中 加入 server listen 80 server name ourscopee com www ourscopee com location fastcgi pass 127.0 0.1 8080 转发 8080 端口 信息 fastcgi param path info fastcgi script name fastcgi param request method request method fastcgi param query string query string fastcgi param content type content type fastcgi param content length content length fastcgi pass header authorization fastcgi intercept errors off fastcgi param server protocol server protocol fastcgi param server port server port fastcgi param server name server name location media alias home lynne django 1.2 django contrib admin media lynne 注意 django 静态 文件 路径 9.3 重启 nginxsudo etc init postgresql restart 10 测试 测试 django 数据库 python manage py syncdb2 测试 django 本身 webserverpython manage py runserver 绑定 ip 地址 绑定 端口号 测试 django nginx fastcgi 模式 配合 开启 nginx 服务 sudo etc init nginx start 开启 django fastcgi 模式 8080 端口 11 测试 http 服务器 ip todo memcache 加入 配置 进行 并发 测试 配置 完全 掌握 优化 尤其 fastcgi 配置
970,PHP开发者最好的学习资源收集,php 开发者 最好 学习 资源 收集 以下内容 翻译 phpbuilder com php developer resources 文章 资源 全为 英文 资料 不过 英文 很多 文章 确实 非常 当今 php 开发 web 应用程序 流行 脚本语言 之一 由此 可以 发现 internet com 非常 php 资源 以下 我们 一些 最好 php 资源 包括 一些 特色 教程 一些 可能 知道 离线 资源 internet com php 版块 developer com php 版块 scriptsearch com php 版块 devx com php 版块 htmlgoodies com php 版块 databasejournal com php 功能性 文章 webreference com php 版块 phpbuilder com 论坛 phpbuilder com 文章 列表 phpbuilder com php 手册 phpbuilder com 代码 片段 hotscripts com 特色 php 教程 学习 php 使用 php 处理 文件 php 介绍 怎样 使用 php mysql 实现 搜索 功能 php 继承 怎样 sql 数据库 直接 存储 图片 php php 作为 一种 shell 脚本语言 使用 php 发邮件 时候 怎样 防止 垃圾邮件 离线 资源 php 官方 文档 zend 引擎 phpdeveloper php weblog 确实 一些 资源 这些 关键词 可以 作为 搜索引擎 搜索 另外 internet com php 模块 文章 真的 不错 其他 一些 资源 http www.9 lessons info http phpacademy org
1001,对Django框架架构和Request/Response处理流程的分析,django 框架 架构 request response 处理 流程 分析 处理过程 核心 概念 如下 所示 django 总览 整体 把握 以下 django 组成 核心 在于 中间件 middleware django 所有 请求 返回 中间件 完成 中间件 就是 处理 http request response 类似 插件 比如 request 中间件 view 中间件 response 中间件 exception 中间件 middleware 需要 project settings py middleware classes 定义 大致 程序 流程图 如下 所示 首先 middleware 需要 project settings py middleware classes 定义 一个 http 请求 这里 指定 中间件 从头到尾 处理 一遍 暂且 这些 需要 挨个 处理 中间件 处理 如果 链中 某个 处理器 处理 没有 返回 response 请求 传递 一个 处理器 如果 链中 某个 处理器 返回 response 直接 跳出 处理 response 中间件 处理 返回 客户端 可以 称之为 短路 处理 中间件 方法 django 处理 一个 request 过程 首先 通过 中间件 然后 通过 默认 url 方式 进行 我们 可以 middleware 这个 地方 所有 request 拦截 我们 自己 方式 完成 处理 以后 直接 返回 response 因此 了解 中间件 构成 非常 必要 initializer __ init __ self 出于 性能 考虑 每个 启用 中间件 每个 服务器 进程 初始化 一次 也就是说 __ init __ 服务 进程 启动 时候 调用 针对 单个 request 处理 执行 一个 middleware 而言 定义 __ init __ 方法 通常 原因 检查 自身 必要性 如果 __ init __ 抛出 异常 django core exceptions middlewarenotused django middleware 栈中 移出 middleware 中间件 定义 __ init __ 方法 除了 标准 self 参数 之外 定义 任何 其它 参数 request 预处理 函数 process request self request 这个 方法 调用 时机 django 接收 request 之后 解析 url 确定 应当 运行 view 之前 django 传入 相应 httprequest 对象 以便 方法 修改 process request 应当 返回 none httpresponse 对象 如果 返回 none django 继续 处理 这个 request 执行 后续 中间件 然后 调用 相应 view 如果 返回 httpresponse 对象 django 不再 执行 任何 其它 中间件 无视 种类 以及 相应 view django 立即 返回 httpresponse view 预处理 函数 process view self request callback callback args callback kwargs 这个 方法 调用 时机 django 执行 request 预处理 函数 确定 执行 view 之后 view 函数 实际 执行 之前 requesthttprequest 对象 callback django 调用 处理 request python 函数 这是 实际 函数 对象 本身 不是 字符串 表述 函数 args 传入 view 位置 参数 列表 包括 request 参数 通常 传入 view 第一个 参数 kwargs 传入 view 关键字 参数 字典 如同 process request process view 应当 返回 none httpresponse 对象 如果 返回 none django 继续 处理 这个 request 执行 后续 中间件 然后 调用 相应 view 如果 返回 httpresponse 对象 django 不再 执行 任何 其它 中间件 不论 种类 以及 相应 view django 立即 返回 response 处理函数 process response self request response 这个 方法 调用 时机 django 执行 view 函数 生成 response 之后 处理器 修改 response 内容 一个 常见 用途 内容 压缩 gzip 请求 html 页面 这个 方法 参数 相当 直观 request request 对象 response 是从 view 返回 response 对象 process response 必须 返回 httpresponse 对象 这个 response 对象 可以 传入 函数 一个 原始 对象 通常 修改 可以 全新 生成 exception 处理函数 process exception self request exception 这个 方法 只有 request 处理过程 中出 问题 并且 view 函数 抛出 一个 捕获 异常 时才 调用 这个 钩子 可以 用来 发送 错误 通知 现场 相关 信息 输出 日志 文件 或者 甚至 尝试 错误 自动 恢复 这个 函数 参数 除了 一贯 request 对象 之外 包括 view 函数 抛出 实际 异常 对象 exception process exception 应当 返回 none httpresponse 对象 如果 返回 none django 框架 内置 异常 处理 机制 继续 处理 相应 request 如果 返回 httpresponse 对象 django 使用 response 对象 短路 框架 内置 异常 处理 机制 以下 几章 详细 介绍 机制 django 目录 结构 conf 主要 两个 作用 处理 全局 配置 比如 数据库 加载 应用 middleware 处理 urls 配置 就是 url view 映射 关系 contrib 贡献 django 开发者 贡献 功能模块 不过 既然 已经 版本 发布 表示 官方 coredjango 核心 处理 包括 url 分析 处理 请求 缓存 其中 处理 请求 核心 比如 处理 fastcgi 就是 wsgi py 处理 db 顾名思义 处理 数据库 相关 就是 orm dispatch 分派 派遣 其实 不是 django 原创 pydispatch 主要 消费者 工作者 模式 forms && newforms && oldforms 处理 html 表单 不用 介绍 middleware 中间件 就是 处理 http request response 类似 插件 默认 common 中间件 一个 功能 一个 页面 没有 对应 pattern 自定 加上 重新处理 比如 访问 blog 定义 pattern blog 所以 不到 对应 pattern 自动 再用 blog 查找 当然 前提 append slash true templatedjango 模板 templatetags 处理 application tag wrapper 就是 installed apps 所有 templatetags 目录 添加 django templatetags 目录 使用 load blog 记载 tag 可以 使用 import django templatetags blog 方式 加载 不过 这有 一个 问题 如果 其他 application 目录 blog py 这会 加载 第一个 出现 blog py tag 其实 django 许多 需要 处理 重名 地方 比如 template 需要 格外 小心 这个 后续 介绍 utils 公共 很多 公用 放在 这里 views 基本 view 方法 django 术语 应用 django 时候 我们 经常 听到 一些 术语 project 一个 完整 web 服务 一般 多个 模块 组成 application 可以 理解 模块 比如 用户 管理 博客 管理 包含 数据 组成 数据 显示 applicaiton 需要 project settings py installed apps 定义 middleware 就是 处理 request response 插件 middleware 需要 project settings py middleware classes 定义 loader 模板 加载 其实 就是 为了 读取 template 文件 默认 通过 文件系统 加载 application templates 目录 加载 loader 需要 project settings py template loaders 定义 处理 流程 其实 其他 web 框架 一样 http 处理 流程 大致相同 django 处理 一个 request 过程 首先 通过 中间件 然后 通过 默认 url 方式 进行 我们 可以 middleware 这个 地方 所有 request 拦截 我们 自己 方式 完成 处理 以后 直接 返回 response 加载 配置 django 配置 project settings py 定义 可以 django 配置 可以 自定义 配置 并且 通过 django conf settings 访问 非常 方便 启动 核心 动作 通过 django core management commands runfcgi command 启动 运行 django core servers fastcgi runfastcgi runfastcgi 使用 flup wsgiserver 启动 fastcgi wsgiserver 携带 django core handlers wsgi wsgihandler 一个 实例 通过 wsgihandler 处理 web 服务器 比如 apache lighttpd 传过来 请求 时才 真正 进入 django 世界 处理 request 当有 http 请求 来时 wsgihandler 开始 工作 basehandler 继承 wsgihandler 每个 请求 创建 一个 wsgirequest 实例 wsgirequest 是从 http httprequest 继承 接下来 开始 创建 response 创建 responsebasehandler get response 方法 就是 根据 request 创建 response 具体 生成 response 动作 就是 执行 urls py 对应 view 函数 django 可以 处理 友好 url 关键步骤 每个 这样 函数 返回 一个 response 实例 此时 一般 做法 通过 loader 加载 template 生成 页面 其中 重要 就是 通过 orm 技术 数据库 取出 数据 渲染 template 从而 生成 具体 页面 处理 responsedjango 返回 response flup flup 取出 response 内容 返回 web 服务器 后者 返回 浏览器 总之 django fastcgi 主要 两件事 处理 request 创建 response 它们 对应 核心 就是 urls 分析 模板 技术 orm 技术 如图所示 一个 http 请求 首先 转化成 一个 httprequest 对象 然后 对象 传递 request 中间件 处理 如果 中间件 返回 response 直接 传递 response 中间件 收尾 处理 否则 的话 request 中间件 访问 url 配置 确定 哪个 view 处理 确定 哪个 view 执行 但是 没有 执行 view 时候 系统 request 传递 view 中间件 处理器 进行 处理 如果 中间件 返回 response 那么 response 直接 传递 response 中间件 进行 后续 处理 否则 执行 确定 view 函数 处理 返回 response 这个 过程 如果 引发 异常 抛出 exception 中间件 处理器 进行 处理 详细 流程 一个 request 到达 首先 发生 一些 django 有关 前期 准备 其他 事情 分别 如果 apache mod python 提供 服务 request mod python 创建 django core handlers modpython modpythonhandler 实例 传递 django 如果 其他 服务器 必须 兼容 wsgi 这样 服务器 创建 一个 django core handlers wsgi wsgihandler 实例 两个 继承 django core handlers base basehandler 包含 任何 request 来说 需要 公共 代码 一个 处理器 handler 上面 其中 一个 处理器 实例 化后 紧接着 发生 一系列 事情 这个 处理器 handler 导入 django 配置文件 这个 处理器 导入 django 自定义 异常 这个 处理器 调用 自己 load middleware 方法 加载 所有 middleware classes middleware 并且 内省 它们 最后 一条 有点 复杂 我们 仔细 瞧瞧 middleware 可以 渗入 处理过程 四个 阶段 request view response exception 做到 一点 需要 定义 指定 恰当 process request process view process response process exception middleware 可以 定义 其中 任何 一个 所有 这些 方法 这取 决于 想要 提供 什么样 功能 处理器 内省 middleware 查找 上述 名字 方法 建立 四个 列表 作为 处理器 实例 变量 request middleware 一个 保存 process request 方法 列表 情况 它们 真正 方法 可以 直接 调用 这些 方法 来自 于任 一个 它们 middleware view middleware 一个 保存 process view 方法 列表 这些 方法 来自 于任 一个 定义 它们 middleware response middleware 一个 保存 process response 方法 列表 这些 方法 来自 于任 一个 定义 它们 middleware exception middleware 一个 保存 process exception 方法 列表 方法 来自 于任 一个 定义 它们 middleware 绿灯 现在 开始 现在 处理器 已经 准备 真正 开始 处理 因此 调度 程序 发送 一个 信号 request started django 内部 调度 程序 允许 各种 不同 组件 声明 它们 正在 什么 可以 一些 代码 监听 特定 事件 关于 一点 目前 没有 官方 文档 wiki 一些 注释 接下来 实例 一个 django http httprequest 子类 根据 不同 处理器 可能 django core handlers modpython modpythonrequest 一个 实例 可能 django core handlers wsgi wsgirequest 一个 实例 需要 两个 不同 mod python wsgi apis 不同 格式 传入 request 信息 这个 信息 需要 解析 django 能够 处理 一个 单独 标准 格式 一旦 一个 httprequest 或者 类似 东西 存在 处理器 调用 自己 get response 方法 传入 这个 httprequest 作为 唯一 参数 这里 就是 几乎 真正 活动 发生 地方 middleware 第一 回合 get response 第一件 就是 遍历 处理器 request middleware 实例 变量 调用 其中 一个 方法 传入 httprequest 实例 作为 参数 for middleware method in self ._ request middleware response middleware method request if response break 这些 方法 可以 短路 剩下 处理 立即 get response 返回 通过 返回 自身 一个 如果 它们 这样 返回值 必须 django http httpresponse 一个 实例 后面 会讨 如果 其中 之一 这样 我们 立即 回到 处理器 代码 get response 不会 其它 middleware 想要 什么 直接 返回 然后 处理器 进入 response 阶段 然而 一般 情况 这里 应用 middleware 方法 简单 一些 处理 决定 是否 增加 删除 补充 request 属性 关于 解析 假设 没有 一个 作用 request middleware 直接 返回 response 处理器 步会 尝试 解析 请求 url 配置文件 寻找 一个 叫做 root urlconf 这个 配置 加上 url 作为 参数 创建 django core urlresolvers regexurlresolver 一个 实例 然后 调用 resolve 方法 解析 请求 url 路径 url resolver 遵循 一个 相当 简单 模式 对于 url 配置文件 根据 root urlconf 配置 产生 一个 urlpatterns 列表 条目 它会 检查 url 路径 是否 这个 目的 正则表达式 相匹配 如果 的话 两种 选择 如果 这个 条目 一个 可以 调用 include resolver 截取 匹配 url include 指定 url 配置文件 开始 遍历 其中 urlpatterns 列表 一个 条目 根据 url 深度 模块性 可能 重复 几次 否则 resolver 返回 三个 条目 匹配 条目 指定 view function 一个 url 得到 未命名 匹配 用来 作为 view 位置 参数 一个 关键 参数 字典 url 得到 任意 命名 匹配 组和 urlconf 得到 其它 关键字 参数 组合而成 注意 这一 过程 匹配 第一个 指定 view 条目 停止 因此 最好 url 配置 复杂 正则 过渡 简单 正则 这样 确保 resolver 不会 首先 匹配 简单 一个 返回 错误 view function 如果 没有 找到 匹配 条目 resolver 产生 django core urlresolvers resolver404 异常 django http http404 子类 后面 我们 知道 如何 处理 middleware 第二 回合 一旦 知道 view function 相关 参数 处理器 查看 view middleware 列表 调用 其中 方法 传入 httprequst view function 针对 这个 view 位置 参数 列表 关键字 参数 字典 apply view middlewarefor middleware method in self ._ view middleware response middleware method request callback callback args callback kwargs if response break 还有 middleware 可能 介入 这一 阶段 强迫 处理器 立即 返回 进入 view 如果 处理过程 这时候 继续 的话 处理器 调用 view function django views 严格 因为 需要 满足 几个 条件 必须 可以 调用 必须 接受 django http httprequest 实例 作为 第一位 参数 必须 产生 一个 异常 返回 django http httpresponse 一个 实例 除了 这些 可以 天马行空 尽管如此 一般来说 views 使用 django database api 创建 检索 更新 删除 数据库 某些 东西 还会 加载 一个 模板 呈现 一些 东西 最终用户 模板 django 模板 系统 两个 部分 一部分 设计师 使用 混入 少量 其它 东西 html 一部分 程序员 使用 python 一个 html 作者 角度 django 模板 系统 非常简单 需要 知道 三个 结构 变量 引用 模板 中是 这样 foo 模板 过滤 上面 例子 使用 过滤 竖线 这样 foo bar 通常 用来 格式化 输出 比如 运行 textile 格式化 日期 等等 模板 标签 这样 baz 这是 模板 逻辑 实现 地方 可以 if foo for bar in foo 等等 if for 模板 标签 变量 引用 一种 非常简单 方式 工作 如果 只是 打印 变量 只要 foo 模板 系统 输出 这里 唯一 复杂 情况 foo bar 这时 模板 顺序 尝试 几件事 首先 尝试 一个 字典 方式 查找 看看 foo bar 是否 存在 如果 存在 输出 这个 过程 随之 结束 如果 字典 查找 失败 模板 系统 尝试 属性 查找 看看 foo bar 是否 存在 检查 这个 属性 是否 可以 调用 如果 可以 调用 如果 属性 查找 失败 模板 系统 尝试 作为 列表 索引 进行 查找 如果 所有 这些 失败 模板 系统 输出 配置 template string if invalid 默认 字符串 模板 过滤 就是 简单 python functions 接受 一个 一个 参数 返回 一个 比如 date 过滤 一个 python datetime 对象 作为 一个 标准 strftime 格式化 字符串 作为 参数 返回 datetime 对象 应用 格式化 字符 之后 结果 模板 标签 事情 一点点 复杂 地方 了解 django 模板 系统 如何 真正 工作 地方 django 模板 结构 内部 一个 django 模板 体现 一个 nodes 集合 它们 是从 基本 django template node 继承 nodes 可以 各种 处理 一个 共同点 一个 node 必须 一个 叫做 render 方法 接受 第二个 参数 第一个 显然 node 实例 django template context 一个 实例 这是 一个 似于 字典 对象 包含 所有 模板 可以 获得 变量 node render 方法 必须 返回 一个 字符串 如果 node 工作 不是 输出 比如 通过 增加 删除 或修 传入 context 实例 变量 变量 修改 模板 上下文 可以 返回 字符串 django 包含 许多 node 子类 提供 有用 功能 比如 每个 内置 模板 标签 一个 node 子类 处理 比如 ifnode 实现 if 标签 fornode 实现 for 标签 等等 所有 内置 标签 可以 django template defaulttags 找到 实际上 上面 介绍 所有 模板 结构 某种 形式 nodes 文本 异常 查找 variablenode 处理 出于 自然 过滤 应用 variablenode 签是 各种类型 nodes 文本 一个 textnode 一般来说 一个 view 渲染 一个 模板 经过 下面 步骤 依次 加载 需要 渲染 模板 django template loader get template 利用 许多 方法 任意 一个 定位 需要 模板 文件 get template 函数 返回 一个 django template template 实例 其中 包含 经过 解析 模板 用到 方法 实例 一个 context 用来 渲染 模板 如果 context 子类 django template requestcontext 那么 附带 上下文 处理函数 自动 view 没有 定义 变量 context 构建 方法 一个 对于 模板 变为 变量 作为 唯一 参数 requestcontext httprequest 一个 实例 一个 字典 调用 template 实例 render 方法 context 对象 作为 第一个 位置 参数 template render 方法 返回值 一个 字符串 template 所有 nodes render 方法 返回 连接 而成 调用 顺序 它们 出现 template 顺序 关于 response 一点点 一旦 一个 模板 完成 渲染 或者 产生 其它 某些 合适 输出 view 负责 产生 django http httpresponse 实例 构建 接受 两个 可选 参数 一个 作为 response 主体 字符串 应该 第一 位置 参数 或者 关键字 参数 content 大部分 时间 作为 渲染 一个 模板 输出 不是 必须 这样 这里 可以 传入 任何 有效 python 字符串 response content type header 应该 第二 位置 参数 或者 关键字 参数 mine type 如果 没有 提供 这个 参数 django 将会 配置 default mime type default charset 如果 没有 django 全局 配置文件 更改 它们 的话 分别 text html utf middleware 第三 回合 异常 如果 view 函数 或者 其中 什么 东西 发生 异常 那么 get response 我知 我们 已经 时间 深入 views templates 但是 一旦 view 返回 产生 异常 我们 重拾 处理器 中间 get response 方法 遍历 exception middleware 实例 变量 调用 那里 每个 方法 传入 httpresponse 这个 exception 作为 参数 如果 顺利 这些 方法 一个 实例 一个 httpresponse 返回 仍然 没有响应 这时候 可能 还是 没有 得到 一个 httpresponse 可能 几个 原因 view 可能 没有 返回值 view 可能 产生 异常 没有 一个 middleware 处理 一个 middleware 方法 试图 处理 一个 异常 自己 产生 一个 异常 这时候 get response 回到 自己 异常 处理 机制 它们 几个 层次 如果 exception http404 并且 debug 设置 true get response 执行 view django views debug technical 404 response 传入 httprequest exception 作为 参数 这个 view 展示 url resolver 试图 匹配 模式 信息 如果 debug false 并且 异常 http404 get response 调用 url resolver resolve 404 方法 这个 方法 查看 url 配置 判断 一个 view 指定 用来 处理 404 错误 默认 django views defaults page not found 可以 url 配置 handler404 变量 赋值 更改 对于 任何 其它 类型 异常 如果 debug 设置 true get response view django views debug technical 500 response 传入 httprequest exception 作为 参数 这个 view 提供 关于 异常 详细 信息 包括 traceback 一个 层次 stack 本地 变量 httprequest 对象 详细描述 所有 无效 配置 列表 如果 debug false get response 调用 url resolver resolve 500 方法 resolve 404 方法 非常 相似 这时 默认 view django views defaults server error 可以 url 配置 handler500 变量 赋值 更改 此外 对于 除了 django http http404 python 内置 systemexit 之外 异常 处理器 调度 发送 信号 got request exception 返回 之前 一个 关于 异常 描述 发送给 django 配置文件 admins 配置 一个 middleware 最后 回合 现在 无论 get response 一个 层次 发生 错误 返回 一个 httpresponse 实例 因此 我们 回到 处理器 主要 部分 一旦 获得 一个 httpresponse 第一件 就是 遍历 response middleware 实例 变量 应用 那里 方法 传入 httprequest httpresponse 作为 参数 finally reset urlconf for this thread on the way out for complete isolation of request urlconfurlresolvers set urlconf none try apply response middleware regardless of the responsefor middleware method in self ._ response middleware response middleware method request response response self apply response fixes request response 注意 对于 任何 改变 什么 middleware 来说 这是 它们 最后 机会 the check is in the mail 结束 时候 一旦 middleware 完成 最后 环节 处理器 调度 发送 信号 request finished 当前 request 执行 任何 东西 来说 绝对 最后 调用 监听 这个 信号 处理 清空 释放 任何 使用 资源 django request finished 监听 关闭 所有 数据库 连接 这件 发生 以后 处理器 构建 一个 合适 返回值 送返 实例 化它 任何 东西 现在 一个 恰当 mod python response 或者 一个 wsgi 兼容 response 取决于 处理器 返回 呼呼 结束 开始 结束 就是 django 如何 处理 一个 request
1005,Django关于站点管理Admin Site的常见问题解决方法,django 关于 站点 管理 admin site 常见问题 解决 方法 改变 django 默认 语言 方法 添加 django middleware locale localemiddlewar middleware classes 设置 确保 django contrib sessions middleware sessionmiddleware 之后 怎样 已有 models 加入 admin 管理 问题 实例 演示 假如 有个 app 叫做 books app 包里 包含 模块 publisher author book 以下 三个 模块 添加 admin 管理 步骤 books 目录 mysite books 创建 一个 文件 admin py admin py 输入 以下 代码 from django contrib import adminfrom mysite books models import publisher author book 以下 实现 模块 添加 后台 管理 admin site register publisher admin site register author admin site register book 重启 服务器 刷新 后台 界面 比如 http 127.0 0.1 8000 admin 发现 添加 成功 为什么 admin site register 注册 模块 后台 无法 显示 admin 后台 管理 模块 第一步 执行 autodiscover 函数 函数 根据 settings installed apps 逐个 处理 每个 模块 注册 模块 无法 生效 肯定 是因为 没有 模块 添加 配置文件 installed apps 以下 autodiscover 关于 注册 模块 部分 代码 for app in settings installed apps mod import module app attempt to import the app admin module try before import registry copy copy site ._ registry import module admin app 为什么 没有 admin py 后台 默认 显示 auth groups users 两个 模块 是因为 我们 installed apps 增加 django contrib auth 选项 admin autodiscover 查找 admin py2 django 源码 django contrib auth 里面 我们 找到 admin py 并且 里面 刚好 注册 groups users 两个 模块 代码 admin site register group groupadmin admin site register user useradmin 比如 后台 默认页 显示 sites 模块 找到 contrib sites 可以 发现 admin py 以下 内容 from django contrib import adminfrom django contrib sites models import siteclass siteadmin admin modeladmin list display domain name search fields domain name admin site register site siteadmin 其实 不难 发现 contrib 里面 大部分 自含 admin py 文件 也就是说 只要 installed apps 添加 目录 某个 后台 能够 进行 管理 怎样 某个 单字 可选 填写 想要 哪个 字段 可选 填写 model 选项 括号 加上 blank true 即可 如下 所示 class author models model first name models charfield max length 30 last name models charfield max length 40 email models emailfield blank true 所有 默认 blank false 所以 必填 不能 为空 设置 日期 数字型 字段 可选 方法 django 生成 create table 语句 自动 每个 字段 显式 加上 not null 管理工具 如果 留空 一个 字符 它会 为此 插入 一个 字符串 不是 null 但是 其它 数据类型 例外 日期 时间 数字型 字段 接受 字符串 如果 允许 一个 日期 datefield timefield datetimefield 数字型 integerfield decimalfield floatfield 字段 需要 使用 null true blank true class book models model title models charfield max length 100 authors models manytomanyfield author publisher models foreignkey publisher publication date models datefield blank true null true 因为 null true 改变 数据 语义 改变 create table 语句 publication date 字段 not null 删除 完成 这些 改动 我们 需要 更新 数据库 怎样 更改 表单 中字 说明 文字 编辑 页面 每个 字段 标签 是从 模块 字段名 生成 然而 字段名 总是 贴切 有些 情况 可能 自定义 一个 标签 模块 指定 verbose name class author models model first name models charfield max length 30 last name models charfield max length 40 email models emailfield blank true verbose name mail modeladmin 干什么 blank true null true verbose name 修改 其实 模块 级别 不是 管理 级别 也就是说 这些 修改 实质 构成 模块 一部分 并且 正好 管理工具 使用 不是 专门 针对 管理工具 django 提供 大量 选项 针对 特别 模块 自定义 管理工具 这些 选项 modeladmin classes 里面 这些 包含 管理工具 针对 特别 模块 配置 怎样 自定义 后台 管理 列表 页面 代码 解释 怎样 自定义 列表 页面 class authoradmin admin modeladmin 列表 列表 顶部 显示 字段名 list display first name last name email 列表 出现 搜索 参数 搜索 search fields first name last name 右侧 出现 过滤器 根据 类型 过滤器 显示 过滤 选项 list filter publication date 页面 列表 顶端 一个 逐层 深入 导航条 逐步 迭代 选项 date hierarchy publication date 自然 排序 所用 减号 代表 降序 排列 ordering publication date author 模块 管理 绑定 一起 注册 后台 管理 admin site register author authoradmin 10 怎样 自定义 编辑 后台 管理 表单 页面 以下 显示 怎样 自定义 表单 编辑 页面 显示 注意 列表 一个 admin 内部 class bookadmin admin modeladmin ## 这里 可以 一些 列表 页面 自定义 选项 ## 以下 表单 编辑 页面 自定义 选项 表单 编辑 页面 显示 顺序 如果 没有 某个 选项 不会 显示 fields title authors publisher publication date 设定 表单 中该 选项 变成 一个 js 动态 选择 选择 就是 左右 两列 左边 选择 右边 显示 选中 内容 强烈建议 针对 那些 拥有 十个 以上 选项 使用 filter horizontalfilter horizontal authors 用于 外键 并且 外键 超级 时候 一个 包含 外键 字段名 元组 包含 展现 文本框 不再 下拉框 raw id fields publisher
1014,使用PHP连接、操纵Memcached的原理和教程,使用 php 连接 操纵 memcached 原理 教程 memcahced 开源 分布式 内存 对象 缓存 系统 通过 减少 数据库 负担 从而 能够 加速 web 应用 本文 解释 怎样 实现 一个 基于 memcahced 缓存 系统 数据库 实例 使用 数据库 包含 一个 自增 id 一个 标题 一个 链接 create table demos id int primary key auto increment title varchar 300 link varchar 300 第一次 用户 请求 到达 第一次 用户 发送 请求 php 程序 访问 db 数据库 同时 访问 数据 写入 memcached 系统 如图所示 user 发送 req 请求 application 发送数据 请求 database database 数据 返回 application 同时 数据 缓存 memcached 服务器 第二次 用户 请求 到达 第二次 用户 请求 到达 直接 读取 memcached 服务器 缓存 不是 数据库 内容 从而 减轻 服务器 负担 本图 显示 第二次 请求 application 直接 memcached 简称 mc 读取数据 memcached 安装 方法 网络 大量 关于 memcached 安装 方法 其实 就是 一个 缓存 服务器应用程序 意思 像是 mysql 一样 装好 账号密码 ip地址 一下 使用 以下 一些 资源 php memcache dll windows 安装 memcached 方法 windows7 xampp 安装 memcached 方法 windows7 php5.3 安装 memcached 方法 index php php 操作 memcached 演示 phpinclude db php memcache new memcache memcache connect localhost 11211 or die could not connect 缓存 服务器 键值 这里 我们 设定 唯一 key md5 www crazyant net cache result array 根据 缓存 服务器 获取 cache result memcache get key 如果 存在 该键 对应 说明 缓存 存在 内容 if cache result 我们 直接 取出 缓存 内容 可以 demos result cache result else 如果 缓存 没有 该键 对应 数据 说明 请求 第一次 到达 首先 我们 需要 数据库 取出 该值 mysql query select from demos order by id desc while row mysql fetch array 取出 内容 就是 我们 需要 demos result row 最后 这次 数据库 取出 内容 放到 memcached 缓存 服务器 这里 就是 缓存 精髓 memcache set key demos result memcache compressed 1200 前面 所有 操作 最终 返回 我们 需要 数据 foreach demos result as row echo href row link row title db php 用于 连接 数据库 代码 需要 改变 代码 ip地址 用户名 密码 数据库 名字 php mysql hostname localhost mysql user username mysql password password mysql database database bd mysql connect mysql hostname mysql user mysql password or die opps some thing went wrong mysql select db mysql database bd or die opps some thing went wrong 本文 参考 memcached with php
1022,PHP对数组的高级遍历和操作处理方法,php 数组 高级 遍历 操作 处理 方法 php 数组 处理 可以 称为 语言 最有 吸引力 特性 之一 支持 70 多种 数组 相关 函数 不论 翻转 一个 数组 判断 某个 数组 是否 存在 数组 转换成 一个 字符串 还是 计算 数组 大小 仅仅 执行 一个 现有 函数 可以 完成 然而 一些 数组 相关 任务 开发者 要求 仅仅 知道 手册 某个 功能 不能 解决 这些 任务 需要 php 原始 特性 一些 深入 理解 需要 一些 解决问题 想象力 多维 关联 数组 排序 php 提供 一些 数组 排序 函数 比如 sort ksort asort 但是 没有 提供 多维 关联 数组 排序 比如 这样 数组 array array name chess price 12.99 array name checkers price 9.99 array name backgammon price 29.99 数组 按照 升序 排序 需要 自己 一个 函数 用于 比较 价格 然后 函数 作为 回调 函数 传递 usort 函数 实现 功能 function compareprice pricea priceb return pricea price priceb price usort games compareprice 执行 程序 片段 数组 排序 结果 如下 所示 array array name checkers price 9.99 array name chess price 12.99 array name backgammon price 29.99 数组 按照 降序 排序 compareprice 函数 里面 两个 调换 位置 可以 逆序 遍历 数组 php while 循环 for 循环 遍历 一个 数组 常用 方法 但是 怎样 遍历 下面 这个 数组 array array name board games array array name chess price 12.99 array name checkers price 9.99 php 标准 库中 一个 集合 迭代 iterators 不仅仅 能够 用于 遍历 一些 异构 数据结构 比如 文件系统 数据库 查询 结果 可以 一些 知道 大小 嵌套 数组 遍历 比如 上面 数组 遍历 可以 使用 recursivearrayiterator 迭代 进行 iterator new recursivearrayiterator games iterator apply iterator navigatearray array iterator function navigatearray iterator while iterator valid if iterator haschildren navigatearray iterator getchildren else printf iterator key iterator current iterator next 执行 该段 代码 给出 以下 结果 name boardname chessprice 12.99 name checkersprice 9.99 过滤 关联 数组 结果 假定 得到 如下 一个 数组 但是 仅仅 操作 价格 低于 11.99 元素 array array name checkers price 9.99 array name chess price 12.99 array name backgammon price 29.99 使用 array reduce 函数 可以 简单 实现 function filtergames game return game price 11.99 names array filter games filtergames array reduce 函数 过滤 满足 回调 函数 所有 元素 例子 回调 函数 就是 filtergames 任何 价格 低于 11.99 元素 留下 其他 剔除 代码段 执行 结果 array array name checkers price 9.99 对象 转换成 数组 一个 需求 就是 对象 转换成 数组 形式 方法 想象 简单 很多 仅仅 强制 转换 可以 例子 class game public name public price game new game game name chess game price 12.99 print array game 执行 例子 产生 如下 结果 array game object name chess price 12.99 对象 转换成 数组 出现 一些 不可 预料 副作用 比如 上面 代码段 所有 成员 变量 public 类型 但是 对于 private 私有 变量 返回 结果 变得 一样 下面 另外 一个 例子 class game public name private price public function setprice price this price price game new game game name chess game setprice 12.99 print array game 执行 代码 片段 array game object name chess price game private 12.99 正如 看到 为了 进行 区分 数组 保存 私有 变量 key 自动 改变 数组 自然 排序 php 对于 字母 数字 字符串 排序 结果 确定 举个 例子 假定 很多 图片 名称 存放 数组 arr array madden2011 png madden2011 png madden2011 png madden2012 png 怎样 这个 数组 进行 排序 如果 sort 数组 排序 结果 这样 array madden2011 png madden2011 png madden2011 png madden2012 png 有时候 就是 我们 想要 但是 我们 保留 原来 下标 怎么办 解决 问题 可以 使用 natsort 函数 函数 一种 自然 方法 数组 排序 php arr array madden2011 png madden2011 png madden2011 png madden2012 png natsort arr echo pre print arr echo pre 运行 结果 array madden2011 png madden2011 png madden2011 png madden2012 png 总结 延伸 php 数组 遍历 操作能力 确实 非常 强大 然而 一些 复杂 问题 解决 方法 不是 那么 明显 其实 任何 领域 这样 一个 语言 语法 提供 基本 操作 对于 复杂 问题 解决办法 需要 开发者 自己 思考 想象力 代码 编写 完成
1030,2012年百度、腾讯、微软、奇虎360、人人、去哪网找工作经历总结,2012 百度 腾讯 微软 奇虎 360 人人 哪网 工作 经历 总结 实习 遇到 挫折 2012 首战 开启 腾讯 百度 奇虎 360 微软 绿盟 科技 奔赴 西安 招聘 实习生 这是 初战 因为 没有 笔试 面试 经验 没有 知识 进行 针对性 复习 我输 很惨 先说 笔试 腾讯 笔试 通过 百度 笔试 奇虎 360 笔试 微软 因为 不想 英文简历 绿盟 科技 笔试 通过 腾讯 一面 非常 全面 网络操作系统 数据库 算法 当面 代码 不足 在于 代码 规范 面完 面试官 部门 这边 客户端 开发 一点 不会 然后 推荐 后台 开发 于是 后台 部门 继续 一面 这次 面试 因为 客户端 开发 感觉 不错 所以 有点 掉以轻心 面试官 看来 就是 心不在焉 结果 这次 面试 失败 一样 教训 如果 表现 一点点 心不在焉 面试 立马 失败 一样 教训 不要 面试官 自己 通过 回答 可能 虽然 综合 考虑 其实 显示 自信 腾讯 二面 霸面 告知 没有 可能 百度 没有 面试 机会 微软 没有 面试 机会 奇虎 360 没有 收到 面试 通知 霸面 阳光 暴晒 最后 还是 没能 一次 面试 机会 当时 感到 特别 郁闷 伤心 这么久 一个 面试 机会 公司 人性化 自身 原因 笔试 通过 就是 知识 准备 不足 下次 一定 注意 对于 霸面 来说 自己 不自在 公司 不是 欢迎 一样 教训 如果 笔试 重视 想要 用霸面 取得 面试 机会 成功 几率 极其 重视 笔试 绿盟 科技 笔试 中规中矩 比较 前面 奇虎 伤害 较大 后面 一些 复习 所以 通过 笔试 之后 进入 面试 面试官 c++ 人太多 不要 试试 web 可以 对于 web 大二 开始 接触 然后 很多 项目 了解 各种 技术 比如 html css js jquery json xml php jsp asp mysql 模版 缓存 框架 mvc 说起 web 我能 罗列 一大 面试 后来 实习 导师 主要 了解 哪些 实践 技术 表示满意 于是 接到 绿盟 实习 offer 绿盟 科技 实习 日子 绿盟 科技 一个 人性化 公司 文化 开发 多元化 员工 积极向上 奋发图强 做事 认真 一丝不苟 虽然 实习 这么 评价 第一次 接触 实际 工作 导师 总监 极大 自由 各种 技术培训 技术 指导 衣服 免费 饮料 聚餐 感到 工作 氛围 和谐 同时 学到 python django 实际 开发技术 后来 拿到 一些 其他 公司 offer 不可磨灭 作用 正规 战争 爆发 准备 为了 准备 月份 开始 正规 战争 主要 一下 一些 准备 创建 程序员 求职网 www.51 projob com 每天 关注 往年 笔试 面试题 实习 期间 本书 该书 后期 工作 帮助 可以 成为 奠基 基础 编程 珠玑 这是 一本 神书 里面 提到 一些 思想 甚至 任何 面试 提出 应用 大话 数据结构 部分 编程 之美 部分 深入 理解 计算机系统 指针 c++ primer 4th 数据结构 算法 分析 c语言 描述 部分 内容 凡是 看到 内容 笔试 面试 应用 所以 一分 努力 一分收获 一点 不差 月底 接触 本书 该书 面试 起到 决定性 作用 offer 本书 面试题 出发 几乎 涵盖 所有 可能 解决 思路 方法 尤其 里面 介绍 考察点 比如 代码 检查 指针 释放 空间 面试 突出 自己 发散 思维 联想 思维能力 等等 这些 简直 可以 成为 九阳 神功 之后 运用 屡试不爽 同学 本书 一直 就是 搜索引擎 拿来 觉得很有 意思 于是 从头到尾 一周 结果 后面 互联网 面试 本书 起到 很多 帮助 2012 15 正规 战争 开始 2012 10 15 正规 战争 基本 结束 15 开始 各大 名企 纷纷 上阵 百度 腾讯 微软 阿里 奇虎 人人 网美团 纷纷 驾临 西安 航天 科技 科工 研究所 纷纷 亮相 每天 从早到晚 各种 各种 赶场子 一次 上午 交大 参加 笔试 11 结束 一个 地方 参加 一个 面试 奔赴 一个 地方 参加 一个 面试 赶回 交大 参加 下午 一场 笔试 当时 下来 脚磨 两个 大泡 走路 一拐 一拐 对于 笔试 坚信 只要 自己 知道 想到 出来 一般 通过 对于 面试 开始 青涩 拘谨 紧张 慢慢 开始 放开 发散 微笑 自信 如果 15 附近 笔试 机会 面试 机会 一定 把握 哪怕 一个 很小 公司 一定 全力以赴 精神 应对 因为 练级 后面 发挥 极其重要 如果 取得 一个 offer 自信 开始 建立 之后 更加 充分 发挥 自己 能力 取得 更好 offer 哪网 中国 最大 旅游 酒店 订票 网站 2010 获得 百度 融资 近两年 急速 扩张 高速 发展 2012 全国 招聘 人数 庞大 之前 投了 简历 笔试 时候 后来 听说 给出 18w 薪水 极其 后悔 一个 朋友 还有 霸面 机会 二话没说 简历 那里 后台 人太多 不要 试试 web 前端 可以 试试看 面试官 和蔼 10 js 题目 忐忑不安 时候 面试官 这个 已经 不错 于是 两个 函数 一个 普通 字符串 处理 一个 ajax 调用 知道 出来 之后 二面 聊得 比较简单 以为 web 前端 貌似 非常 缺人 最后 得到 offer 这个 offer 极其 珍惜 因为 自己 第一个 证明 后面 面试 自信 底气 搜狗 同学 口中 相传 搜狗 发展 不错 公司 有王 小川 这样 优秀 产品 经理 前途 辉煌 然而 搜狗 面试 体验 不好 一面 很多 陌生 面试 算法 每次 绞尽脑汁 多角度 思考 勉强 给出 结果 后来 一些 web 开发 搜索 相关 知识 有所 弥补 二面 过程 简直 工作 结束 以来 惨痛 一次 经历 面试官 应该 处于 思想 领域 一位 算法 高手 问题 常理 出发 所有 自己 联想 发散 思考 最后 给出 结果 满意 总共 小时 错过 google 笔试 评价 很差 适合 算法 但是 开发 推荐 web 开发 部门 第二天 参加 web 开发 部门 一面 面试官 不问 框架 缓存 架构 原理 偏偏 喜欢 js 语法 细节 顿时 从头到尾 一下 无脑 人士 以为 搜狗 已经 希望 结果 10 20 左右 收到 搜狗 电话 准备 第二天 电话 面试 顿时 感觉 稍微 有点 信心 电话 面试 不少 实验室 研究 方向 自然语言 处理 相关 因为 自己 实验室 东西 不是 深入 所以 一些 东西 未能 明白 搜狗 通知 现在 说不定 还有 希望 百度 百度 面试 正规 考察 更加 深入 广度 并且 着重 算法 知识 基本功 一面 简直 可以 成为 算法 各种 面试题 纷至沓来 程序 不过 offeer 编程 珠玑 两本书 内功 修为 勉强 应付 下来 当然 一些 发散 题目 各个 角度 出发 给出 简单 答案 之后 开始 操作系统 数据库 linux 自己 考研 过来 所以 这些 记得 一些 一面 通过 二面 比较顺利 一次 面试 面试官 简历 web 经历 于是 讨论 python web 开发 apache tomcat java 一些 实践经验 面试官 厉害 阅读 django 代码 直接 提出 一个 关键性 问题 就是 django 请求 执行 流程 知道 这是 碰上 高手 因为 读过 源码 于是 老老实实 自己 知道 一些 面试官 微笑 一下 之后 一个 发散 问题 比如 比赛 怎样 选出 最终 冠军 开始 我用 归并 面试官 复杂 并且 奇数 怎么 处理 后来 想到 冒泡 反而 正确 三面 遇到 一个 感觉 舒服 谈吐 自信 感到 知识 渊博 一个 系统 设计 负载 均衡 redis 缓存 mysql 主从 同步 方面 进行 尝试 面试官 表示满意 最后 拿到 百度 offer 腾讯 笔试 稍微 有点 正规 因为 看到 很多 讨论 后来 收到 一面 通知 一面 时间 不是 很长 首先 自我介绍 时候 侧重 介绍 web 开发 经验 一些 实际 理解 然后 面试官 一些 http 原理 http header 大概 一下 c++ 面向对象 部分 知识 之后 一些 开发 经验 程序 结束 因为 我要 北京 并且 自己 坚信 一个 公司 总部 所以 二面 参加 人人 人人 其实 最近 几年 积聚 实力 招聘 人数 还是 很多 hr 美女 健谈 一面 时候 一些 了解 一个 网站 表示 赞赏 一面 顺利 因为 面试官 研究生 方向 一样 一下 自然语言 处理 相关 技术 然后 算法 之后 一些 c++ web 开发 基础知识 二面 面试官 一个 学校 聊得 很欢 但是 评价 面试题 其实 以前 做过 知道 答案 然而 要求 不要 书上 看到 因为 背下来 于是 各种 提示 新思路 角度 解决 最后 虽然 给出 方案 但是 时间 有点 表示 满意 之后 问题 了解 同校 学长 就让 建议 学长 很多 受益匪浅 工程 经验 比较 还是 机会 之后 收到 人人 offer 期间 很多 国企 比如 国家 工程 中心 航天 航天 航天 大唐电信 简历 并且 几个 参加 面试 尤其 航天 恒星 公司 参加 10 面试官 面试 一个 紧张 大型 面试 场面 大唐电信 面试官 聊得 非常 开心 等等 后来 因为 个人 比较 互联网 公司 没有 费心 微软 微软公司 气魄 实力 面试 时候 完美 表现 出来 国际化 富有 气度 气魄 显示 国际 公司 形象 一面 面试官 关注 性格 负责 态度 能力 特长 几乎 没问 技术 一直 自己 别人 地方 哪里 因为 这些 平时 没想 并且 别的 公司 问过 面试 完让 惊出 一身 冷汗 二面 面试官 非常 和蔼 面带微笑 题目 非常 广度 我答 一些 基本 概念 可能 因为 了解 比较 面试官 微笑 结束 最后 收到 三面 通知 竟然 英文 面试 因为 之前 从来 没有 人用 英文 交流 所以 紧张 面试 时候 一些 项目 问题 没能 解答 对于 一些 开放性 问题 语言 限制 思考 给出 方案 自己 感觉 说不出来 最后 三面 失败 当时 听到 这个 消息 沮丧 一下 因为 越到 后面 工作 对于 每个 公司 既然 投了 就会用 百分之百 精力 应对 失败 结果 感觉 不是 不过 之间 确实 锻炼 不少 能力 尤其 英文 面试 毕竟 噼里啪啦 小时 之后 几天 每天 路上 蹦出 英文单词 一下 感觉 英语 心理 战胜 最后 回顾 现在 基本上 互联网 公司 已经 结束 简单 回顾 一下 以下 一些 经验 教训 一定 重视 笔试 面试 一定 微笑 多用 手势 自信 真正 思考 发散 思维 快速 回答 准备 复习 看书 可以 任何 看到 知识 面试 笔试 遇到 针对性 如果 不想 深圳 不要 那边 公司 精力 放到 目标 一旦 有个 目标 所有 精力 能量 应对 今天 博客园 一篇 文章 题目 一个 面试官 眼里 校园 招聘 写给 求职 心切 应届 毕业生 感觉 于是 以下 回复 总结 期间 路程 终于 工作 整个 过程 真是 惊险刺激 紧张 遇到 面试官 不错 感觉 出来 想要 多方面 了解 代码 算法 思维 敏捷 知识 宽度 等等 公司 比较 综合 比如 设计 思路 整体 把握 公司 比较 具体 比如 特定 语言 语法 每次 面试 必定 自己 伪装 一下 早上 起来 个头 照镜子 整理 整理 衣服 路上 深呼吸 10 我能 成功 电梯 不停 自己 打气 简历 面试官 打招呼 微笑 回答 问题 看着 对方 眼睛 多用 手势 解释 对于 问题 表现 深究 气馁 思考 时候 做出 思考 样子 出新 点子 时候 要说 哎呀 想到 一个 新思路 等等 这是 一个 博弈 过程 一个 pk 过程 想要 什么样 变成 什么样 自己 知道 什么样 变成 需要 一定 伪装
1036,Django基本命令最全收集,django 基本 命令 最全 收集 django 一个 python 用于 快速 开发 web 应用 框架 很多 特性 使用 极其 方便快捷 创建 一个 django 项目 项目 进行 管理 时候 涉及 很多 命令行 命令 本文 进行 一些 总结 以供 方便 查询 django admin py startproject mysite 命令 当前目录 创建 一个 mysite 目录 django admin py 这个 文件 python27 lib site packages django bin 文件夹 可以 目录 添加 系统 path 里面 django 内置 一个 轻量级 web 服务器 进入 mysite 目录 的话 现在 进入 其中 运行 python manage py runserver 命令 启动 服务器 http 127.0 0.1 8000 可以 进行 浏览 8000 默认 端口号 python manage py runserver 8080 更改 服务器端 口号 python manage py shell 启动 交互 界面 python manage py startapp books 创建 一个 app 名为 books python manage py validate 验证 django 数据模型 代码 是否 错误 python manage py sqlall books 模型 产生 sql 代码 python manage py syncdb 运行 sql 语句 创建 模型 相应 table python manage py dbshell 启动 数据库 命令行 工具 manage py sqlall books 查看 books 这个 app 所有 python manage py syncdb 同步 数据库 生成 管理 界面 使用 额外 数据库
1044,织梦DEDECMS简洁蓝色模板免费下载（资讯文章类）,织梦 dedecms 简洁 蓝色 模板 免费 下载 资讯 文章 模板 信息 模板 一个 网站 程序员 求职网 设计 模板 主要 分为 首页 文章 列表 文章内容 三个 模板 主要 基调 蓝色 简洁 朴素 文章 需要 安装 两个 插件 无觅 相关 文章 插件 文章 评论 插件 可以 用于 文章 资讯 门户站 图片站 适用 版本 织梦 dedecms 5.7 版本 编码 utf 使用 方法 压缩包 解压 另起 一个 名字 传到 templets 目录 下面 进织 后台 系统 设置 模板 默认 风格 设置 地方 模板 名字 然后 更新 全站 可以 需要 安装 无觅 两个 插件 两个 插件 我用 极力推荐 下载 地址 http pan baidu com share link shareid 122080 uk 1376935646 模板 使用 效果 站点 首页 模板 文章 列表 模板 文章 详细 模板 本文 来自 疯狂 蚂蚁 博客 www crazyant net
1055,WIN7使用VisualSVN建立SVN服务器,win7 使用 visualsvn 建立 svn 服务器 使用 svn 开发 十分 方便 这样 不用 每次 拷贝 粘贴 备份 网上 看到 一篇 自己 windows 电脑 安装 svn 服务器 使用 非常 方便 下载安装 文件 服务器端 客户端 服务器端 采用 visualsvn 一个 可用 下载 地址 http idc218b newhua com down visualsvn server 2.1 zip 如果 链接 失效 百度 谷歌 搜索 可以 很多 下载 地址 客户端 采用 大家 熟悉 tortoisesvn 没错 就是 那个 乌龟 官方 下载 地址 http tortoisesvn net 服务器端 用来 存放 提交 文件 客户端 用来 连接 服务器端 提交 下载 服务器端 文件 这个 不用 话题 安装 服务器端 解压缩 下载 文件 visualsvn server 2.1 zip 双击 visualsvn server 2.1 msi 进行 安装 安装 过程 中有 一个 界面 选择 安装 组件 选择 第一个 visualsvn server and management console 可以 如图 一个 界面 设置 如图 可以 更改 目录 可以 更改 端口 注意 端口 不要 已经 使用 端口 冲突 去掉 use secure connnection https 选项 这里 repositories 服务器 文档 目录 就是 我们 提交 svn 文档 存放 目录 这个 目录 大家 可以 更改 点击 一步 默认 安装 完成 即可 安装 客户端 软件 tortoisesvn 1.5 3.13783 win32 svn 1.5 msi 双击 默认 安装 可以 安装 完成 可能 重启 重启 即可 配置 服务器端 点击 开始 -- 程序 visualsvn -- visuasvn server manager 启动 服务器 管理器 右键 选择 visualsvn server local 选择 properties 弹出 窗口 选择 network 标签 servername 输入 本机 ip地址 地址 192.168 158.129 端口 选择 8080 确定 保存 点击 visualsvn server 可以 看到 右面 界面 我们 访问 地址 就是 sever url http 192.168 158.129 8080 svn 现在 我们 新建 两个 目录 右键 选择 repositories 选择 create new repository 输入 名字 document 保存 新建 用户 右键 选择 users 选择 create user 输入 用户 密码 test test 这个 口令 客户端 连接 svn 服务器时 使用 刚才 创建 document repository 添加 用户 右键 选择 document 选择 properties 点击 add 按钮 选择 刚才 添加 用户 保存 如图 这样 服务器端 配置 回到 客户端 因为 已经 安装 客户端 软件 tortoisesvn d盘 新建 文件夹 testsvn 打开 文件夹 右键 选择 check out 检出 弹出 窗口 版本 url 输入 http 192.168 158.129 8080 svn document 如图 确定 保存 注意 上面 检出 目录 testsvn testsvn 新建 一个 文本文档 新建 文本文档 txt testsvn 空白处 点击 右键 选择 提交 commit 文件 传到 文档 服务器 其他人 可以 下载
1057,Magento获取指定分类下的所有子分类信息,magento 获取 指定 分类 所有 分类 信息 二次开发 经常 遇到 一种 情况 就是 判断 一个 分类 是否 属于 一个 分类 分类 包括 很多 分类 树状 结构 基本 方法 获取 分类 所有 分类 信息 然后 挨个 比较 是否 id 待定 id 相等 一种 递归 方法 获取 分类 所有 id 第二种 队列 递归 方法 获取 所有 分类 id 第二种 明显 性能 一些 本文 magento 模板 文件 测试 成功 一个 函数 输入 一个 分类 id 返回 分类 所有 分类 递归 获取 id 组成 一个 数组 返回 所用 方法 为用 队列 实现 递归 方法 输入 一个 分类 id 数字 返回 分类 所有 分类 id 组成 数组 用于 模板 文件 可以 直接 使用 可以 用于 action 文件 内部 实现 思路 使用 队列 方法 实现 递归 对树 遍历 function getallchildrenofcategory cateid resarr array 结果 数组 queuearr array 队列 数组 array push queuearr cateid while currentcid array pop queuearr array push resarr currentcid 处理 当前 节点 孩子 节点 category mage getmodel catalog category load currentcid subcats category getchildren idarrs explode subcats foreach idarrs as subcatid if subcatid continue subcategory mage getmodel catalog category load subcatid if subcategory getisactive array push queuearr subcatid reset queuearr return resarr 测试 一下 allproducerids getallchildrenofcategory 19 alldesignedids getallchildrenofcategory 18 php 没有 队列 数据结构 可以 数组 模拟 实现 数组 array push array pop 刚好 就是 这么 两个 方法 其中 因为 array pop 每次 改变 数组 指针 所以 可以 循环 末尾 reset 一下 重置 数组 最后 测试 输入 两个 分类 id 函数 执行 结束 以后 返回 数组 里面 就是 所有 分类 id
1061,MySQL数据库存储过程教程,mysql 数据库 存储 过程 教程 使用 存储 过程 先得 了解 怎样 使用 它们 存储 过程 执行 次数 远远 多于 次数 因此 本文 介绍 怎样 执行 存储 过程 之后 介绍 怎样 创建 存储 过程 其他 一些 操作 执行 存储 过程 方法 mysql 通过 类似 函数调用 方法 执行 存储 过程 因此 使用 一个 简单 关键字 call 实现 调用 call 命令 需要 存储 过程 名字 以及 需要 传递 参数 调用 例如 如下 例子 call productpricing pricelow pricehigh priceaverage 这里 一个 名字 productpricing 存储 过程 调用 计算 返回 产品 最低 最高 平均价格 存储 过程 可能 可能 不会 打印 结果 很快 看到 创建 存储 过程 已经 解释 一个 存储 过程 并非 微不足道 先看 一个 简单 例子 存储 过程 返回 产品 平均价格 create procedure productpricing begin select avg prod price as priceaverage from products end 存储 过程 名字 productpricing 使用 一句 create procedure productpricing 定义 如果 存储 过程 参数 的话 放到 括号 中间 可以 虽然 存储 过程 不带 参数 但是 两个 括号 必须 begin end 关键词 用于 区分 存储 过程 body body 自己 只有 一个 select 语句 mysql 执行 该段 代码 时候 它会 创建 一个 叫做 productpricing 存储 过程 因为 没有 调用 所以 不会 返回值 只是 创建 以待 将来 使用 如果 使用 mysql 命令行 需要 注意 分隔符 问题 默认 mysql 分隔符 分号 然而 我们 执行 mysql 命令 时候 分隔符 分号 如果 命令 工具 试图 解释 一个 存储 过程 时候 因为 里面 有分 当做 sql 命令 执行 但是 一个 存储 过程 可能 没有 定义 这时候 出错 解决 方法 我们 可以 临时 改变 mysql 命令 分隔符 delimiter create procedure productpricing begin select avg prod price as priceaverage from products end delimiter 代码 delimiter 告诉 命令 使用 作为 命令 分隔符 所以 代码 原来 end 变成 现在 end 这样的话 存储 过程 内部 分号 作为 命令 分隔符 解释 整个 存储 过程 一起 当做 整体 传递 解释 引擎 最后 delimiter 默认 分隔符 设置 回去 除了 符号 任何 符号 可以 作为 命令 分隔符 如果 使用 mysql 命令行 实验 一定 注意 命令 分隔符 处理 使用 存储 过程 方法 call productpricing +--------------+ priceaverage +--------------+ 16.133571 +--------------+ call productpricing 命令 执行 刚才 创建 存储 过程 输出 结果 因为 存储 过程 当做 函数 调用 即使 没有 参数 需要 名字 后面 带上 括号 删除 存储 过程 方法 存储 过程 一旦 创建 除非 删除 否则 一直 存在 服务器 等待 调用 drop 命令 可以 删除 服务器 指定 存储 过程 drop procedure productpricing 该句 删除 刚刚 创建 存储 过程 注意 名字 后面 没有 括号 这里 只用 指定 名字 如果 服务器 没有 存在 存储 过程 语句 抛出 一个 错误 为了 避免 这种 情况 我们 可以 使用 一种 调用 方法 drop procedure if exists 这样 只有 存在 时候 执行 删除 参数 存储 过程 productpricing 一个 展示 结果 简单 存储 过程 但是 一般来说 存储 过程 展示 结果 它们 结果 存入 传入 参数 里面
1064,给计算机专业求职的同学推荐几本书,计算机专业 求职 同学 推荐 几本书 计算机专业 应届生 每年 月份 11 月份 工作 黄金 时期 中旬 开始 互联网 开始 到来 第一波 大型 互联网 公司 例如 百度 腾讯 阿里巴巴 之后 很多 国企 研究所 最后 中小型 公司 还有 银行 因为 第一波 可以 称之为 重要 一个 时期 这时候 开始 复习 因此 推荐 月份 开始 复习 月份 很多 公司 来招 实习生 这时候 试试 复习 时期 最好 系统 几本书 本人 工作 针对 互联网 公司 因此 推荐 一些 这类 工作 书目 编程 珠玑 本书 20 多元 可是 很多 买来 因此 错过 经典 实用 好书 开始 复习 推荐 本书 里面 各种 问题 巧妙 解答 运用 思想 这些 思想 面试 时候 任何 情况 出来 显得 水平 同时 借助 进行 发散 思维 解决 问题 里面 涉及 海量 数据处理 算法 优化 预计 估算 深入 理解 堆排序 各种 内容 这些 面试 每次 遇到 同时 给出 深度 读者 思维 影响 其他 无法 给出 大话 数据结构 说完 深度 这里 给出 一本 较为 浅显 风格 大话 系列 言语 轻松 只是 知识 较为简单 陈述 但是 可以 系统 整体 把握 整个 数据结构 知识 阅读 本书 之后 读者 所有 数据结构 有所 理解 之后 觉得 哪个 部分 不是 深入 理解 可以 参考 其他 资料 因此 本书 推荐 速读 整体 把握 不要 死抠 细节 数据结构 算法 分析 c语言 描述 黑皮 那本 因为 翻译 版本 有些 句子 难以 理解 很多 知识 理解 好多 时间 才能 掌握 理解 发现 特别 深刻 笔试 面试 有个 超级 频繁 知识点 就是 结构 堆排序 应用 对于 这个 知识点 需要 本书 部分 理解 甚至 横向 比较 才能 最终 掌握 才能 面试 实现 发散 思维 提出 新思路 本书 作为 参考书 建议 全读 如果 某个 知识点 不是 深入 理解 可以 读读 一部分 可以 编程 之美 数据结构 部分 数字 数组 部分 微软 一名 同学 享誉 多年 里面 一些 题目 广泛 出现 大型 名企 笔试 面试 编程 之美 很多 题目 非常 巧妙 有些 问题 如果 看过 答案 自己 根本 想不到 解决 方法 因此 本书 标题 部分 必读 不可 往往 笔试 面试题 遇到 很多 原题 看过 同学 刷刷 写出 思路 一头雾水 为时已晚 offer 全本 本书 简直 就是 一个 bug 因为 相当于 一个 题库 所有 面试 遇到 题目 可以 上面 一些 问题解答 思路 总共 给出 几十道 题目 几乎 涵盖 所有 考察 部分 数组 链表 海量 数据 等等 本书 一个 神奇 地方 在于 给出 一些 面试官 心理 看法 比如 代码 慢些 工整 遇到 指针 一定 检查 是否 为空 指针 等等 虽然 有些 取巧 但是 学会 这些 检查 笔试 面试 通过 几率 会大 很多 指针 全本 建议 细读 指针 部分 速读 其他 部分 因为 很多 同学 计算机专业 出身 开始 接触 c语言 本书 只是 扫盲 作用 一些 角落 知识点 重温 一遍 即可 同时 笔试 面试 大部分 程序 所以 再次 复习 必要 有些 语法 细节 忘记 不好 比如 定义 函数指针 部分 指针 部分 体现 一个 程序员 内功 部分 这部分 细读 因为 笔试 中会 概率 出现 c++ primer 4th 建议 全本 阅读 本书 里面 知识 非常 全面 同时 琐碎 细密 边边角角 往往 给出 一些 珍贵 只言片语 本书 读后 整体 c++ 把握 并且 一些 stl 模板 函数指针 等等 面试 中问 一些 通过 概率 大些 还有 指针 部分 模板 部分 stl 部分 非常 细致 笔试 面试 帮助 这些 其实 已经 不少 因此 自己 整体 这么 基本 几本 只是 阅读 部分 章节 然而 感觉 覆盖面 已经 足够 笔试 面试 即使 不是 熟悉 答上 一些 笔试 面试 会考 一些 设计模式 linux 操作系统 内容 这些 部分 需要 自己 鉴别 方面 网上 找些 文章 来看 就行 毕竟 不是 很多 本文 地址 http 51projob com bishimianshi qita 2012 1113 1242 html
1066,读《疯狂的站长》- 回顾反思我的个人站长路,疯狂 站长 回顾 反思 个人 站长 个人 一直 怀揣 一个 梦想 一天 手上 好多个 这些 带来 收入 这样的话 不用 天天 按时 上班 努力 工作 最终 实现 自己 财富 自由 然而 理想 美好 现实 残酷 疯狂 站长 里面 多次 提到 99 06 一段 建站 创业 黄金 时段 现在 一个 站长 想要 做好 起来 必须 付出 努力 才能 效果 自己 感觉 一个 做到 挣钱 已经 好不容易 书中 其实 提到 多次 营销 策略 就是 写文章 软文 当然 需要 一定 文字 功底 天赋 在内 不然 文章 没人 营销 肯定 失败 结局 摘录 几句 感受 段子 ----------------------------------------------------------------------------------------------------------------- 互联网 创业 需要 踏实 低调 默默无闻 需要 浮躁 喜欢 大吹特 张扬 需要 适当 骄傲 这会 自己 成就感 同时 宣传 推广 自己 站长 忍受 孤独寂寞 足够 时间 脸皮厚 推广 主见 网站 细水长流 如果 急躁 一蹴而就 往往 得到 失意 结果 个人 站长 贵在 专做 那些 大佬 愿意 光顾 领域 这样 生存空间 不要 想着 什么 放点 比如 论坛 视频 博客 新闻 一些 其实 只会 个人 网站 失去 特色 关键 限制 因素 在于 个人 站长 精力有限 最好 投入 有限 事情 上去 摆脱 copy 依赖 关键 内容 盈利模式 自己 创新 这个 虽然 不到 努力 试图 一类 网站 不错 就是 评价 事物 网站 比如 域名 打分 名字 打分 网站 名字 一定 朗朗上口 易于 后期 发展 域名 最好 拼音 长点 没关系 冷门 网站 成功率高 推广 方法 qq 群发 qq 邮件 手机号 群发短信 其实 定位 个人 营销 邮件 首位 毕竟 个人 来说 他用 也好 推广 就是 邮件 记住 广告 永远 讨厌 个人 站长 因为 资金 有限 不要 广告条 方式 进行 推广 最好 方法 就是 发帖 发帖 炒作 语气 低调 风格 写实 原则 进行 帖子 马甲 帖子 不沉 起来 可以 论坛 发帖 进行 群发 实现 营销 马甲 要记 代理 求助 弱势 建议 公益 只带 名字 不带 域名 帖子 容易 成功 同类 论坛 发帖 关键词 搜索 相关 论坛 批量 交换 友情链接 方法 就是 邮件 营销 抓取 批量 站长 邮件 账号 之后 进行 群发 即可 既然 一行 就要 高调 炒作 踏实 做事 炒作 目的 为了 告诉 大家 活着 炒作 方法 无中生有 风投 打嘴巴 发帖子 批判 自己 抛砖引玉 搞点 绯闻 所思 事情 哗众取宠 论坛 喜欢 什么 帖子 什么 帖子 多用 好像 据说 估计 之类 词汇 站长 保持 会员 朦胧 不要 会员 打成一片 个人 能力 有限 事情 做到 后来 学会 用人 学会 使用 各方 资源 如果 站长 先当 一个 热心人 论坛 回帖 不会 自己 上网 搜一 不管 网站 还是 小卖部 赚钱 离不开 一买一卖 ----------------------------------------------------------------------------------------------------------------- 读完 自己 反思 一下 自己 虽然 捣鼓 好久 一直 没有 门路 自己 主要 以下 一些 缺失 推广 方面 不会 推广 没有 推广 自己 脸皮 不够 没有 qq 邮件 方式 进行 营销 其实 程序员 求职网 小圈子 学校 圈子里 邮件 营销 效果 应该 不错 不是 玉米 捣鼓 域名 一直 捣鼓 域名 空间 其实 人家 大型 网站 仅仅 一个 域名 可以 那么 域名 没什么 用处 专心 搞好 一个 就行了 定位 方面 一会 博客 一会 论坛 不够 专一 不够 没有 细分化 一个 特别 事情 认真 专注 下去 一直 门外汉 学习 一些 知识 了解 一些 行内 情况 其实 读完 该书 终于 找到 一些 归属感 之前 一些 盲目 想法 终于 验证 听说 一些 知道 方法 手段 一切 事在人为 一切 需要 耐心 努力 拼搏 钻研 忍得 寂寞 理想 手头 不用 赚钱 其实 现实 因为 没钱 雇不起 人来 打理 但是 一个 没有 搭理 感觉 马上 完蛋 一个 论坛 有人 发小 广告 用力 立马 结束 游戏 路途 遥远 站长 何时能 到达 彼岸 我要 坚持 继续 努力 没有 放弃
1072,JSP使用JNA调用DLL函数遇到的几个问题,jsp 使用 jna 调用 dll 函数 遇到 几个 问题 最近 一个 jsp 项目 需要 用到 分词 模块 分词 模块 实用 c++ 写成 dll 于是 上网 各种 方法 最后 选择 jna 作为 jsp 调用 dll 工具 jna java native access 提供 一组 java 工具 用于 运行 动态 访问 系统 本地 native library window dll 需要 编写 任何 native jni 代码 开发人员 只要 一个 java 接口 描述 目标 native library 函数 结构 jna 自动 实现 java 接口 native function 映射 jna 使用 方法 很多 这里 总结 遇到 问题 dll 放置 路径 问题 jsp 本身 分为 bean src 目录 webroot 脚本 目录 我们 dll 需要 src 调用 于是 遇到 dll 资源 文件 放置 什么 地方 问题 最后 解决 方法 调用 dll lib 文件 拷贝到 windows system32 目录 可以 访问 解决 过程 我试 这些 文件 放到 src 目录 然后 class class getresource getpath 这种 方法 得到 class 路径 得到 资源 文件 路径 结果 没有 成功 dll 调用 资源 路径 问题 dll 可能 调用 其他 资源 文件 比如 这里 需要 用到 词典 路径 问题 不过 这个 较为简单 容易 解决 资源 文件目录 拷贝到 src 目录 下面 程序 使用 class class getresource getpath 获得 编译 所在 根目录 连接 资源 文件 即可
1088,MathType(数学公式编辑器) 汉化绿色版V6.7下载,mathtype 数学公式 编辑器 汉化 绿色版 v6.7 下载 mathtype 一个 强大 数学公式 编辑器 常见 文字 处理软件 演示 程序 配合 使用 能够 各种 文档 加入 复杂 数学公式 符号 mathtype 常见 文字处理 工具 紧密结合 支持 ole 对象 链接 嵌入 可以 任何 支持 ole 文字处理 系统 调用 从主 菜单中选择 插入 对象 对象 选择 mathtype 5.0 equation 帮助 用户 快速 建立 专业化 数学 技术 文档 mathtype 汉化版 修正 部分 中文 支持 这个 版本 word wps 文字处理 系统 支持 相当 实现 所见即 所得 工作 模式 可以 编辑 公式 保存 多种 图片格式 透明 图片 模式 可以 方便 添加 移除 符号 表达式 模板 需要 简单 地用 鼠标 拖进 即可 可以 方便 修改 模板 总之 功能 多多 熟练 使用 知道 强大 mathtype 可用 编辑 数学试卷 书籍 报刊 论文 幻灯 演示 方面 编辑 数学 资料 得力 工具 下载 地址 点击 打开 下载 完成 找到 fonts 文件夹 点击 打开 双击 dsfonts exe 安装 字体 公式 编辑器 可以 运行 界面 mathtype 最好 地方 在于 office word powerpoint 连接 一起 matytype 选中 一个 公式 以后 可以 直接 粘贴 word 中去 word 双击 相应 公式 能够 弹出 mathtype 进行 编辑 修改
1094,Rational Rose根据Java代码自动生成类图（教程和错误解决）,rational rose 根据 java 代码 自动 生成 类图 教程 错误 解决 rational rose 有个 方便 功能 项目 java 代码 自动 转换成 uml 类图 根据 java 代码 自动 生成 uml 新建 一个 rose 工程 选择 j2ee 模板 如图 进行 操作 出现 界面 classpath 加入 源代码 目录 加入 支持 add recursive select all reverse 完成 任何 提示 done 结束 逆向 工程 完成 逆向 工程 以后 不会 自动 生成 类图 logical view component view 里面 按照 java 结构 自动 生成 相应 包和类 按照 自己 要求 建立 类图 下面 我们 所选 包下 所有 显示 新建 类图 rose 新建 class diagram 然后 一个个 右侧 图中 菜单 query add class 确定 rational rose 逆向 工程 java 常见问题 解决 rose 逆向 工程 时候 属性 类型 表现 logical view java lang 解决办法 菜单 tools java j2ee project 选择 fundamental type 页面 remoe common jdk classesadd common jdk classes 确定 即可 也许 rose bug2 rose 逆向 工程 时候 报错 一般 没有 引用 一些 菜单 view log 选中 看到 log window 出错 信息 一般 可能 不到 tools java j2ee project specification 里面 设置 项目 相关 比如 classpath 等等 解决办法 菜单 tools java j2ee project specification 选择 class path 页面 相应 加入 即可 来源 http hi baidu com suofang item 254ef5f3298bf60fc6dc45ae
1112,Hadoop之使用python实现数据集合间join操作,hadoop 使用 python 实现 数据 集合 join 操作 hadoop steaming 介绍 hadoop 有个 工具 叫做 steaming 能够 支持 python shell c++ php 其他 任何 支持 标准 输入 stdin 标准 输出 stdout 语言 运行 原理 可以 通过 标准 java map reduce 程序 对比 说明 使用 原生 java 语言 实现 map reduce 程序 hadoop 准备 数据 数据 传送 java map 程序 java map 程序 数据处理 输出 o1hadoop o1 打散 排序 然后 传给 不同 reduce 机器 每个 reduce 机器 传来 数据 传给 reduce 程序 reduce 程序 数据处理 输出 最终 数据 o2 借助 hadoop streaming 使用 python 语言 实现 map reduce 程序 hadoop 准备 数据 数据 传送 java map 程序 java map 程序 数据处理 传送 python map 程序 python map 程序 数据处理 结果 传回 java map 程序 java map 程序 数据 输出 o1hadoop o1 打散 排序 然后 传给 不同 reduce 机器 每个 reduce 机器 传来 数据处理 传送 python reduce 程序 python reduce 程序 数据处理 结果 返回 java reduce 程序 java reduce 程序 数据处理 输出 最终 数据 o2 上面 红色 表示 map 对比 蓝色 表示 reduce 对比 可以 看出 streaming 程序 一步 中间 处理 这样 说来 steaming 程序 效率 性能 应该 低于 java 程序 然而 python 开发 效率 运行 性能 有时候 大于 java 就是 streaming 优势 所在 hadoop 实现 集合 join 需求 hadoop 用来 数据分析 大都 集合 进行 操作 因此 过程中将 集合 join 起来 使得 一个 集合 得到 一个 集合 对应 信息 需求 非常 常见 比如 以下 这个 需求 两份 数据 学生 信息 姓名 学生 成绩 课程 成绩 特点 共同 主键 现在 需要 两者 结合 起来 得到 数据 姓名 课程 成绩 计算公式 姓名 join 课程 成绩 姓名 课程 成绩 数据 事例 学生 信息 学号 sno 姓名 name01name102name203name304name4 数据 事例 学生 成绩 学号 sno 课程 courseno 成绩 grade010180010290020182020295 期待 最终 输出 学号 sno 姓名 name 课程 courseno 成绩 grade01name1018001name1029002name2018202name20295 实现 join 注意 点和易 总结 如果 一个 完善 健壮 map reduce 程序 建议 首先 弄清楚 输入 数据 格式 输出 数据 格式 然后 自己 手动 构建 输入 数据 手动 计算 输出 数据 这个 过程 发现 一些 程序 需要 特别 处理 地方 实现 join key 哪个 还是 本例 key sno 每个 集合 key 是否 可以 重复 本例 数据 不可 重复 数据 key 可以 重复 每个 集合 key 对应 是否 可以 存在 本例 中有 学生会 成绩 所以 数据 key 可以 为空 条会 影响 hadoop 启动 脚本 key fields partition 配置 条会 影响 map reduce 程序 具体 代码 实现 方式 同样 影响 代码 编写 方式 hadoop 实现 join 操作 思路 具体 思路 每个 数据源 加上 一个 数字 标记 label 这样 hadoop 排序 同一个 字段 数据 一起 并且 按照 label 排好序 于是 直接 相邻 相同 key 数据 合并 一起 输出 得到 结果 map 阶段 给表 和表 标记 其实 就是 输出 一个 比如 表一加 标记 标记 partion 阶段 根据 学号 key 第一 主键 标记 label 第二 主键 进行 排序 分区 reduce 阶段 由于 已经 按照 第一 主键 第二 主键 排好 相邻 相同 key 数据 合并 输出 hadoop 使用 python 实现 join map reduce 代码 mapper py 代码 coding utf -# mapper py 来自 疯狂 蚂蚁 www crazyant netimport osimport sys mapper 脚本 def mapper 获取 当前 正在 处理 文件 名字 这里 我们 两个 输入 文件 所以 加以 区分 filepath os environ map input file filename os path split filepath for line in sys stdin if line strip continuefields line split sno fields 以下 判断 filename 目的 不同 文件 不同 并且 加上 不同 标记 if filename data info name fields 下面 数字 就是 数据源 加上 统一 标记 print join sno name elif filename data grade courseno fields grade fields 下面 数字 就是 数据源 加上 统一 标记 print join sno courseno grade if __ name __ __ main __ mapper reducer 代码 coding utf -# reducer py 来自 疯狂 蚂蚁 www crazyant netimport sysdef reducer 为了 记录 一个 记录 区别 lastsno 记录 上个 snolastsno for line in sys stdin if line strip continuefields line split sno fields 处理 思路 遇见 当前 key 一条 key 不同 并且 label 记录下来 name 当前 key 一条 key 相同 并且 label 本条 数据 courseno grade 联通 一条 记录 name 一起 输出 最终 结果 if sno lastsno name 这里 没有 判断 label 情况 因为 sno lastno 并且 label 表示 该条 key 没有 数据源 数据 if fields name fields elif sno lastno 这里 没有 判断 label 情况 因为 sno lastno 并且 label 表示 该条 key 没有 数据源 数据 if fields courseno fields grade fields if name print join lastsno name courseno grade lastsno snoif __ name __ __ main __ reducer 使用 shell 脚本 启动 hadoop 程序 方法 删除 输出 目录 hadoop client hadoop bin hadoop fs rmr hdfs jointest output 来自 疯狂 蚂蚁 www crazyant net 注意 下面 配置 环境 每个 机器 一样 hadoop client hadoop bin hadoop streaming mapred map tasks 10 mapred reduce tasks mapred job map capacity 10 mapred job reduce capacity mapred job name join -- sno name sno courseno grade num key fields for partition stream num map output key fields partitioner org apache hadoop mapred lib keyfieldbasedpartitioner input hdfs jointest input output hdfs jointest output mapper python26 bin python26 sh mapper py reducer python26 bin python26 sh reducer py file mapper py file reducer py cachearchive share python26 tar gz python26 看看 运行 成功 输出 表示 成功 echo 可以 自己 手工 构造 输入输出 数据 进行 测试 程序 验证 需要 注意 地方 hadoop join 操作 可以 分为 很多 类型 各种类型 脚本 编写 有所不同 分类 按照 key 字段 数目 value 字段 数目 key 是否 重复 划分 以下 一个 个人 总结 对照表 表示 影响 地方 影响 类型 影响 范围 key 字段 数目 启动 脚本 num key fields for partition 配置 启动 脚本 stream num map output key fields 配置 map reduce 脚本 key 获取 map reduce 脚本 一条 数据 一条 数据 比较 方法 key 是否 重复 如果 数据源 重复 标记 数据源 重复 标记 那么 join 可以 分为 类型 类型 reduce 中先 记录 第一个 value 然后 一条 直接 合并 输出 类型 类型 作为 标记 输出 然后 每次 遇见 label 记录 value 遇见 一次 label 输出 一次 最终 结果 类型 遇见 类型 数组 记录 value 遇见 label 记录 数组 全部 连同 该行 value 输出 value 字段 数目 影响 每次 label 记录 数据 个数 需要 value 记录下来 原文 链接 转载 注明
1122,Hadoop-Streaming实战经验及问题解决方法总结,hadoop streaming 实战经验 问题 解决 方法 总结 目录 join 操作 分清 join 类型 重要 ... 启动 程序 key 字段 partition 字段 设定 ... 控制 hadoop 程序 内存 方法 ... 对于 数字 key 排序 问题 ... mapper 获取 map input file 环境变量 方法 ... 运行 过程 记录 数据 方法 ... 多次 运行 hadoop 是否 成功 判断 ... stdin 读取 line 预处理 ... python 字符串 连接 方法 ... 10 怎样 查看 mapper 程序 输出 ... 11 shell 脚本 变量名 命名 方法 ... 12 提前 设计 流程 简化 很多 重复 工作 ... 13 其他 一些 实用 经验 ... join 操作 分清 join 类型 重要 join 操作 hadoop 计算 非常 常见 需求 要求 两个 不同 数据源 数据 根据 一个 多个 key 字段 连接成 一个 合并 数据 输出 由于 key 字段 数据 特殊性 导致 join 分成 三种 类型 处理 方法 各有不同 如果 一个 key 数据 可以 重复 记该 数据源 类型 如果 只能 出现 一次 记为 类型 类型 join 比如 姓名 班级 两个 数据 根据 学号 进行 join 因为 同一个 只能 指向 单个 名字 单个 班级 所以 类型 处理 方法 map 阶段 加上 标记 reduce 阶段 接收 数据 两个 一个 分组 这样的话 需要 读取 第一行 key 字段 连到 第二行 后面 即可 每个 输出 数据 类型 或者 join 比如 姓名 选修 课程 两个 数据 根据 学号 join 由于 第二个 数据源 数据 每个 学号 对应 很多 课程 所以 类型 join 处理 方法 map 阶段 第一个 数据源 类型 加上 标记 第二个 数据源 加上 标记 这样的话 reduce 阶段 收到 数据 标记 分组 同时 每组 行数会 大于 join 方法 读取 标记 记录 其非 key 字段 field value 然后 遍历 每次 遇到 标记 field value 添加 该行 末尾 输出 每个 输出 数据 类型 join 比如 选修 课程 喜欢 水果 根据 学号 join 由于 每个 数据源 单个 学号 对应 多个 相应 数据 所以 类型 处理 方法 map 阶段 数据源 加上 标记 目的 reduce 阶段 节省 内存 数据源 加上 标记 reduce 阶段 每个 分组会 并且 标记 全部 标记 前面 join 方法 初始化 一个 数组 遇到 标记 行时 key 数据 记录 数组 然后 遇到 标记 行时 数组 数据 添加 该行 之后 输出 每个 输出 数据 启动 程序 key 字段 partition 字段 设定 join 计算 过程 两个 非常 重要 需要 理解 就是 排序 字段 key 分区 字段 partition 指定 字段 说明 num key fields for partition 用于 分区 影响 数据 分发 哪个 reduce 机器 影响 排序 stream num map output key fieldskey 意思 就是 主键 这个 主键 影响 数据 根据 几列 排序 org apache hadoop mapred lib keyfieldbasedpartitioner 如果 需要 对字段 排序 分区 默认 加上 设置 上面 三个 配置 尤其 影响 join 计算 配置 如果 key join 因为 加上 标记 排序 所以 设定 key 同时 设定 partition 第一个 分区 保证 key 数据 同一 机器 如果 联合 key join 首先 需要 加上 标记 所以 设定 key 用来 进行 排序 然后 需要 partition key 分区 控制 hadoop 程序 内存 方法 hadoop 程序 针对 海量 数据 因此 任何 一个 保存 变量 操作 内存 造成 存储 如果 尝试 一个 数组 记录 一行 某些 单个 不到 程序运行 结束 hadoop 平台 爆出 137 内存 超出 错误 kill 控制 内存 方法 就是 变量 尤其 数组 记录 数据 最终 实现 当前 处理 数据 规模 无关 汇总 join 处理 不得不 记录 历史数据 这种 处理 做到 用后 及时 释放 同时 尽量 记录 变量 不是 数组 比如 汇总 计算 可以 每次 记录 累加 不是 记录 所有 元素 最后 汇总 对于 数字 key 排序 问题 如果 加以 处理 排序 处理过程 数字 会排 10 之后 处理 方法 需要 数字 前面 比如 如果 全部 个位数 01 10 比较 最终 reduce 输出 时候 回来 需要 预测 数字 位数 mapper py print 010d t% int key value 其中 key 既然 数字 需要 数字 格式化 输出 010d 表示 输出 10 字符串 如果 不够 10 前面 reducer py 最终 输出 使用 int 方法 去掉 前面 print t% int key value mapper 获取 map input file 环境变量 方法 mapper 有时候 为了 区分 不同 数据文件 来源 这时候 可以 map input file 变量 记录 当前 正在 处理 脚本 文件 路径 以下 两种 判别 方法 文件名 判断 import osfilepath os environ map input file filename os path split filepath if filename filename1 process 1elif filename filename2 process2b 文件 路径 是否 包含 确定 字符串 判断 filepath os environ map input file if filepath find sys argv process6 运行 过程 记录 数据 方法 hadoop 程序 不同于 本地 程序 调试 方法 可以 使用 错误 日志 查看 错误信息 提交 任务 可以 本地 cat input mapper py sort reducer py output 这种 方法 过滤 基本 错误 运行 过程 可以 通过 以下 方法 记录 信息 可以 直接 信息 输出 std output 程序运行 结束 需要 手工 筛选 记录 数据 或者 awk 直接 查看 但是 污染 结果 数据 大多 采用 错误 输出 方法 这样 运行 可以 stderr 日志 里面 查看 自己 输出 数据 sys stderr write filename filename 多次 运行 hadoop 是否 成功 判断 如果 运行 多次 hadoop 计算 并且 一次 计算结果 一次 计算 输入 那么 如果 一次 计算 失败 一次 明显 需要 启动 计算 因此 shell 文件 可以 通过 判断 一次 是否 运行 成功 示例 代码 if ne then exit 1fi8 stdin 读取 line 预处理 mapper reducer 程序 是从 标准 输入 读取数据 然而 如果 直接 进行 split 发现 最后 一个 后面 解决 方法 两种 datas line split datas line strip split 第一种 方法 直接 去除 最后 一个 字符 然后 split 第二种 方法 去除 两边 空格 包括 换行 然后 split 个人 喜欢 第二种 因为 确定 是否 所有 行都 结尾 但是 有些 数据 两边 空格 如果 strip 的话 伤害 数据 所以 可以 根据 情景 选用 python 字符串 连接 方法 mapper reducer 输出 或者 中间 处理 经常 需要 不同 类型 字符串 结合 一起 python 实现 字符串 连接 方法 格式化 输出 字符串 连接 加号 join 操作 需要 每个 转化成 字符 类型 使用 格式化 输出 t% inti str 使用 字符串 进行 连接 join list 写成 元祖 join join join list 10 怎样 查看 mapper 程序 输出 一般来说 mapper 程序 经过 处理 经过 排序 然后 partition 不同 reducer 一步 处理 然而 开发 过程 常常 需要 查看 当前 mapper 输出 是否是 预期 结果 输出 查看 两种 需求 需求 查看 mapper 直接 输出 运行 脚本 设定 reducer 参数 就是 没有 reducer 程序 然后 mapred reduce tasks 需要 任何 reduce 处理 但是 同时 设定 output 选项 这样的话 output 目录 看到 每个 mapper 机器 输出 一个 文件 就是 mapper 程序 直接 输出 需求 查看 mapper 输出 partition 排序 内容 reducer 输入 什么 样子 运行 脚本 设定 reducer 参数 就是 没有 自己 reducer 程序 然后 mapred reduce tasks 或者 更大 reduce 机器 但是 没有 reducer 程序 hadoop 认为 reducer 存在 因此 继续 mapper 输出 调用 shuffle 打乱 sort 操作 这样的话 output 目录 下面 看到 reducer 输入 文件 并且 数目 等于 reducer 设定 tasks 个数 11 shell 脚本 变量名 命名 方法 如果 遇到 很多 输入 数据源 很多 输出 中间 结果 每个 hadoop 输出 用到 一步 输入 并且 人物 用到 其他 输出 这样的话 最好 一个 统一 shell 配置文件 配置 所有 文件 路径 名字 同时 一定 避免 inputdir1 inputdir2 这样 命名 方法 变量 命名 一种 功力 一定 多练 直观 并且 显而易见 这样 随着 程序 规模 增加 不会 越来越 12 提前 设计 流程 简化 很多 重复 工作 近期 自己 接到 一个 较为 复杂 hadoop 数据处理 流程 大大小小 处理 估算 的话 十几个 hadoop 任务 才能 完成 不过 幸好 没有 直接 开始 代码 而是 这些 任务 统一 整理 一下 最后 竟然 发现 很多 问题 可以 直接 合并 一类 代码 处理 过程 同时 整个 任务 分成 很多 任务 并列 顺序 然后 挨个 解决 任务 非常 hadoop 处理 流程 如果 任务 之间 错综复杂 相互依赖 对方 处理结果 需要 事先 设计 处理 流程 开始 事先 13 其他 一些 实用 经验 mapper reducer 脚本 同一个 python 程序 便于 对比 查看 独立 编写 数据源 信息 位置 映射 字典 容易 混淆 抽取 常用 输出 数据 读入 数据 模块 独立 函数 测试 脚本 数据 run 脚本 map reduce 程序 目录 放置
1129,MYSQL向数据表插入默认字段值的方法,mysql 数据表 插入 默认 段值 方法 数据表 设计 过程 很多 时候 设定 字段 默认值 那么 该表 插入 数据 时会 出现 以下 情况 情况 如果 该字 null 类型 那么 直接 null 插入 段值 自动 变成 设定 默认值 情况 如果 该字 not null 类型 那么 直接 null 插入 的话 普通 模式 下该 值会 变成 默认值 发出 警告 但是 strict 模式 下会 直接 报错 对于 情况 解决 方法 使用 default 关键词 官方 文档 地址 对此 说明 说明 insert 语法 说明 注意 红色 关键字 insert low priority delayed high priority ignore into tbl name partition partition name ... col name ... values value expr default ... ... ... on duplicate key updatecol name expr col name expr ... 说明 使用 default 关键字 说明 use the keyword default to set column explicitly to its default value this makes it easier to write insertstatements that assign values to all but few columns because it enables you to avoid writing an incompletevalues list that does not include value for each column in the table otherwise you would have to write out the list of column names corresponding to each value in the values list 翻译 过来 大致 就是说 关键字 default 可以 显式 insert 过程中将 一个 设定 默认值 比如 一条 sql 可以 这样 insert into student sno sname sage class values crazyant 25 default 这时候 直接 班级 class 默认值 插入 进去 然而 使用 load data infile to db 直接 文件 导入到 数据表 无法 使用 默认 default 因为 设定 default 认为 字符串 改成 null 表示 出现 null 插入 not null 错误 还有 一种 方法 程序 自动 取出 数据表 默认值 然后 插入 数据 之前 自动 数据 null 替换成 数据表 该字 默认值 如下 步骤 所示 插入 数据 替换 null 数据表 默认值 方法 步骤 使用 show columns 取出 数据 表字 默认值 mysql show columns from city +------------+----------+------+-----+---------+----------------+ field type null key default extra +------------+----------+------+-----+---------+----------------+ id int 11 no pri null auto increment name char 35 no country char no uni district char 20 yes mul population int 11 no +------------+----------+------+-----+---------+----------------+ rows in set 0.00 sec 所示 default 一列 就是 数据 表字 默认值 我们 可以 取出 第一列 第五 放在 一个 数组 字典 里面 array id nullarray name array country 1array district array population 步骤 插入 数据 替换 其中 null 字典 存放 默认值 插入 数据表 之前 如果 某个 字段 null 根据 字段名 上述 字典 取出 默认值 替换 null 然后 插入 数据 这种 方法 load data from file 可用 因为 load data 效率 insert 效率高 所以 值得 这么
1144,hadoop第一个程序WordCount.java的编译运行过程,hadoop 第一个 程序 wordcount java 编译 运行 过程 java hadoop 开发 标准 官方语言 本文 下载 官方 wordcount java 进行 编译 打包 然后 使用 测试数据 运行 hadoop 程序 这里 假定 已经 装好 hadoop 环境 linux 运行 hadoop 命令 能够 正常 执行 下载 java 版本 wordcount java 程序 wordcount java 复制到 linux 一个 目录 这里 复制到 home crazyant hadoop wordcount crazyant dev mechine hadoop wordcount lltotal rwxr -- -- crazyant crazyant 1921 aug 16 20 03 wordcount java 目录 home crazyant hadoop wordcount 创建 wordcount classes 目录 用于 存放 编译 wordcount java 生成 class 文件 crazyant dev mechine hadoop wordcount mkdir wordcount classes crazyant dev mechine hadoop wordcount lltotal 8drwxrwxr crazyant crazyant 4096 aug 16 20 07 wordcount classes rwxr -- -- crazyant crazyant 1921 aug 16 20 03 wordcount java 编译 wordcount java 文件 其中 classpath 选项 表示 引用 hadoop 官方 选项 表示 编译 class 文件 生成 目标目录 crazyant dev mechine hadoop wordcount javac classpath home crazyant app hadoop hadoop core jar wordcount classes wordcount java crazyant dev mechine hadoop wordcount ll total 8drwxrwxr crazyant crazyant 4096 aug 16 20 09 wordcount classes rwxr -- -- crazyant crazyant 1921 aug 16 20 03 wordcount java wordcount classes total 4drwxrwxr crazyant crazyant 4096 aug 16 20 09 org wordcount classes org total 4drwxrwxr crazyant crazyant 4096 aug 16 20 09 myorg wordcount classes org myorg total 12 rw rw -- crazyant crazyant 1546 aug 16 20 09 wordcount class rw rw -- crazyant crazyant 1938 aug 16 20 09 wordcount map class rw rw -- crazyant crazyant 1611 aug 16 20 09 wordcount reduce class 然后 编译 class 文件 打包 crazyant dev mechine hadoop wordcount jar cvf wordcount jar wordcount classes added manifestadding org in out stored 0% adding org myorg in out stored 0% adding org myorg wordcount map class in 1938 out 798 deflated 58% adding org myorg wordcount reduce class in 1611 out 649 deflated 59% adding org myorg wordcount class in 1546 out 749 deflated 51% crazyant dev mechine hadoop wordcount lltotal 12drwxrwxr crazyant crazyant 4096 aug 16 20 09 wordcount classes rw rw -- crazyant crazyant 3169 aug 16 20 11 wordcount jar rwxr -- -- crazyant crazyant 1921 aug 16 20 03 wordcount java 本地 echo 生成 一个 文件 用于 输入 数据 crazyant dev mechine hadoop wordcount echo hello world hello crazyant am the ant am your brother inputfile crazyant dev mechine hadoop wordcount more inputfilehello world hello crazyant am the ant am your brother hadoop 建立 一个 目录 里面 建立 输入 文件 目录 crazyant dev mechine hadoop wordcount hadoop fs mkdir app word count input crazyant dev mechine hadoop wordcount hadoop fs ls app word countfound itemsdrwxr xr czt czt 2013 08 16 20 16 app word count input 本地 刚刚 inputfile 传到 hadoop input 目录 crazyant dev mechine hadoop wordcount hadoop fs put inputfile app word count input crazyant dev mechine hadoop wordcount hadoop fs ls app word count inputfound items rw -- -- czt czt 61 2013 08 16 20 18 app word count input inputfile 运行 jar 建立 input 目录 作为 输入 参数 crazyant dev mechine hadoop wordcount hadoop jar wordcount jar org myorg wordcount app word count input app word count output13 08 16 20 19 38 warn mapred jobclient use genericoptionsparser for parsing the arguments applications should implement tool for the same.13 08 16 20 19 40 info util nativecodeloader loaded the native hadoop library13 08 16 20 19 40 info compress lzocodec successfully loaded initialized native lzo library13 08 16 20 19 40 info compress lzmacodec successfully loaded initialized native lzma library13 08 16 20 19 40 info compress quicklzcodec successfully loaded initialized native quicklz library13 08 16 20 19 40 info mapred fileinputformat total input paths to process 113 08 16 20 19 41 info mapred jobclient splits size 6113 08 16 20 19 41 info mapred jobclient running job job 20130813122541 10584413 08 16 20 19 43 info mapred jobclient map 0% reduce 0% 13 08 16 20 19 57 info mapred jobclient map 24% reduce 0% 13 08 16 20 20 07 info mapred jobclient map 93% reduce 0% 13 08 16 20 20 16 info mapred jobclient map 100% reduce 1% 13 08 16 20 20 26 info mapred jobclient map 100% reduce 61% 13 08 16 20 20 36 info mapred jobclient map 100% reduce 89% 13 08 16 20 20 47 info mapred jobclient map 100% reduce 96% 13 08 16 20 20 57 info mapred jobclient map 100% reduce 98% 13 08 16 20 21 00 info mapred jobclient updating completed job ignoring ... 13 08 16 20 21 00 info mapred jobclient updating completed job ignoring ... 13 08 16 20 21 00 info mapred jobclient job complete job 20130813122541 10584413 08 16 20 21 00 info mapred jobclient counters 1913 08 16 20 21 00 info mapred jobclient file systems13 08 16 20 21 00 info mapred jobclient hdfs bytes read 195113 08 16 20 21 00 info mapred jobclient hdfs bytes written 6813 08 16 20 21 00 info mapred jobclient local bytes read 517471513 08 16 20 21 00 info mapred jobclient local bytes written 25681413 08 16 20 21 00 info mapred jobclient job counters13 08 16 20 21 00 info mapred jobclient launched reduce tasks 10013 08 16 20 21 00 info mapred jobclient rack local map tasks 6113 08 16 20 21 00 info mapred jobclient original reduces 10013 08 16 20 21 00 info mapred jobclient launched map tasks 6113 08 16 20 21 00 info mapred jobclient miss scheduled reduces 1513 08 16 20 21 00 info mapred jobclient task statistics13 08 16 20 21 00 info mapred jobclient total map slot time 3413 08 16 20 21 00 info mapred jobclient attempt map task count 6113 08 16 20 21 00 info mapred jobclient total reduce slot time 89213 08 16 20 21 00 info mapred jobclient map reduce framework13 08 16 20 21 00 info mapred jobclient reduce input groups 913 08 16 20 21 00 info mapred jobclient combine output records 013 08 16 20 21 00 info mapred jobclient map input records 113 08 16 20 21 00 info mapred jobclient reduce output records 913 08 16 20 21 00 info mapred jobclient map input bytes 6113 08 16 20 21 00 info mapred jobclient combine input records 013 08 16 20 21 00 info mapred jobclient reduce input records 查看 output 目录 是否 结果 crazyant dev mechine hadoop wordcount hadoop fs ls app word count output found 100 items rw -- -- czt czt 2013 08 16 20 20 app word count output part 00000 rw -- -- czt czt 2013 08 16 20 20 app word count output part 00001 rw -- -- czt czt 2013 08 16 20 20 app word count output part 00002 rw -- -- czt czt 2013 08 16 20 20 app word count output part 00003 rw -- -- czt czt 2013 08 16 20 20 app word count output part 00004 rw -- -- czt czt 2013 08 16 20 20 app word count output part 00005 rw -- -- czt czt 2013 08 16 20 20 app word count output part 00006 rw -- -- czt czt 2013 08 16 20 20 app word count output part 00007 rw -- -- czt czt 2013 08 16 20 20 app word count output part 00008 rw -- -- czt czt 2013 08 16 20 20 app word count output part 00009 rw -- -- czt czt 2013 08 16 20 20 app word count output part 00010 rw -- -- czt czt 2013 08 16 20 20 app word count output part 00011 rw -- -- czt czt 2013 08 16 20 20 app word count output part 00012 rw -- -- czt czt 2013 08 16 20 20 app word count output part 00013 rw -- -- czt czt 2013 08 16 20 20 app word count output part 00014 rw -- -- czt czt 2013 08 16 20 20 app word count output part 00015 rw -- -- czt czt 2013 08 16 20 20 app word count output part 00016 rw -- -- czt czt 2013 08 16 20 20 app word count output part 00017 rw -- -- czt czt 2013 08 16 20 20 app word count output part 00018 rw -- -- czt czt 2013 08 16 20 20 app word count output part 00019 rw -- -- czt czt 2013 08 16 20 20 app word count output part 00020 rw -- -- czt czt 2013 08 16 20 20 app word count output part 00021 rw -- -- czt czt 2013 08 16 20 20 app word count output part 00022 rw -- -- czt czt 2013 08 16 20 20 app word count output part 00023 rw -- -- czt czt 2013 08 16 20 20 app word count output part 00024 rw -- -- czt czt 2013 08 16 20 20 app word count output part 00025 目录 所有 文本文件 合并 下载 本地 crazyant dev mechine hadoop wordcount hadoop fs getmerge app word count output wordcount result crazyant dev mechine hadoop wordcount lsinputfile wordcount classes wordcount jar wordcount java wordcount result 查看 一下 下载 下来 计算结果 crazyant dev mechine hadoop wordcount more wordcount resulti 2your 1crazyant 1brother 1hello 2am 2world 1the 1ant 统计 结果 正确 参考 文章 http hadoop apache org docs r0.18 mapred tutorial html example% 3a wordcount v1.0
1185,为eclipse安装python、shell开发环境和SVN插件,eclipse 安装 python shell 开发 环境 svn 插件 eclipse 一个 非常 好用 ide 通常 来说 我们 eclipse 开发 java 程序 为了 开发 python shell 脚本 eclipse 运行 出现 很多 相关 插件 python pydevshell shelledsvn subclipsephp pdt 使用 eclipse 过程 可以 搜一 网上 插件 有些 大幅提高 开发 效率 本文 开发 linux 环境 python shell 脚本 背景 安装 eclipse 上装 开发 python shell svn 插件 其中 shell 插件 可以 指定 shell 解释器 这样 windows eclispe 直接 运行 shell 程序 下载 安装 jdk 地址 http www oracle com technetwork java javase downloads index html 由于 64 机器 所以 下载 x64 jdk 安装 java python shell 开发 利器 eclipse 使用 eclipse standard 4.3 即可 地址 http www eclipse org downloads 打开 eclipse 设定 jdk 地址 安装 开发 python eclipse 插件 pydev 地址 http pydev org 输入 pydev 可用 更新 地址 优先 http pydev org updates 可选 http pydev org nightly 安装 可以 打开 pydev 视图 发现 python 文件 已经 语法 高亮 安装 开发 shell eclipse 插件 shelled 地址 http sourceforge net projects shelled 安装 man page viewer 插件 shelled 需要 机器 需要 先装 安装 地址 http download eclipse org technology linuxtools updates nightly 安装 shelled 插件 http sourceforge net projects shelled files latest download 下载 shelled zip 包以 archive zip 方式 设置 数据源 shell 文件 右键 open with 选择 shell script editor 发现 打开 shell 文件 已经 语法 高亮 eclipse 默认 eclipse 自带 text editor 打开 shell 文件 安装 shelled 之后 可以 修改 使用 shelled 默认 打开 sh 文件 如果 没有 sh 这个 选项 可以 右边 add 按钮 手工 添加 一个 安装 可以 直接 windows eclipse 运行 shell 解释器 interpreter windows 运行 shell 很多 方法 cygwin 感觉 笨重 这里 推荐 两个 工具 http win bash sourceforge net http unxutils sourceforge net 下载 第一个 解压 指定 目录 然后 打开 eclipse 通过 添加 方式 设置 shell 解释器 直接 选定 解压 目录 sh exe 即可 然后 一个 shell 测试 一下 是否 运行 shell 文件 最终 linux 运行 windows eclipse 运行 shell 最多 只能 用来 调试 解除 一些 基本 bug 大家 这里 开发 一定 linux 测试 一下 安装 管理 svn eclipse 插件 subclipse 地址 http subclipse tigris org 页面 选择 界面 给出 多种 安装 方式 本文 采用 eclipse update site url http subclipse tigris org update 1.10 方式 安装 安装 成功 可以 使用 右键 import svn 导入 项目 如果 文件 更改 或者 操作 文件 或者 目录 右键 team 可以 看到 svn 一些 选项 文章 来自 疯狂 蚂蚁 转载 注明 来源
1193,Hive元数据存于mysql中文乱码解决,hive 数据 存于 mysql 中文 乱码 解决 最近 一套 hive 测试环境 使用 mysql 存储 hive 数据 然而 执行 一个 带有 中文 注释 建表 文件 出现 中文 乱码 问题 实验 过程 发现 整个 数据库 编码 改成 latin1 或者 utf8 不行 只有 整个 数据库 设定 latin1 存储 中文 数据表 编码 设定 utf8 能够 解决 出现 问题 执行 hive createtable sql 时说 中文 乱码 认识 尝试 失败 meta database mysql 编码 全部 设定 utf8 以下 错误 ------------------- failed error in metadata javax jdo jdodatastoreexception an exception was thrown while adding validating class es specified key was too long max key length is 767 bytes com mysql jdbc exceptions jdbc4 mysqlsyntaxerrorexception specified key was too long max key length is 767 bytes at sun reflect nativeconstructoraccessorimpl newinstance0 native method at sun reflect nativeconstructoraccessorimpl newinstance nativeconstructoraccessorimpl java 39 at sun reflect delegatingconstructoraccessorimpl newinstance delegatingconstructoraccessorimpl java 27 at java lang reflect constructor newinstance constructor java 513 at com mysql jdbc util handlenewinstance util java 411 at com mysql jdbc util getinstance util java 386 at com mysql jdbc sqlerror createsqlexception sqlerror java 1052 at com mysql jdbc mysqlio checkerrorpacket mysqlio java 3609 at com mysql jdbc mysqlio checkerrorpacket mysqlio java 3541 at com mysql jdbc mysqlio sendcommand mysqlio java 2002 at com mysql jdbc mysqlio sqlquerydirect mysqlio java 2163 at com mysql jdbc connectionimpl execsql connectionimpl java 2618 at com mysql jdbc connectionimpl execsql connectionimpl java 2568 at com mysql jdbc statementimpl execute statementimpl java 842 at com mysql jdbc statementimpl execute statementimpl java 681 at org apache commons dbcp delegatingstatement execute delegatingstatement java 264 at org apache commons dbcp delegatingstatement execute delegatingstatement java 264 at org datanucleus store rdbms table abstracttable executeddlstatement abstracttable java 730 at org datanucleus store rdbms table abstracttable executeddlstatementlist abstracttable java 681 at org datanucleus store rdbms table abstracttable create abstracttable java 402 at org datanucleus store rdbms table abstracttable exists abstracttable java 458 at org datanucleus store rdbms rdbmsstoremanager classadder performtablesvalidation rdbmsstoremanager java 2689 at org datanucleus store rdbms rdbmsstoremanager classadder addclasstablesandvalidate rdbmsstoremanager java 2503 at org datanucleus store rdbms rdbmsstoremanager classadder run rdbmsstoremanager java 2148 at org datanucleus store rdbms abstractschematransaction execute abstractschematransaction java 113 at org datanucleus store rdbms rdbmsstoremanager addclasses rdbmsstoremanager java 986 at org datanucleus store rdbms rdbmsstoremanager addclasses rdbmsstoremanager java 952 at org datanucleus store abstractstoremanager addclass abstractstoremanager java 919 at org datanucleus store mapped mappedstoremanager getdatastoreclass mappedstoremanager java 356 at org datanucleus store rdbms query legacy extenthelper getextent extenthelper java 48 at org datanucleus store rdbms rdbmsstoremanager getextent rdbmsstoremanager java 1332 at org datanucleus objectmanagerimpl getextent objectmanagerimpl java 4149 at org datanucleus store rdbms query legacy jdoqlquerycompiler compilecandidates jdoqlquerycompiler java 411 at org datanucleus store rdbms query legacy querycompiler executioncompile querycompiler java 312 at org datanucleus store rdbms query legacy jdoqlquerycompiler compile jdoqlquerycompiler java 225 at org datanucleus store rdbms query legacy jdoqlquery compileinternal jdoqlquery java 175 at org datanucleus store query query executequery query java 1628 at org datanucleus store rdbms query legacy jdoqlquery executequery jdoqlquery java 245 at org datanucleus store query query executewitharray query java 1499 at org datanucleus jdo jdoquery execute jdoquery java 266 at org apache hadoop hive metastore objectstore getmtable objectstore java 775 at org apache hadoop hive metastore objectstore gettable objectstore java 709 at org apache hadoop hive metastore hivemetastore hmshandler is table exists hivemetastore java 965 at org apache hadoop hive metastore hivemetastore hmshandler create table core hivemetastore java 887 at org apache hadoop hive metastore hivemetastore hmshandler access 600 hivemetastore java 109 at org apache hadoop hive metastore hivemetastore hmshandler 15 run hivemetastore java 945 at org apache hadoop hive metastore hivemetastore hmshandler 15 run hivemetastore java 942 at org apache hadoop hive metastore hivemetastore hmshandler executewithretry hivemetastore java 307 at org apache hadoop hive metastore hivemetastore hmshandler create table hivemetastore java 942 at org apache hadoop hive metastore hivemetastoreclient createtable hivemetastoreclient java 348 at org apache hadoop hive ql metadata hive createtable hive java 469 at org apache hadoop hive ql exec ddltask createtable ddltask java 3149 at org apache hadoop hive ql exec ddltask execute ddltask java 213 at org apache hadoop hive ql exec task executetask task java 130 at org apache hadoop hive ql exec taskrunner runsequential taskrunner java 57 at org apache hadoop hive ql driver launchtask driver java 1063 at org apache hadoop hive ql driver execute driver java 900 at org apache hadoop hive ql driver run driver java 748 at org apache hadoop hive cli clidriver processcmd clidriver java 165 at org apache hadoop hive cli clidriver processline clidriver java 246 at org apache hadoop hive cli clidriver processreader clidriver java 267 at org apache hadoop hive cli clidriver processfile clidriver java 274 at org apache hadoop hive cli clidriver main clidriver java 435 at sun reflect nativemethodaccessorimpl invoke0 native method at sun reflect nativemethodaccessorimpl invoke nativemethodaccessorimpl java 39 at sun reflect delegatingmethodaccessorimpl invoke delegatingmethodaccessorimpl java 25 at java lang reflect method invoke method java 597 at org apache hadoop mapred util runjar main runjar java 210 at org apache hadoop mapred jobshell run jobshell java 54 at org apache hadoop util toolrunner run toolrunner java 65 at org apache hadoop util toolrunner run toolrunner java 79 at org apache hadoop mapred jobshell main jobshell java 68 nestedthrowables com mysql jdbc exceptions jdbc4 mysqlsyntaxerrorexception specified key was too long max key length is 767 bytes failed execution error return code from org apache hadoop hive ql exec ddltask ------------------- 尝试 失败 meta server mysql 编码 全部 设定 latin1 以下 错误 --------- peishuaishuai www crazyant net sql hive crazyant sql hive history file tmp crazyant hive job log crazyant 20130904 txt ok time taken 2.064 seconds failed error in metadata javax jdo jdodatastoreexception add request failed insert into columns sd id comment column name type name integer idx values nestedthrowables java sql batchupdateexception incorrect string value xc2 x8a xc2 xa8 xc3 xa7 ... for column comment at row failed execution error return code from org apache hadoop hive ql exec ddltask --------- 解决方案 数据库 编码 latin1 columns table params 编码 设定 utf8 首先 按照 latin1 编码 建立 hive meta 数据库 修改 hive default xml 连接 编码 utf8 property name javax jdo option connectionurl name value jdbc mysql ip 3306 hive createdatabaseifnotexist true amp characterencoding utf value description jdbc connect string for jdbc metastore description property 然后 进入 数据库 执行 以下 两条 sql 语句 语句 hive columns column 改成 utf8 编码 alter table columns modify column comment varchar 256 character set utf8 语句 hive table params param value 改成 utf8 编码 alter table table params modify column param value varchar 4000 character set utf8 执行 完后 hive create table sql 中文 乱码 没有 出现 进入 数据库 执行 desc table 语句 没有 出现 乱码 问题 解决
1197,hive从查询中获取数据插入到表或动态分区,hive 查询 获取数据 插入 到表 动态 分区 hive insert 语句 能够 查询 语句 获取数据 同时 数据 load 目标 表中 现在 假定 一个 已有 数据 staged employees 雇员 信息 全量表 所属 国家 cnty 所属 st 该表 两个 属性 我们 做个 试验 该表中 数据 查询 出来 插入 一个 employees insert overwrite table employeespartition country 中国 state 北京 select from staged employees sewhere se cnty 中国 and se st 北京 由于 使用 overwrite 关键字 目标 表中 原来 相同 partition 所有 数据 覆盖 如果 目标 表中 没有 partition 整个 表会 覆盖 如果 overwrite 关键字 删掉 或者 替换成 into hive 追加 不是 替代 分区 原表中 数据 这个 特性 hive v0.8 之后 支持 数据 已经 存在 hdfs 不是 我们 想要 格式 时候 进行 计算 需要 好多 步骤 必要 存储 中间 数据 时候 或者 数据 没有 分区 很多 无效 需要 过滤 时候 可以 使用 insert .. select 句型 完成 这一 转换 过程 由于 一个 国家 很多 省份 如果 根据 国家 country 地区 partition 两个 维度 数据 进行 分区 的话 这条 sql 语句 执行 个数 应该 等于 地区 数目 比如 中国 23 个省 就要 sql 语句 执行 23 因此 hive 这个 sql 语句 进行 改造 需要 扫描 一次 原表 可以 生成 不同 输出 多路 输出 比如 下面 sql 语句 扫描 一次 原始数据 但是 同时 生成 省份 结果 数据 from staged employees seinsert overwrite table employeespartition country 中国 state 河北省 select where se cnty 中国 and se st 河北省 insert overwrite table employeespartition country 中国 state 陕西省 select where se cnty 中国 and se st 陕西省 insert overwrite table employeespartition country 中国 state 河南省 select where se cnty us and se st 河南省 通过 缩进 可以 清楚 看到 我们 扫描 一次 staged employees 但是 执行 不同 insert 语句 大s ql 语句 这么 执行 通过 from staged employees 获取 一条 记录 然后 执行 一个 select 子句 如果 select 子句 验证 通过 执行 相应 insert 语句 注意 这里 三条 select 子句 完全 独立 执行 不是 if .. then .. else 关系 意味着 select 子句 某种 情况 可能 同时 通过 where 检测 通过 这种 结构 原始 数据 拆分 目标 不同 partition 中去 如果 原表 一条 记录 满足 其中 一个 给定 select .. where .. 子句 记录 目标 固定 分区 其实 更进一步 每条 insert 语句 数据 不同 数据表 不管 这个 是否 分区 一样 于是 一个 过滤器 一样 原表 一些 数据 很多 输出 地址 剩下 数据 丢弃 当然 可以 混用 insert overwrite insert into 两种 不同 方法 写出 数据 动态 分区 插入 数据 但是 问题 还是 没有 解决 中国 23 个省 那么 我们 需要 23 insert into .. select .. where 子句 非常 现实 于是 hive 一种 叫做 动态 分区 特性 出现 能够 根据 select 出来 参数 自动 推断 数据 插入 那个 分区 本文 上面 两种 sql 语句 设定 分区 方式 叫做 静态 分区 插入 一个 sql 语句 进行 改动 得到 以下 简洁 sql 语句 insert overwrite table employeespartition country state select ... se cnty se stfrom staged employees se hive 获取 select 最后 两个 位置 se cnty se st 参数值 然后 两个 填写 insert 语句 partition 两个 country state 变量 动态 分区 通过 位置 对应 分区 原始 select 出来 输出 partition 关系 仅仅 通过 位置 确定 名字 没有 关系 比如 这里 se cnty county 名称 完全 没有 关系 上面 这条 sql 语句 两个 分区 同时 进行 动态 设定 如果 staged employees 表中 100 国家 每个 国家 100 地区 那么 sql 语句 自动 每个 国家 地区 建立 相应 partition 插入 数据 如果 手写 的话 现实 只要 位置 正确 可以 混用 动态 分区 静态 分区 设定 比如 下面 这个 例子 可以 静态 指定 一个 country 但是 state 采用 动态 方法 设定 insert overwrite table employeespartition country us state select ... se cnty se stfrom staged employees sewhere se cnty us 注意 静态 分区 必须 动态 分区 前面 使用 hive 动态 分区 参数 设定 动态 分区 功能 默认 关闭 打开 状态 默认 工作 strict 模式 这种 模式 要求 至少 指定 一个 静态 分区 这样 为了 防止 设计 大量 partition 糟糕 情况 举个 例子 使用 时间 进行 分区 竟然 一秒钟 产生 一个 分区 还有 其他 一些 属性 设定 用来 限制 类似 情况 出现 如下 所示 名称 默认值 描述 hive exec dynamic partitionfalse 设置 true 用于 打开 动态 分区 功能 hive exec dynamic partition modestrict 设置 nonstrict 能够 所有 分区 动态 设定 否则 的话 至少 需要 指定 一个 分区 hive exec max dynamic partitions pernode100 每个 mapper 或者 reducer 创建 最大 动态 分区 数目 如果 一个 mappre 或者 reducer 试图 创建 多余 这个 动态 分区 数目 引发 错误 hive exec max dynamic partitions 1000 一条 带有 动态 分区 sql 语句 创建 动态 分区 总量 如果 超出 限制 报出 错误 hive exec max created files100000 全局 创建 文件 数目 最大值 专门 一个 hadoop 计数器 跟踪 该值 如果 超出 报错 举个 例子 使用 动态 分区 sql 语句 序列 如下 所示 需要 设定 一些 必要 参数 可以 set hive exec dynamic partition true set hive exec dynamic partition mode nonstrict set hive exec max dynamic partitions pernode 1000 --- 文章 来自 疯狂 蚂蚁 www crazyant netinsert overwrite table employeespartition country state select ... se cty se stfrom staged employees se 总结 使用 from .. insert .. select .. where 结构 能够 一个 数据表 抽取 数据 结果 插入 不同 分区 使用 动态 分区 能够 hive 根据 select 最末 几个 位置 自动 设定 目标 分区 使用 动态 分区 需要 设定 一些 hive 运行 参数
1203,Hive开发中使用变量的两种方法,hive 开发 使用 变量 两种 方法 使用 hive 开发 数据分析 代码 经常 遇到 需要 改变 运行 参数 情况 比如 select 语句 日期 段值 设定 可能 不同 时间 想要 不同 日期 数据 需要 动态 改变 日期 如果 开发量 较大 参数 的话 使用 变量 替代 原来 面值 非常 必要 本文 总结 几种 可以 hive sql 传入 参数 方法 满足 类似 需要 准备 测试 测试数据 第一步 准备 测试 测试数据 用于 后续 测试 hive create database test oktime taken 2.606 seconds 然后 执行 建表 导入 数据 sql 文件 czt www crazyant net testhivepara hive student sql hive history file tmp crazyant net hive job log czt 201309131615 1720869864 txtoktime taken 2.131 secondsoktime taken 0.878 secondscopying data from file home users czt testdata studentcopying file file home users czt testdata studentloading data to table test studentoktime taken 1.76 seconds 其中 student sql 内容 如下 use test --- 学生 信息 create table if not exists student snobigintcomment snamestringcomment 姓名 sagebigintcomment 年龄 pdatestringcomment 入学 日期 comment 学生 信息 row format delimitedfields terminated by lines terminated by stored as textfile load data local inpath home users czt testdata student into table student testdata student 测试数据 文件 内容 如下 1name121201309012name222201309013name323201309014name424201309015name525201309026name626201309027name727201309028name828201309029name9292013090310name10302013090311name11312013090312name12322013090413name133320130904 方法 shell 设置 变量 hive 直接 使用 测试 shell 文件名 bin bashtablename student limitcount hive use test select from tablename limit limitcount 运行 结果 czt www crazyant net testhivepara sh shellhive sh tablename student limitcount hive use test select from student limit name1 21 201309012 name2 22 201309013 name3 23 201309014 name4 24 201309015 name5 25 201309026 name6 26 201309027 name7 27 201309028 name8 28 20130902 由于 hive 自身 sql 语言 缺乏 shell 灵活性 过程 控制能力 所以 采用 shell hive 开发 模式 非常 常见 shell 直接 定义 变量 hive 语句 可以 直接 引用 注意 使用 hiveconf 定义 hive 中是 不能 使用 修改 一下 刚才 shell 文件 采用 hiveconf 方法 定义 日期 参数 bin bashtablename student limitcount hive hiveconf enter school date 20130902 hiveconf min age 26 use test select from tablename where pdate hiveconf enter school date and sage hiveconf min age limit limitcount 运行 失败 因为 脚本 shell 环境中运行 于是 shell 试图 解析 hiveconf enter school date hiveconf min age 变量 但是 两个 shell 变量 没有 定义 所以 以空 字符串 放在 这个 位置 运行 时该 sql 语句 解析 下面 这个 样子 hive hiveconf enter school date 20130902 hiveconf min age 26 use test explain select from student where pdate and sage limit 方法 使用 hiveconf 定义 sql 文件 使用 因为 换行 什么 方便 hive 适合 少量 sql 代码 所以 一般 很多 hql 文件 然后 使用 hive 方法 调用 这时候 可以 通过 hiveconf 定义 一些 变量 然后 sql 直接 使用 编写 调用 shell 文件 bin bashhive hiveconf enter school date 20130902 hiveconf min ag 26 testvar sql 调用 testvar sql 文件 内容 use test select from studentwhere pdate hiveconf enter school date andsage hiveconf min ag limit 执行 过程 czt www crazyant net testhivepara sh shellhive sh hive hiveconf enter school date 20130902 hiveconf min ag 26 testvar sqlhive history file tmp czt hive job log czt 201309131651 2035045625 txtoktime taken 2.143 secondstotal mapreduce jobs 1launching job out of 1number of reduce tasks is set to since there no reduce operatorkill command hadoop job kill job 20130911213659 423032013 09 13 16 52 00 300 stage map 0% reduce 0% 2013 09 13 16 52 14 609 stage map 28% reduce 0% 2013 09 13 16 52 24 642 stage map 71% reduce 0% 2013 09 13 16 52 34 639 stage map 98% reduce 0% ended job job 20130911213659 42303ok7 name7 27 201309028 name8 28 20130902time taken 54.268 seconds 总结 本文 主要 阐述 两种 hive 使用 变量 方法 第一种 shell 定义 变量 然后 hive sql 语句 直接 var name 方法 调用 第二种 使用 hive hiveconf key value run sql 模式 使用 hiveconf 设置 变量 然后 sql 文件 使用 hiveconf varname 方法 调用 两种 方法 可以 满足 开发 时候 hive 传递 参数 需求 提升 开发 效率 代码 质量
1209,shell/hadoop/hive一些有用命令收集,shell hadoop hive 一些 有用 命令 收集 有些 命令 工作 经常 用到 记录 一个 文章 用于 查阅 本文 经常 更新 shell 命令 linux 统计 某个 目录 所有 文件 行数 命令 find home crazyant type name xargs cat wc find 查找 crazyant 目录 所有 文本文件 行数 不过 命令 执行 挺慢 linux 统计 某个 目录 所有 目录 总目录 大小 命令 du -- max depth home crazyant 统计 crazyant 目录 所有 文件 大小 这里 看到 一层 目录 大小 因此 加上 max depth 如果 这个 参数 命令 会以 递归 方式 列出 所有 子目录 文件大小 scp 命令 使用 本地 复制到 远程 scp logs jx pss crazyant net home pss logshive 命令 hive 建立 执行 索引 create index table02 index on table table02 id as org apache hadoop hive ql index compact compactindexhandler with deferred rebuild alter index table02 index on table02 rebuild 第一句 hive 表上 建立 索引 没有 生效 第二句 真正 执行 建立 索引 过程 本身 一个 map reduce 过程 hive load data 命令 hive use crazyant net load data inpath app crazyant student into table student 其中 inpath 意思 input path 意思 所以 不管 是从 本地 local 还是 hdfs load data 带上 hadoop 命令 hadoop distcp 命令 用户名 密码 方法 hadoop distcp su user1 pass1 du user1 pass1 hdfs src1 hdfs dest1 有时候 两个 集群 之间 没有 distcp 权限 这时候 需要 带上 两个 集群 账号密码 su 后面 带上 第一个 集群 账号密码 du 后面 带上 目标 集群 账号密码 mysql 命令 查看 数据表 详细 描述 信息 show full fields from student 命令 注释 权限 默认值 类型 表字 信息 列出来 查看 正在 执行 mysql 线程 mysql show processlist +---------+-----------+--------------------+-------------+---------+------+-------+------------------+ id user host db command time state info +---------+-----------+--------------------+-------------+---------+------+-------+------------------+ 2153201 crazyant 127.0 0.1 25357 pulse sleep 914 null 2153733 crazyant 127.0 0.1 48814 hive query null show processlist 2153735 crazyant 127.0 0.1 39639 pulse sleep 13 null 2153736 crazyant 127.0 0.1 39640 pulse sleep 13 null +---------+-----------+--------------------+-------------+---------+------+-------+------------------+ rows in set 0.01 sec mysql 使用 kill 命令 可以 其中 一个 进程 mysql kill 2153474 query ok rows affected 0.00 sec 数据 load mysql 方法 load data local infile workbench python result txt replace into table my urlvisit fields terminated by lines terminated by ignore lines url pdate count vim 命令 如果 编辑 错误 esc 回到 命令 模式 可以 撤销 刚才 编辑 vim 编辑 中文 文本 出现 乱码 vim 文本 经常 出现 中文 乱码 是因为 fileencoding termencoding 编码 一致 造成 设置 一直 可以 set termencodingtermencoding cp936 set fileencodingfileencoding utf set termencoding utf8 这样 设置 一下 vim 正常 显示 中文 转载 注明 来源 http crazyant net 1209 html
1214,网站从织梦DEDECMS迁移到Wordpress过程以及URL重定向方法,网站 从织 dedecms 迁移 wordpress 过程 以及 url 重定向 方法 广告 本人 承接 迁移 织梦到 wordpress 业务 一段时间 自己 程序员 求职网 www.51 projob com 黑链 打开 首页 顶部 出现 大片大片 广告 图片 后台 各种 地方 黑链 代码 改了 几个 地方 不行 然后 代码 下载 下来 采用 搜索 方法 过程 竟然 发现 好多个 类似 sys cmd 这种 木马 入口 文件 然而 黑链 一直 没有 删掉 无奈 之下 采用 彻底 解决 方法 程序员 求职网 从织 直接 迁移 wordpress 因为 wordpress 全球 著名 博客 系统 官方 博客 系统 经常 进行 升级 修补 漏洞 因此 安全性 保障 而织 作为 国内 cms 老大 衍生 一大批 垃圾 站点 各种 入侵 各种 然而 官方 很多 漏洞 视而不见 修补 非常 缓慢 考虑 这些 准备 进行 迁移 迁移 过程 迁移 过程 网上 很多 文章 大致 这样 网上 生成 织梦 全站 rss 文件 方法 然后 代码 上传 生成 全站 文章 rss 文件 wordpress 中将 生成 rss 导入 进去 这时候 已经 wp 看到 所有 文章 但是 没有 内容 这时候 需要 修改 dede articleaddon 增加 title 字段 填充 update dede addonarticle dede archives set dede addonarticle title dede archives title where dede addonarticle aid dede archives id 进入 织梦 数据库 dede articleaddon 数据表 导出来 数据表 导入到 wp 数据库 一条 sql 大致 这样 update wp posts dede addonarticle set wp posts post content dede addonarticle body where wp posts post title dede addonarticle title wp posts dede articleaddon 根据 文章 title join 然后 采用 update wp posts content 字段 设定 join dede articleaddon 内容 body 字段 这时候 发现 文章 已经 内容 但是 图片 将织 uploads 目录 传到 wordpress 根目录 发现 文章 图片 全部 ok 链接 规则 变化 导致 百度 收录 迁移 完成 感觉 一口气 wordpress 终于 能够 显示 织梦 之前 所有 文章 并且 现在 能够 使用 windows live write 写文章 感觉 非常 方便 然而 几天 发现 百度 收录 网站 链接 几乎 变成 一下 是因为 url 规则 变化 原来 这样 链接 http www.51 projob com weiruan 20120826 449 html 现在 变成 这样 http www.51 projob com 2343 百度 收录 650 篇文章 全部 第一种 格式 url 于是 用户 链接 进来 全部 404 页面 不到 文章 可是 大事 辛辛苦苦 积攒 页面 权重 这样 不是 前功尽弃 如果 百度 因此 惩罚 网站 永不 收录 采用 301 进行 url redirect 拯救 网页 权重 对于 用户 不能 访问 问题 开始 一个 漂亮 404 页面 上面 列出 所有 网站 分类 希望 用户 看到 页面 网站 停留 一会 然而 发现 还是 乐观 用户 貌似 不会 继续 其他 链接 直接 离开 网站 今天 一篇 文章 百度 搜索引擎 优化 指南 2.0 官方版 里面 提到 这么 一段话 301 301 返回 含义 moved permanently 百度 认为 网页 当前 跳转 url 遇到 站点 迁移 域名 更换 站点 改版 情况 推荐 使用 301 返回 尽量减少 改版 带来 流量 损失 虽然 百度 spider 现在 301 跳转 响应 周期 较长 我们 还是 推荐 大家 这么 由此 看到 希望 这样 首先 用户 访问 网站 跳转 页面 其次 搜索引擎 进行 权重 转移 一个 较为 完美 方案 查找 织梦 dede wordpress url 映射 关系 实现 301 跳转 需要 找到 织梦 wordpress 两者 url 之间 对应 关系 然后 才能 设定 跳转 他们 两者之间 不变 对应 文章 标题 最合适 不过 获取 织梦 dede 文章 标题 链接 对应 关系 由于 织梦 采用 静态 文件 生成 方法 提供 url 因此 原先 备份 网站 目录 目录 复制 过来 得到 如下 一个 文章 目录 结果 其中 一个 html 就是 一个 文章 页面 目录 访问 结构 alibaba 20120828 481 html 就是 文章 具体 链接 地址 加上 www.51 projob com 作为 开头 形成 http www.51 projob com alibaba 20120828 481 html 作为 正式 访问 链接 然后 python 递归 遍历 方法 可以 得到 每个 文件 链接 以及 文章 标题 面试 经验 阿里巴巴 笔试 面试 全过程 精华 www.51 projob com alibaba 20120828 493 html 阿里巴巴 笔试 www.51 projob com alibaba 20120828 494 html 阿里巴巴 面试 失败 经历 www.51 projob com alibaba 20120828 495 html 阿里巴巴 常用 面试题 www.51 projob com alibaba 20120828 496 html 分享 面试 经历 阿里巴巴 www.51 projob com alibaba 20120828 497 html 阿里巴巴 面试 总结 www.51 projob com alibaba 20120828 498 html 阿里巴巴 面试 经历 www.51 projob com alibaba 20120828 499 html 淘宝网 2010 春季 校园 招聘 笔试 www.51 projob com alibaba 20120829 519 html 淘宝 2011.9 23 校园 招聘会 面试题 www.51 projob com alibaba 20120830 540 html 阿里 2011.9 17 招聘会 笔试 www.51 projob com alibaba 20120903 589 html2 获取 wordpress 每个 文章 链接 地址 标题 这个 比较简单 直接 数据库 wp posts 数据表 id post title 两列 导出 可以 然后 根据 id 可以 构造 每个 文章 链接 比如 http www.51 projob com 2482 这样 得到 wordpress 文章 标题 url 对应 关系 百度 web 笔试 分享 http www.51 projob com 2477 百度 笔试 malloc free new delete 区别 http www.51 projob com 2473 百度 技术 研发 笔试 题目 http www.51 projob com 2435 百度 2012 招聘 测试 工程师 实习生 笔试 http www.51 projob com 2425 百度 2011 招聘 笔试 答案 解析 http www.51 projob com 2424 百度 2010 校园 招聘 算法 编译 模块 http www.51 projob com 2423 百度 研发 笔试 http www.51 projob com 2408 百度 前端 面试 经历 http www.51 projob com 2380 百度 面试 全攻略 http www.51 projob com 2340 百度 面试题 2012 28 http www.51 projob com 23272011 百度 校园 招聘 笔试 c++ 原创 答案 http www.51 projob com 2264 百度 面试题 集锦 http www.51 projob com 2256 百度 2012 校招 笔试 位数 编码 http www.51 projob com 2214 百度 笔试 题目 分享 http www.51 projob com 21513 实现 两类 url 映射 简单 由于 两步 已经 得到 title dede url title wp url 两份 数据 现在 根据 title 作下 join 得到 dede url wp url 即织 ded url wordpress 对应 文章 url 对应 关系 www.51 projob com baidu 20120813 302 html http www.51 projob com 2480www.51 projob com baidu 20120813 304 html http www.51 projob com 2478www.51 projob com baidu 20120813 305 html http www.51 projob com 2477www.51 projob com baidu 20120813 309 html http www.51 projob com 2473www.51 projob com baidu 20120814 352 html http www.51 projob com 2435 批量 生成 apache 301 redirect 重置 命令 可以 修改 网站 根目录 htaccess 文件 进行 url 转向 但是 url 映射 关系 所以 我们 可以 程序 自动 生成 一下 文本文件 批量 替换 实现 最终 得到 下面 重定向 规则 redirect 301 alibaba 20120903 591 html http www.51 projob com 2209redirect 301 alibaba 20120908 636 html http www.51 projob com 2176redirect 301 alibaba 20120908 642 html http www.51 projob com 2170redirect 301 alibaba 20120911 652 html http www.51 projob com 2160redirect 301 baidu 20120329 150 html http www.51 projob com 2604redirect 301 baidu 20120504 222 html http www.51 projob com 2543redirect 301 baidu 20120505 223 html http www.51 projob com 2542redirect 301 baidu 20120505 225 html http www.51 projob com 2540redirect 301 baidu 20120715 285 html http www.51 projob com 2495redirect 301 baidu 20120813 300 html http www.51 projob com 2482redirect 301 baidu 20120813 301 html http www.51 projob com 2481 测试 大功告成 上面 生成 命令 全部 贴到 htaccess 中后 可以 测试 一下 网页 输入 链接 回车 发现 自动 跳转 链接 fifefox httpfox 插件 一下 状态 转移 发现 经过 两次 301 页面 转移 链接 原来 dede 错误 地址 转到 wordpress 地址 本次 代码 地址 http pan baidu com 1drbf6 用到 beautifulsoup 开源 用来 python 提取 文章 标题
1216,Python生成文件md5校验值函数,python 生成 文件 md5 校验 函数 linux 有个 命令 叫做 md5sum 生成 文件 md5 一般 情况 结果 记录 一个 文件 用于 校验 使用 比如 这样 使用 crazyant localhost pythonmd5 more sample file www crazyant netwww.51 projob com crazyant localhost pythonmd5 md5sum sample file sample file md5file crazyant localhost pythonmd5 more sample file md5file 311d384505e3622ccf85d88930e2b0a0 sample file crazyant localhost pythonmd5 md5sum sample file md5file sample file ok 其中 md5sum 用于 检测 生成 md5 是否 正确 使用 python 生成 文件 md5 以及 生成 md5sum 结果 一样 结果 文件 python 可以 使用 hashlib md5 模块 文件 内容 进行 md5 校验码 生成 如果 生成 md5sum 一样 结果 文件 需要 md5 结果 文件名 输出 一行 中间 两个 空格 输出 即可 测试代码 encoding utf from hashlib import md5import osdef generate file md5value fpath 文件 路径 作为 参数 返回 文件 md5 md5 需要 使用 二进制 格式 读取 文件 内容 file open fpath rb update file read file close return hexdigest def generate file md5sumfile fpath fname os path basename fpath fpath md5 md5 fpath fout open fpath md5 fout write generate file md5value fpath fname strip print generate success fpath fpath md5 fout flush fout close if __ name __ __ main __ fpath home users workbench pythonmd5 sample file 测试 文件 路径 作为 参数 获得 md5 字符串 print generate file md5value fpath 测试 生成 linux 命令 md5sum 同样 结果 md5 文件 generate file md5sumfile fpath 运行 结果 crazyant localhost pythonmd5 python generatemd5file py311d384505e3622ccf85d88930e2b0a0generate success fpath home crazyant workbench pythonmd5 sample file md5 crazyant localhost pythonmd5 md5sum sample file md5sample file ok 注意 windows 开发 代码 如果 直接 提交 linux 运行 经常 因为 windows 换行符 linux 缘故 导致 代码执行 失败 一般 情况 进行 一下 转换
1292,Firefox数据采集插件大全,firefox 数据 采集 插件 大全 本文 介绍 使用 firefox 进行 数据 采集 一些 小窍门 一些 数据 采集 建议 一些 优秀 用于 数据 采集 firefox 插件 实时 操作 浏览器 dom 一些 注意事项 firefox 插件 能够 实时 展现 出来 网页 进行 dom 操作 查看 注意 通过 firefox firebug 还有 chrome 查看 元素 功能 查看 不是 页面 最初 源码 而是 经过 浏览器 一些 修改 结果 比如 浏览器 收到 源码 清理 操作 执行 javascript 操作 比如 对于 firefox 浏览器 它会 自动 table 元素 加上 tbody 标签 然而 数据 采集 时候 比如 使用 scrapy 没有 经过 浏览器 这一 步骤 处理 所以 如果 采集 规则 带有 tbody 标签 显然 解析 失败 因此 使用 firefox 或者 xpath 数据 采集 规则 设计 处理 注意 禁用 firefox javascript 执行 引擎 然后 dom 提取 xpath 操作 这样 xpath 才能 用于 scrapy 框架 不要 使用 xpath 完全 绝对路径 比如 html body div href 这样 最好 使用 一些 相对 定位 方法 比如 id class width 或者 其他 一些 特性 比如 contains href image xpath 永远 不要 出现 tbody 标签 除非 确定 目标 这个 标签 用于 数据 采集 firefox 插件 firebug 地址 http getfirebug com firebug 一个 web 开发者 大都 知道 工具 web 采集 非常 有用 鼠标 移动 一个 页面 元素 上时 firebug 能够 快速 查看 html 代码 这样 构建 一个 元素 xpath 路径 非常 有用 xpather 地址 https addons mozilla org zh cn firefox addon xpather 一个 xpath 使用 插件 能够 页面 检测 一下 是否 正确 是否 正常 工作 xpath checker 地址 https addons mozilla org zh cn firefox addon xpath checker 另外 一个 firefox 插件 能够 让你在 页面 检测 xpath 是否 正确 tamper data 地址 https addons mozilla org zh cn firefox addon tamper data 一个 插件 能够 修改 firefox 发送 http firebug 能够 查看 http 不能 修改 这个 功能 强大 直接 绕过 页面 javascript 检测 直接 参数 提交 服务器 firecookie 地址 https addons mozilla org zh cn firefox addon firecookie 使用 firecookie 方便 cookie 进行 查看 管理 使用 插件 能够 创建 一个 cookie 删除 已有 cookie 查看 现有 网站 cookie 列表 管理 cookie 权限 很多 操作 httpfox 地址 https addons mozilla org en us firefox addon httpfox http 发送 接受 参数 cookie 进行 查看 修改 重新 发送 插件 edit cookies 地址 https addons mozilla org en us firefox addon edit cookies src search 在线 更新 新增 删除 cookie 插件 需要 页面 刷新 或者 修改 txt 文件 edit cookies 提供 一个 界面 用于 cookie 操作 tamper data 地址 https addons mozilla org en us firefox addon tamper data src search 使用 tamperdata 能够 查看 修改 浏览器 http https 发送 post 数据 比如 http 发送 接收 信息 进行 跟踪 调试 或者 提交 post 数据 进行 修改 live http headers 地址 https addons mozilla org en us firefox addon live http headers src search 查看 http headers 插件 插件 选择 对于 大部分 静态 页面 来说 使用 firebug xpath xpath checker 能够 设计 一套 解析 规则 设计 采集 流程 但是 对于 大部分 动态 网站 来说 很多 内容 javascript 加载 交互 需要 进行 http cookie 分析 比如 对于 新浪 微博 模拟 登陆 需要 实时 监控 异步 交互 过程 这时 需要 httpfox tamper data 插件 特别 有时候 需要 解析 网站 javascript 代码 可以 使用 webkit 开元 模拟 一个 浏览器 页面 动态 解析 不过 性能 降低 可以 统一 权衡 转载 注明 来源 http crazyant net 2013 09 30 firefox% e6% 95% b0% e6% 8d% ae% e9% 87% 87% e9% 9b% 86% e6% 8f% 92% e4% bb% b6% e5% a4% a7% e5% 85% a8
1297,wordpress按层级方式显示分类链接的方法,wordpress 层级 方式 显示 分类 链接 方法 wordpress 自带 模板 地方 比较 难看 符合 人性化 设计 比如 分类 页面 显示 分类 归档 百度 这种 样子 显然 改成 导航 形式 比较 先看 效果 首页 名企 攻略 百度 这种 样式 导航 首先 用户 清楚 知道 自己 所在 位置 其次 对于 搜索引擎 来说 一个 搜索 优化 实现 第一步 模板 目录 functions php 添加 两个 函数 function get url bylinkname link name return href link title name name function get hierarchy category path 来自 疯狂 蚂蚁 博客 www crazyant net wp query 整个 wordpress 全局变量 任何 地方 能够 使用 global wp query 获取 当前 请求 参数 分类 id catid wp query query vars cat 获取 首页 地址 home url get url bylinkname home url 首页 result 采用 迭代 方法 获取 一级 分类 信息 while catid current cat get category catid current cat link get category link catid current cat url get url bylinkname esc url current cat link current cat name if result result current cat url result else result current cat url 父亲 分类 id 付给 迭代 变量 catid current cat category parent result home url result return result 第一个 函数 为了 偷懒 生成 一个 url 链接 第二个 函数 主要 用到 wordpress 全局 请求 参数 对象 wp query 还有 分类 一些 函数 wp query 对象 参考 http codex wordpress org function reference wp querywordpress 分类 相关 参考 is categoryin categorycat is ancestor ofget category parentsget all category idsget categoriesget the categoryget categoryget category by pathget category by slugget cat idget cat nameget category link 开发 过程 随时 可以 使用 print 函数 打印 一下 对象 内容 知道 怎样 获取 参数 数据 实现 第二步 修改 category php 模板 文件 替换 导航 找到 模板 目录 category php 文件 找到 这个 文字 h1 class page title phpprintf __ category archives twentyten span single cat title false span h1 然后 替换成 调用 我们 编写 函数 h1 class page title phpecho get hierarchy category path h1 总结 第一次 开发 wordpress 函数 相当于 插件 整个 过程 一直 学习 官方 函数 参考 文档 提供 几乎 所有 自己 想要 函数 http codex wordpress org zh cn e5% 87% bd% e6% 95% b0% e5% 8f% 82% e8% 80% 83 应该 就是 全局变量 wp query 客户端 请求 服务器时 除了 初始化 配置 wordpress 第一件 就是 http 请求 参数 初始化 全局变量 这样 代码 任何 地方 可以 随时 引用 比如 本文 category php 没有 函数 传递 参数 因为 get hierarchy category path 我们 可以 使用 wp query 这个 全局变量 获取 所有 信息 转载 注明 http crazyant net 1297 html
1303,python子类调用父类的方法,python 子类 调用 父类 方法 python 其他 面向对象 语言 类似 每个 可以 拥有 一个 或者 多个 父类 它们 父类 那里 继承 属性 方法 如果 一个 方法 子类 实例 调用 或者 一个 属性 子类 实例 访问 但是 方法 属性 子类 存在 那么 自动 其父 类中 进行 查找 继承 父类 调用 父类 方法 访问 父类 属性 完成 整个 集成 过程 子类 需要 调用 构造函数 子类 显式 调用 父类 构造方法 父类 构造函数 初始化 一些 属性 出现 问题 如果 子类 父类 构造函数 子类 其实 重写 父类 构造函数 如果 显式 调用 父类 构造函数 父类 构造函数 不会 执行 导致 子类 实例 访问 父类 初始化 方法 初始 变量 出现 问题 class def __ init __ self self namea aaa def funca self print function self nameaclass def __ init __ self self nameb bbb def funcb self print function self namebb print namebb funcb funca 结果 bbbfunction bbbtraceback most recent call last file workbench python mypythonproject test study overwrite method py line 19 in module print funca file workbench python mypythonproject test study overwrite method py line in funca print function self nameaattributeerror instance has no attribute namea 子类 构造函数 重写 构造方法 没有 任何 关于 初始化 父类 namea 属性 代码 为了 达到 预期 效果 子类 构造方法 必须 调用 其父 构造方法 进行 基本 初始化 两种 方法 达到 这个 目的 调用 超类 构造方法 绑定 版本 或者 使用 super 函数 方法 调用 绑定 超类 构造方法 修改 代码 多增 一行 class def __ init __ self self namea aaa def funca self print function self nameaclass def __ init __ self 一行 解决 问题 .__ init __ self self nameb bbb def funcb self print function self namebb print namebb funcb funca 如上 注释 一行 解决 问题 直接 使用 父类 名称 调用 构造函数 即可 这种 方法 叫做 调用 父类 绑定 构造方法 调用 一个 实例 方法 方法 self 参数 自动 绑定 实例 称为 绑定 方法 如果 直接 调用 方法 比如 .__ init 那么 没有 实例 绑定 这样 可以 自由 提供 需要 self 参数 这种 方法 称为 绑定 unbound 方法 通过 当前 实例 作为 self 参数 提供 绑定 方法 使用 其父 构造方法 所有 实现 从而 namea 变量 设置 方法 使用 super 函数 修改 代码 这次 需要 增加 原来 代码 增加 父类 需要 继承 object 对象 class object def __ init __ self self namea aaa def funca self print function self nameaclass def __ init __ self 一行 解决问题 super self .__ init __ self nameb bbb def funcb self print function self namebb print namebb funcb funca 如上 注释 新增 代码 其中 第一句 继承 object 这样 才能 使用 super 函数 因为 这是 python 新式 支持 特性 当前 对象 可以 作为 super 函数 参数 使用 调用函数 返回 对象 任何 方法 调用 超类 方法 不是 当前 方法 super 函数 返回 一个 super 对象 这个 对象 负责 进行 方法 解析 解析 过程 其会 自动 查找 所有 父类 以及 父类 父类 方法 直观 方法 可以 一次 初始化 所有 超类 super 函数 超累 直接 调用 绑定 方法 直观 但是 最大 有点 如果 子类 继承 多个 父类 需要 使用 一次 super 函数 可以 然而 如果 没有 这个 需求 直接 使用 .__ init __ self 直观 一些
1309,Python封装的常用日期函数,python 封装 常用 日期 函数 处理 日志 数据 经常 日期 进行 进行 计算 比如 日期 加上 天数 日期 相差 天数 日期 对应 计算 本文 收集 几个 常用 python 日期 功能 函数 一直 更新 直接 代码 文件名 dateutil py 函数 功能 可以 直接 查看 注释 encoding utf8 author crazyant version 2013 10 12 import datetime time 定义 日期 格式 可以 自己 一下 比如 改成 format date -% -% format datetime -% -% def getcurrentdate 获取 当前 日期 2013 09 10 这样 日期 字符串 return time strftime format date time localtime time time def getcurrentdatetime 获取 当前 时间 2013 09 10 11 22 11 这样 时间 年月日 时分秒 字符串 return time strftime format datetime time localtime time time def getcurrenthour 获取 当前 时间 小时数 比如 如果 当前 下午 16 返回 16 currentdatetime getcurrentdatetime return currentdatetime def getdateelements sdate 输入 日期 字符串 返回 一个 结构 体组 包含 日期 各个 分量 输入 2013 09 10 或者 2013 09 10 22 11 22 返回 time struct time tm year 2013 tm mon tm mday tm hour 21 tm min 22 tm sec 33 tm wday tm yday 91 tm isdst dformat if judgedateformat sdate return none elif judgedateformat sdate dformat format date elif judgedateformat sdate dformat format datetime sdate time strptime sdate dformat return sdatedef getdatetonumber date1 日期 字符串 减号 冒号 去掉 输入 2013 04 05 返回 20130405 输入 2013 04 05 22 11 23 返回 20130405221123 return date1 replace replace replace def judgedateformat datestr 判断 日期 格式 如果 -% -% 格式 返回 如果 -% -% 返回 否则 返回 参数 datestr 日期 字符串 try datetime datetime strptime datestr format date return except pass try datetime datetime strptime datestr format datetime return except pass return 0def minustwodate date1 date2 两个 日期 相减 获取 相减 datetime timedelta 对象 结果 可以 直接 访问 属性 days seconds microseconds if judgedateformat date1 or judgedateformat date2 return none d1elements getdateelements date1 d2elements getdateelements date2 if not d1elements or not d2elements return none d1 datetime datetime d1elements tm year d1elements tm mon d1elements tm mday d1elements tm hour d1elements tm min d1elements tm sec d2 datetime datetime d2elements tm year d2elements tm mon d2elements tm mday d2elements tm hour d2elements tm min d2elements tm sec return d1 d2def dateaddindays date1 addcount 日期 加上 或者 减去 一个 数字 返回 一个 日期 参数 date1 计算 日期 参数 addcount 增加 或者 减去 数字 可以 负数 表示 相减 try addtime datetime timedelta days int addcount d1elements getdateelements date1 d1 datetime datetime d1elements tm year d1elements tm mon d1elements tm mday datenew d1 addtime return datenew strftime format date except exception as print return nonedef is leap year pyear 判断 输入 年份 是否是 闰年 try datetime datetime pyear 29 return true except valueerror return false def datediffindays date1 date2 获取 两个 日期 相差 天数 如果 date1 大于 date2 返回 正数 否则 返回 负数 minusobj minustwodate date1 date2 try return minusobj days except return nonedef datediffinseconds date1 date2 获取 两个 日期 相差 秒数 minusobj minustwodate date1 date2 try return minusobj days 24 3600 minusobj seconds except return nonedef getweekofdate pdate 获取 日期 对应 输入 一个 日期 返回 一个 数字 范围 其中 代表 周日 pdateelements getdateelements pdate weekday int pdateelements tm wday if weekday weekday return weekdayif __ name __ __ main __ 一些 测试代码 print judgedateformat 2013 04 01 print judgedateformat 2013 04 01 21 22 33 print judgedateformat 2013 04 31 21 22 33 print judgedateformat 2013 xx print -- print datetime datetime strptime 2013 04 01 -% -% print elements print getdateelements 2013 04 01 21 22 33 print minus print minustwodate 2013 03 05 2012 03 07 days print datediffinseconds 2013 03 07 12 22 00 2013 03 07 10 22 00 print type getcurrentdate print getcurrentdatetime print datediffinseconds getcurrentdatetime 2013 06 17 14 00 00 print getcurrenthour print dateaddindays 2013 04 05 print getdatetonumber 2013 04 05 print getdatetonumber 2013 04 05 22 11 33 print getweekofdate 2013 10 01 转载 注明 来源 http crazyant net 1309 html
1319,python执行shell的两种方法,python 执行 shell 两种 方法 两种 方法 可以 python 执行 shell 程序 方法 一是 使用 python commands 方法 二则 使用 subprocess 两个 包均 python 现有 内置 模块 使用 python 内置 commands 模块 执行 shellcommands python os popen 进行 封装 使用 shell 命令 字符串 作为 参数 返回 命令 结果 数据 以及 命令 执行 状态 命令 目前 已经 废弃 subprocess 替代 coding utf created on 2013 11 22 author crazyant net import commandsimport pprintdef cmd exe cmd string print will exe cmd cmd cmd string return commands getstatusoutput cmd string if __ name __ __ main __ pprint pprint cmd exe ls la 使用 python 最新 subprocess 模块 执行 shellpython 目前 已经 废弃 os system os spawn os popen popen2 commands 执行 其他 语言 命令 subprocesss 推荐 方法 subprocess 允许 创建 很多 进程 创建 时候 指定 进程 和子 进程 输入 输出 错误 输出 管道 执行 后能 获取 输出 结果 执行 状态 coding utf created on 2013 11 22 author crazyant net import shleximport datetimeimport subprocessimport timedef execute command cmdstring cwd none timeout none shell false 执行 一个 shell 命令 封装 subprocess popen 方法 支持 超时 判断 支持 读取 stdout stderr 参数 cwd 运行 命令 更改 路径 如果 设定 进程 直接 更改 当前 路径 cwd timeout 超时 时间 支持 小数 精度 0.1 shell 是否 通过 shell 运行 returns return code raises exception 执行 超时 if shell cmdstring list cmdstring else cmdstring list shlex split cmdstring if timeout end time datetime datetime now datetime timedelta seconds timeout 没有 指定 标准 输出 错误 输出 管道 因此 打印 屏幕 sub subprocess popen cmdstring list cwd cwd stdin subprocess pipe shell shell bufsize 4096 subprocess poll 方法 检查 进程 是否 结束 如果 结束 设定 返回 放在 subprocess returncode 变量 while sub poll is none time sleep 0.1 if timeout if end time datetime datetime now raise exception timeout cmdstring return str sub returncode if __ name __ __ main __ print execute command ls 可以 popen 指定 stdin stdout 一个 变量 这样 直接 接收 输出 变量值 总结 python 执行 shell 有时候 必须 比如 使用 python 线程 机制 启动 不同 shell 进程 目前 subprocess python 官方 推荐 方法 支持 功能 推荐 大家 使用 转载 注明 来源 http crazyant net 1319 html
1321,Python访问MySQL封装的常用类,python 访问 mysql 封装 常用 python 访问 mysql 比较简单 细节 参考 一篇 文章 链接 自己 平时 就用到 两个 mysql 函数 查询 更新 下面 自己 常用 函数 封装 大家 拷贝 过去 直接 可以 使用 文件名 dbutil py encoding utf8 author crazyant net version 2013 10 22 封装 mysql 常用 函数 import mysqldbclass db def __ init __ self db host db port db user db pwd db name self db host db host self db port db port self db user db user self db pwd db pwd self db name db name self conn self getconnection def getconnection self return mysqldb connect host self db host 设置 mysql 地址 port self db port 设置 端口号 user self db user 设置 用户名 passwd self db pwd 设置 密码 db self db name 数据库 charset utf8 设置 编码 def query self sqlstring cursor self conn cursor cursor execute sqlstring returndata cursor fetchall cursor close self conn close return returndata def update self sqlstring cursor self conn cursor cursor execute sqlstring self conn commit cursor close self conn close if __ name __ __ main __ db db 127.0 0.1 3306 root wordpress print db query show tables 使用 方法 文件 下面 main 函数 使用 query 执行 select 语句 获取 结果 或者 使用 update 进行 insert delete 操作
1326,[织梦DEDE迁移]读取织梦MySQL生成所有文章链接,织梦 dede 迁移 读取 织梦 mysql 生成 所有 文章 链接 广告 本人 承接 迁移 织梦到 wordpress 业务 本文 阐述 从织 mysql 数据库 读取数据 生成 所有 文章 链接 方法 本文 使用 封装 mysql 常用 函数 一个 模块 dbutil 代码 链接 确认 链接 组成 结构 这个 信息 记录 dede 分类 dede arctype namerule 字段 执行 sql 语句 select namerule from dede arctype 看到 返回 结果 一个 一般 没有 修改 typedir aid html 意思 链接 以下 组成 typedir 类型 目录 来源于 dede arctype typedir 字段 文章 发布 时间 来源于 dede archives pubdate 字段 aid 文章 id 来源于 dede archives id 字段 读取 mysql 拼凑 url 大致 过程 读取 mysql dede arctype dede archives 得到 所有 链接 信息 包括 文章 id 类型 名称 类型 目录 标题 发布 日期 自定义 文件名 对于 一个 链接 根据 步骤 介绍 装备 链接 至此 已经 拿到 所有 链接 id 链接 标题 链接 url encoding utf8 from common import dbutilimport pprintimport datetimedbutil dbutil db 127.0 0.1 3306 root oiayafnq lwqn site home url http crazyant net class link def __ init __ self linkid title linkurl self linkid linkid self title title self linkurl linkurl def __ str __ self strv n% n% self linkid self title self linkurl return strvclass dedelinks def __ init __ self self alllinks def getdbarticlesinfo self 获取 数据库 链接 信息 以及 对应 分类 rs dbutil query select dede archives id dede arctype typename dede arctype typedir typeid title pubdate filename from dede archives dede arctype where dede archives typeid dede arctype id return rs def equiplink self typedir urldate filename linkid 根据 分类目录 发布 文章 日期 自定义 连接 可以 为空 链接 id 拼接 一个 url article date str datetime date fromtimestamp urldate replace print filename link dir typedir article date article date if filename strip link html link dir filename else link html link dir linkid link link replace cmspath site home url return link def getalldedelinks self rs self getdbarticlesinfo for row in rs linkid typename typedir typeid title pubdate filename row linkurl self equiplink typedir pubdate filename linkid linknode link linkid title linkurl self alllinks append linknode def process self self getalldedelinks if __ name __ __ main __ dlinks dedelinks dlinks process for linknode in dlinks alllinks print linknode 其他 模块 可以 访问 模块 采用 dlinks alllinks 访问 所有 链接 其中 每个 列表 元素 包括 链接 id 链接 标题 链接 url 转载 注明 来源 织梦 dede 迁移 读取 织梦 mysql 生成 所有 文章 链接
1337,mysql根据A表更新B表的方法,mysql 根据 更新 方法 最近 遇到 一个 需求 mysql 表都 id age 现在 读取 age 字段 update 对应 id age 字段 直接 想到 一种 方案 python 读取 获得 id age 形式 数据 然后 根据 每个 id age 依次 update 两个 分别 定义 数据 如下 定义 fieldtypecommentidint 11 namevarchar 20 ageint 11 数据 name1 02 name2 03 name3 04 name4 05 name5 0b 定义 fieldtypecommentidint 11 ageint 11 数据 112 213 314 415 51python 代码 实现 encoding utf8 author crazyant net 读取 id age 数据 然后 依次 更新 from common dbutil import dbdbutil db 127.0 0.1 3306 root test rs dbutil query select id age from table for row in rs idv age row print idv age update sql update table set age where id age idv print update sql dbutil update update sql print over 其实 一条 sql 语句 可以 搞定 代码 实在 简单 于是 网上 一下 mysql 不能 根据 一个 更新 一个 结果 发现 update 本身 支持 多个 更新 功能 update table table set table age table age where table id table id python 代码 显得 大炮 蚊子 多次 一举 转载 注明 来源 链接
1345,MySQL一条语句更新多个表的方法,mysql 一条 语句 更新 多个 方法 mysql 本身 支持 一条 update 语句 更新 多个 有时候 这是 非常 有用 一个 特性 multiple table syntaxupdate low priority ignore table references set col name1 expr1 default col name2 expr2 default ... where where condition pre 于是 继续 table references 说明 table references escaped table reference escaped table reference ... escaped table reference table reference oj table reference table reference table factor join tabletable factor tbl name as alias index hint table subquery as alias table references 可以 看到 update 关键词 可以 多个 每个 可以 个子 查询 可以 join 语句 一个 尝试 一篇 文章 已经 用到 语法 update table table set table age table age where table id table id 语句 table 可以 换成 查询 join 子句 比如 update table select id age from table as tb set table age tb age where table id tb id mysql update 官方 文档 http dev mysql com doc refman 5.0 en update html 转载 注明 来源 链接
1355,MySQL数据导入导出实例教程手册,mysql 数据 导入 导出 实例教程 手册 mysqldump mysql 自带 一个 数据 导入 导出 工具 官方 注释 shell mysqldump options db name tbl name ... shell mysqldump options -- databases db name ... shell mysqldump options -- all databases 使用 mysqldump 命令 整个 数据库 导出 mysqldump 127.0 0.1 3306 root p123456 crazyant -- skip lock tables crazyant sql 其中 后面 主机名 后面 端口号 后面 用户名 后面 密码 crazyant 导出 数据库 由于 导出 过程 出现 这个 错误 mysqldump got error 1044 access denied for user root 127.0 0.1 to database crazyant when using lock table 所以 最后 加上 -- skip lock tables 这个 选项 没有 错误 mysqldump 命令 导出 设定 需要 导出 有时候 一个 数据库 中有 一些 我们 不想 导出 这时候 可以 使用 mysqldump -- ignore table 命令 设定 过滤 参数 用法 如下 -- ignore table name do not dump the specified table to specify more than one table to ignore use the directive multiple times once for each table each table must be specified with both database and table names -- ignore table database table 可以 看出 用法 -- ignore table database table 每次 只能 指定 一个 如果 指定 多个 选项 需要 多次 使用 实例 mysqldump 127.0 1.1 3306 root p123456 crazyant -- skip lock tables -- ignore table crazyant table1 -- ignore table crazyant table2 -- ignore table crazyant table3 -- ignore table crazyant table4 crazyant sql 使用 mysqldump 命令 导出 个表 指定 方法 可以 mysqldump database 后面 跟上 导出 导出 单个 mysqldump 127.0 0.1 3306 root p123456 -- skip lock tables crazyant table dump table sql 可以 多个 导出 空格 分开 它们 即可 mysqldump 127.0 0.1 3306 root p123456 -- skip lock tables crazyant table table dump two tables sql 可以 看出 只要 database name tablename1 tablename2 tablename3 方式 写出 导出 数据库 即可 使用 mysqldump 命令 导出 结构 方法 mysqldump 还有 一个 选项 能够 导出 结构 导出 内容 -- no data no row information 使用 实例 mysqldump -- opt 127.0 0.1 3306 root p123456 crazyant -- skip lock tables 使用 source 命令 导入 数据 使用 mysql source 命令 可以 mysqldump 导出 结果 直接 load 数据表 里面 使用 方法 如下 mysql 127.0 1.1 3306 root p123456mysql use crazyant mysql source home crazyant net mysqldump crazyant sql 这样 完成 导入 如果 全量 导入 有时候 必要 使用 truncate table 方式 数据 清空 总结 使用 mysql 自带 mysqldump source 命令 能够 方便 数据库 数据 导出 能够 导出 数据 导入到 库中 mysqldump 官方 文档 地址 http dev mysql com doc refman 5.1 en mysqldump html 转载 注明 来源 http crazyant net mysql 1355 html
1372,chrome自动刷新网页插件：Auto Refresh Plus,chrome 自动 刷新 网页 插件 auto refresh plus hadoop 执行 进度 日志 网页 上能 查看 为了 想要 查看 最新 进展 经常 需要 页面 刷新 看到 最新 数据 于是 一直 就是 f5 刷新 刷新 今天 想到 应该 现成 插件 能够 使用 chrome 应用 商店 里面 搜索 refresh 看到 这么 扩展 程序 auto refresh plus 使用 方法 设定 刷新 时间 间隔 start 按钮 自动 时间 刷新 网页 设定 一下 刷新 时间 然后 start 网页 一直 时间 进行 刷新 非常 好用 转载 注明 来源 http crazyant net 1372
1390,Python内置函数map、reduce、filter在文本处理中的应用,python 内置 函数 map reduce filter 文本处理 应用 文件 很多 组成 这些 组成 一个 列表 python 提供 处理 列表 有用 三个 函数 map reduce filter 因此 文本处理 可以 使用 三个 函数 达到 代码 更加 精简 清晰 这里 map reduce python 内置 函数 hadoop map reduce 函数 没有 关系 不过 使用 目的 有点 类似 map 函数 预处理 reduce 函数 一般 聚合 map reduce filter 文本处理 使用 下面 一个 文本文件 内容 列是 id 列是 权重 我们 目标 获取 所有 id 奇数 这些 权重 翻倍 最后 返回 权重 总和 id 键值 权重 1name1value1112name2value2123name3value3134name4value4145name5value5156name6value6167name7value7178name8value8189name9value91910name10value1020 使用 filter map reduce 函数 代码 如下 coding utf8 created on 2013 12 15 author www crazyant net import pprintdef read file file path 读取 文件 一行 分割 返回 列表 with open file path as fp for line in fp fields line split yield fields fp close def is even lines fields 判断 该行 是否 第一列 数字 偶数 return int fields 0def double weights fields 一行 权重 这一字 翻倍 fields int fields return fieldsdef sum weights sum value fields 累加 数字 数字 sum value 上面 返回 sum value sum value int fields return sum valueif __ name __ __ main __ 读取 文件 所有 file lines for in read file test data print 文件 原始 pprint pprint file lines print ---- 过滤 id 偶数 odd lines filter is even lines file lines print 过滤 id 偶数 pprint pprint odd lines print ---- 每行 权重 翻倍 double weights lines map double weights odd lines print 每行 权重 翻倍 pprint pprint double weights lines print ---- 计算 所有 权重 由于 传给 sum 函数 每个 元素 一个 列表 所以 需要 提供 累加 初始值 这里 指定 sum val reduce sum weights double weights lines print 计算 每行 权重 综合 print sum val 运行 结果 文件 原始 name1 value1 11 name2 value2 12 name3 value3 13 name4 value4 14 name5 value5 15 name6 value6 16 name7 value7 17 name8 value8 18 name9 value9 19 10 name10 value10 20 ---- 过滤 id 偶数 name2 value2 12 name4 value4 14 name6 value6 16 name8 value8 18 10 name10 value10 20 ---- 每行 权重 翻倍 name2 value2 24 name4 value4 28 name6 value6 32 name8 value8 36 10 name10 value10 40 ---- 计算 每行 权重 综合 160 map reduce filter 函数 特点 filter 函数 列表 参数 返回 满足条件 元素 组成 列表 类似 sql where 1map 函数 列表 参数 每个 元素 处理 返回 这些 处理 元素 组成 列表 类似 sql select 2reduce 函数 列表 参数 列表 进行 累计 汇总 平均 聚合 函数 类似 sql select sum average 这些 函数 官方 解释 map function iterable ... apply function to every item of iterable and return list of the results if additional iterable arguments are passed function must take that many arguments and is applied to the items from all iterables in parallel if one iterable is shorter than another it is assumed to be extended with none items if function is none the identity function is assumed if there are multiple arguments map returns list consisting of tuples containing the corresponding items from all iterables kind of transpose operation the iterable arguments may be sequence or any iterable object the result is always list reduce function iterable initializer apply function of two arguments cumulatively to the items of iterable from left to right so as to reduce the iterable to single value for example reduce lambda calculates the left argument is the accumulated value and the right argument is the update value from the iterable if the optional initializer is present it is placed before the items of the iterable in the calculation and serves as default when the iterable is empty if initializer is not given and iterable contains only one item the first item is returned roughly equivalent to def reduce function iterable initializer none it iter iterable if initializer is none try initializer next it except stopiteration raise typeerror reduce of empty sequence with no initial value accum value initializerfor in it accum value function accum value return accum value filter function iterable construct list from those elements of iterable for which function returns true iterable may be either sequence container which supports iteration or an iterator if iterable is string or tuple the result also has that type otherwise it is always list if function is none the identity function is assumed that is all elements of iterable that are false are removed note that filter function iterable is equivalent to item for item in iterable if function item if function is not none and item for item in iterable if item if function is none see itertools ifilter and itertools ifilterfalse for iterator versions of this function including variation that filters for elements where the function returns false 参考资料 http docs python org library functions htmlhttp www oschina net code snippet 111708 16145 转载 注明 来源 http crazyant net 1390 html
1397,Python批量重命名文件的方法,python 批量 重命名 文件 方法 用到 os 两个 接口 列出 文件夹 所有 文件 包含 目录 os listdir path return list containing the names of the entries in the directory given by path the list is in arbitrary order it does not include the special entries and .. even if they are present in the directory availability unix windows changed in version 2.3 on windows nt 2k xp and unix if path is unicode object the result will be list of unicode objects undecodable filenames will still be returned as string objects2 文件 进行 重命名 os rename src dst rename the file or directory src to dst if dst is directory oserror will be raised on unix if dst exists and is file it will be replaced silently if the user has permission the operation may fail on some unix flavors if src and dst are on different filesystems if successful the renaming will be an atomic operation this is posix requirement on windows if dst already exists oserror will be raised even if it is file there may be no way to implement an atomic rename when dst names an existing file availability unix windowsimport osdirpath workbench crazyant net myfiles for fname in os listdir dirpath newfname fname newfpath dirpath newfname oldfpath dirpath fname os rename oldfpath newfpath 其实 就是 os listdir 读取 里面 所有 文件 然后 os rename 进行 文件 重命名 即可 实现 python os 模块 官方 介绍 http docs python org library os html 转载 注明 来源 http crazyant net 1397 html
1404,HIVE的几个使用技巧,hive 几个 使用 技巧 小表 大表 如果 很小 mapjoin join 时候 小表写 join 前面 这样 hive 小表 载入 内存 然后 扫描 大表 如果 足够 使用 map join 设定 map 并发 保证 一次 map 结束 根据 输入 数据量 估计 reduce tasks 数目 根据 运行 中间 数据 情况 修正 http superlxw1234 iteye com blog 15828803 临时 表能 提升 计算速度 处理 海量 数据 我们 通常 很多 大表 进行 操作 基于 hadoop 现在 局限性 不能 分布式 并行 数据库 那样 分布式 环境 利用 数据 局部性 hadoop 对于 大表 只能 全表 扫描 筛选 数据 一次 对大表 扫描 苦不堪言 最后 知道 真相 眼泪 掉下来 所以 我们 用到 编码 经常 用到 重构 技巧 提取 公共 变量 hive 就是 创建 临时 union all 数据 对齐 使用 支持 top level 以及 各个 select 字段名 属性 必须 严格 一致 hive 支持 数据库 查询 比如 database arch table1 database algo table2 进行 joina 可以 只要 用户 两张 select 权限 即可 用户 需要 database table 方式 指定 数据库 hive 支持 本地 执行 模式 数据量 时候 本地 执行 提交 集群 执行 效率 提升 很大 set hive exec mode local auto true 默认 false 一个 job 满足 如下 条件 才能 真正 使用 本地 模式 job 输入 数据 大小 必须 小于 参数 hive exec mode local auto inputbytes max 默认值 128mb job map 处理 文件 大于 参数 hive exec mode local auto input files max 默认值 job reduce 必须 或者 不管 用户 设置 还是 系统 推测 出来 参数 hive mapred local mem 默认 设置 local mode mapper reducer task jvm heap size7 null 数字 相加 问题 sum shop gmvcount gmvcount new auc shop gmvcount spu gmv cnt gmv cnt 这样 统计 结果 shop gmvcount null 即使 后面 gmvcount new 不为 null 那么 总计 结果 这个 计算 仍然 null 修改 方法 采用 sum coalesce shop gmvcount cast as bigint coalesce gmvcount new cast as bigint 这样 方式 coalesce 函数 类似 oracle 数据库 里面 nvl 参考 文章 hive 多维 统计分析 应用 技巧 总结 http my oschina net leejun2005 blog 121945hive 本地 mrhttp superlxw1234 iteye com blog 1703546hive 优化 ------ 控制 hive 任务 map reduce http superlxw1234 iteye com blog 1582880hive tipshttp blog hesey net 2012 04 hive tips html 本文 收集 网络 转载 注明 来源 http crazyant net 1404 html
1409,[转]Hive中对group结果分组取limit N值的实现,hive group 结果 分组 limit 实现 转载 引言 数据处理 遇到 全国 各个 省份 效果 数据 排序 limit 100 需求 hive 自带 功能 无法 实现 网上 文章 方法 直接 拷贝 过来 实现 其中 代码 复制 过来 可以 maven 打成 jar 然后 hive 即可 使用 观察 代码 可以 看出 由于 各个 分组 top 数据 因此 可以 先用 distribute sort 进行 数据 分区 排序 各个 reduce 节点 由于 运行 单个 jvm 虚拟机 所以 java 类中 使用 static 变量 即可 进行 整个 处理过程 数据共享 于是 comparedcolumn 字符串 数组 用来 记录 一组 key 同时 rownum 记录 一组 最大 标记 最终 使用 数字 标记 数字 比较 取出 group limit 数目 背景 假设 一个 学生 各门 成绩 表单 应用 hive 取出 成绩 100 学生 成绩 这个 就是 典型 分组 top 需求 解决 思路 对于 取出 成绩 100 学生 成绩 针对 学生 成绩表 根据 学科 成绩 order by 排序 然后 排序 成绩 执行 自定义 函数 row number 必须 一个 或者 多个 参数 row number col1 .... 作用 指定 进行 分组 生成 序列 row number 两条 记录 相同 序列 否则 重新 计数 只要 返回 row number 返回值 小于 100 成绩 记录 可以 返回 每个 单科 成绩 一百 学生 解决 过程 成绩表 结构 create table score table subject string student string score int partitioned by date string 如果 查询 2012 每科 成绩 100 学生 成绩 sql 如下 create temporary function row number as com blue hive udf rownumber select subject score student from select subject score student from score where dt 2012 order by subject socre desc order scorewhere row number subject 100 com blue hive udf rownumber 自定义 函数 函数 作用 指定 进行 分组 生成 序列 这里 根据 每个 科目 所有 成绩 生成 序列 序列 开始 自增 假设 成绩表 记录 如下 物理 80 张三 数学 100 李一 物理 90 张二 数学 90 李二 物理 100 张一 数学 80 李三 ..... 经过 order by 全局 排序 记录 如下 物理 100 张一 物理 90 张二 物理 80 张三 ..... 数学 100 李一 数学 90 李二 数学 80 李三 .... 接着 执行 row number 函数 返回值 如下 科目 成绩 学生 row number 物理 100 张一 物理 90 张二 物理 80 张三 ..... 数学 100 李一 数学 90 李二 数学 80 李三 .... 因为 hive 基于 mapreaduce 必须 保证 row number 执行 reducer 执行 上述 语句 保证 成绩表 记录 按照 科目 成绩 全局 排序 然后 reducer 执行 row number 函数 如果 map 执行 row number 那么 结果 错误 查看 row number 函数 map 还是 reducer 执行 可以 查看 hive 执行 计划 create temporary function row number as com blue hive udf rownumber explain select subject score student from select subject score student from score where dt 2012 order by subject socre desc order scorewhere row number subject 100 explain 不会 执行 mapreduce 计算 只会 显示 执行 计划 只要 row number 函数 reducer 执行 除了 使用 order by 全局 排序 配合 可以 使用 distribute by sort by distribute by 可以 相同 科目 成绩 记录 发送到 同一个 reducer sort by 可以 reducer 记录 排序 使用 order by 全局 排序 只有 一个 reducer 未能 充分利用 资源 相比之下 distribute by sort by 这里 性能 优势 可以 多个 reducer 排序 row number 计算 sql 如下 create temporary function row number as com blue hive udf rownumber select subject score student from select subject score student from score where dt 2012 distribute by subject sort by subject asc socre desc order scorewhere row number subject 100 如果 成绩 学院 字段 college 找出 学院 单科 成绩 一百 学生 解决 方法 如下 create temporary function row number as com blue hive udf rownumber explain select college subject score student from select college subject score student from score where dt 2012 order by college asc subject asc socre desc order scorewhere row number college subject 100 如果 成绩 学院 字段 college 找出 学院 总成绩 一百 学生 解决 方法 如下 create temporary function row number as com blue hive udf rownumber explain select college totalscore student from select college student sum score as totalscore from score where dt 2012 group by college student order by college asc totalscore desc order scorewhere row number college 100 row number 源码 函数 row number 必须 一个 或者 多个 参数 row number col1 .... 作用 指定 进行 分组 生成 序列 row number 两条 记录 相同 序列 否则 重新 计数 package com blue hive udf import org apache hadoop hive ql exec udf public class rownumber extends udf private static int max value 50 private static string comparedcolumn new string max value private static int rownum public int evaluate object ... args string columnvalue new string args length for int args length ++ columnvalue args tostring if rownum for int columnvalue length ++ comparedcolumn columnvalue for int columnvalue length ++ if comparedcolumn equals columnvalue for int columnvalue length ++ comparedcolumn columnvalue rownum return rownum ++ return rownum ++ 编译 打包 一个 jar usr local hive udf blueudf jar 然后 hive shell 使用 如下 add jar usr local hive udf blueudf jar create temporary function row number as com blue hive udf rownumber select subject score student from select subject score student from score where dt 2012 order by subject socre desc order scorewhere row number subject 100 转自 http www cnblogs com ggjucheng archive 2013 01 30 2868993 html 本文 地址 http crazyant net 1409 html
1413,《大数据时代》是一部科幻小说,数据 时代 一部 科幻小说 虽然 一直 使用 hadoop hive 技术 处理 级别 数据 认为 自己 属于 数据 领域 然而 对于 什么 数据 一直 模糊 概念 自己 处理 级别 数据 感觉 hadoop 技术 其实 就是 分布式计算 演变 不是 什么 新奇 事物 然而 最近 数据 时代 一书 作者 思维 商业 风险 掌控 方面 对大 数据 给出 自己 独特 见解 其中 有些 观点 有些 匪夷所思 然而 毕竟 作者 自己 看法 新颖 不是 随机样本 而是 全体 数据 数据 时代 来临 一切 数据 全体 数据 比如 之前 我们 统计 春运期间 哪里 车站 或者 乘客 流量 趋势 只能 通过 人工 方式 采样 几个 地区 车站 统计 人流量 然后 整体 情况 作出 预测 如今 通过 手机 gps 定位 百度 能够 收集 任何 一个 所在 位置 使用 最全 位置 信息 绘制 所有 流动 情况 正是 因为 目前 存储 能力 廉价 磁盘 计算能力 hadoop 计算技术 兴起 大幅 改进 带来 变革 只要 检测 数字化 存储 然后 分析 其中 规律 或者 预测 其中 蕴含 趋势 通过 获取 全量 数据 不是 局部 采样 能够 得到 全面 不留 任何 死角 信息 得到 决策 判断 更加 准确 往往 揭示 限于 局部 无法 察觉 规律 一叶障目 不见泰山 不识庐山真面目 只缘身在此山中 这些 人们 往往 由于 视野 见识 限制 无法 看到 事情 全貌 从而 做出 局限性 局部性 判断 认识 现在 如果 看到 整个 泰山 看到 庐山 全面 那么 人们 看到 可能 只是 雄伟 可能 还有 趋势 变迁 数据 人类 威胁 作者 一个 例子 未来 通过 数据 能够 预测 一个 人会 一周 犯罪 几率 然后 警察 提前 逮捕 此人 甚至 定罪 因为 通过 出行 电话 购物 行为表现 各种 信息 数据 发现 某种 犯罪 特征 极为 相近 判定 其要 犯罪 几率 非常 得出结论 看到 这里 倒像 感觉 作者 一部 科幻小说 未来 政府 可能 需要 一个 数据中心 一方面 通过 互联网 摄像头 传感器 刷卡 消费 记录 各种 信息 收集 几乎 方方面面 每个 所有 数据 另一方面 能够 建立 各种 犯罪 治安 暴力 事情 特征 通过 每个 行为 特征 对比 政府 能够 判定 这个 是否 将来 犯罪 是否 会酒 是否 逃税 从而 加重 这个 监控 甚至 起来 审问 为什么 将来 邻居 王小二 西瓜 商业 领域 同样 建立 每个 消费 数据 习惯 洗好 信息 一天 洗发水 出门 打开门 发现 货到付款 快递 已经 楼下 应该 感到 恐怖 还是 应该 高兴 作者 倒像 一个 科幻小说 构想 这么 一副 宏达 未来 世界 之后 防范措施 法律 指定 反垄断 实际 方案 进行 阐述 信誓旦旦 提到 未来 应该 制定 法律 应该 保护 人类 自由选择 行为 负责 权利 不能 过分 相信 数据 判定 某人 可能 有罪 结论 荒诞 有趣 自圆其说 实在 了不起 本书 真的 感觉 其实 有所 突出 就要 提出 自己 想法 哪怕 这个 想法 荒诞 错误 但是 只要 自己 想法 就要 敢于 提出 数据 技能 发展 作者 有些 观点 赞同 提到 目前 来说 数据 领域 兴起 阶段 因此 相当 一段时间 内大 数据 分析师 算法 人才 极为 稀缺 职位 同时 数据 技能 很快 发展 但是 非常 重要 技术 然而 随着 时间 发展 技术 不是 门槛 因为 各种 数据 教程 出现 并且 熟练掌握 这种 技术 人会 越来越 技术 变得 越来越 不值钱 一直 价值 不会 降低 数据 因为 数据 存放 时间 即使 很长 由于 分析 挖掘 想法 出现 这些 数据 蕴含 金矿 一次次 重复性 发现 出来 联系 个人 发展 首先 自己 数据 技能 目前 限于 简单 处理 没有 涉及 分析 挖掘 内涵 发现 规律 领域 涉足 数据 领域 只会 文本 分析 简单 处理 不够 需要 继续 深入 分析 领域 只是 表层 技术 而是 机器 学习 数据挖掘 领域 探索性 技术 或者 将来 可以 拥兵自重 数据 中间人 方式 谋生 比如 数据 采集 存储 整合 领域 活生生 例子 微博 同学 数据 采集 自游 职业 拿来 买卖 数据 不是 技能 换句话说 之前 金子 不是 挖矿 技能 总的来说 本书 一个 认为 处于 数据 领域 其实 只是 边缘化 来说 一些 见识 懂得 什么 数据 数据 究竟 以为 什么 为什么 数据 到底 带来 什么 变化 思想 提升 才能 带来 现实 改变 作者 毫无 束缚 天马行空 思想 感觉 确实 一个 广阔 天地 发挥 空间 非常 转载 注明 链接 http crazyant net 1413 html
1423,MapReduce文件切分个数计算方法,mapreduce 文件 切分 个数 计算方法 hadoop mapreduce 计算 第一个 阶段 inputformat 处理 文件 进行 切分 然后 每个 切分 传递 每个 map 任务 执行 本文 阐述 切分 个数 就是 map 任务 数目 计算方法 hadoop 首先 计算 每个 切分 大小 然后 使用 文件 大小 每个 切分 大小 决定 划分 总数 如果 不足 一个 切分 大小 当做 org apache hadoop mapred fileinputformat 给出 计算 每个 划分 大小 方法 protected long computesplitsize long goalsize long minsize long blocksize return math max minsize math min goalsize blocksize 其中 几个 变量 解释 如下 blocksize hdfs 存储 基本 单元 默认 64mb 或者 128mb minsize 用户 设置 最小 切分 大小 配置 项为 mapred min split size goalsize 计算公式 文件 大小 用户 设定 map 任务 个数 用户 间接 期望 大小 由此 可以 推断出 选定 策略 划分 大小 blocksize blocksize 小于 用户 期望 大小 用户 设定 最小值 也就是说 如果 用户 设定 最小值 太小 的话 使用 block size 作为 划分 大小 划分 大小 goalsize 用户 设定 map 任务 数目 那么 即使 出来 划分 大小 block size 使用 这个 时候 出现 两个 用户 设定值 最小值 期望值 hadoop 选择 两者 中大 那个 划分 大小 minsize 如果 用户 期望 还有 blocksize 用户 设定 最小值 那么 使用 这个 最小值 针对 几个 用户 可以 根据 输入 数据 情况 合理 设置 mapred min split size map tasks size 实现 优化 inputsplit blocksize 相同 非常 一种 方法 因为 需要 拆分 block 文章 地址 http crazyant net 1423 html
1426,Java使用lombok自动生成getter和setter方法,java 使用 lombok 自动 生成 getter setter 方法 lombok 可帮 编译 自动 生成 getter setter 方法 所以 我们 无需 编写 占据 很大 篇幅 getter setter 方法 下图 效果 明白 地址 http www projectlombok org download html
1428,MySQL 查看数据库中每个表占用的空间大小,mysql 查看 数据库 每个 占用 空间 大小 转自 http www oschina net question 12 36731 进去 指定 schema 数据库 存放 其他 数据库 信息 mysql use information schema database changed2 查询 所有 数据 大小 mysql select concat round sum data length 1024 1024 mb as data from tables +-----------+ data +-----------+ 6674.48 mb +-----------+ row in set 16.81 sec 查看 指定 数据库 实例 大小 比如说 数据库 forexpertmysql select concat round sum data length 1024 1024 mb as data from tables where table schema forexpert +-----------+ data +-----------+ 6542.30 mb +-----------+ row in set 7.47 sec 查看 指定 数据库 大小 比如说 数据库 forexpert member mysql select concat round sum data length 1024 1024 mb as data from tables where table schema forexpert and table name member +--------+ data +--------+ 2.52 mb +--------+ row in set 1.88 sec
1437,Hive使用TRANSFORM运行Python脚本总结,hive 使用 transform 运行 python 脚本 总结 python 环境 设置 可以 使用 add cachearchive 方法 tar gz 添加 分布式 缓存 hive 自动 解压 压缩包 但是 目录名 压缩包 名称 一样 add cachearchive env my workbench share python2.7 tar gz -- 这样 使用 using python2.7 tar gz bin python my py 一定 使用 distribute by 或者 cluster by 如果 加上 两个 关键词 那么 数据 分发 机器 如果 数据量 执行 很慢 但是 hive 0.8 一个 问题 distribute by cluster by 后面 只能 如果 多列 报错 如果 数据量 并且 数据 不能 拆分 只能 设置 mapred reduce tasks 如果 数据 可以 满足 结合律 那么 使用 查询 外面 聚合 一下 可以 解决 只能 问题 每个 python 脚本 不是 执行 reduce 所有 数据 每个 reducer 机器 很多 maper 机器 上取 数据 过来 之后 合并 一定 合并 文件 而会 因此 即使 设置 mapred reduce tasks 数值 python 程序 启动 进程 执行 每个 分片 执行 完毕 汇总 数据 也就是说 reducer 每个 python 脚本 启动 进程 处理 不同 数据 分片 -- 这个 问题 好久 仔细分析 结果 数据 发现 多么 领悟 self join 非常 耗时间 尤其 关联 规则 运算 时候 开始 启动 一个 self join 这样 tablea join tablea on id id join tablea on id id 这个 程序 很小 数据量 运行 小时 表示 极度 郁闷 然后 改进 tablea 数据表 直接 增加 id id 数值 两个 冗余 然后 改写 tablea join tablea on id id join tablea on id id 运行 时间 有所 减少 但是 还是 非常 运行 几十分钟 kill 真不知道 hive 怎么 实现 这个 语句 实在 办法 只好 hive 调用 transform python 脚本 使用 distribute by id 进行 分发 然后 每个 节点 每个 python 运行 两边 扫描 第一步 id key 数据 全部 存入 词典 内存 幸好 没爆 第二步 扫描 第一步 词典 取出 每个 id 直接 词典 中取 id id 数据 输出 这样 改进 非常 杀鸡 牛刀 真是 浪费资源 hive 为什么 self join 如此 耗时 真是 理解 本文 链接 http crazyant net 1437 html
1440,把HIVE程序优化30倍的经验,hive 程序 优化 30 经验 今天 遇到 一个 hive 需求 输入 只有 大概 160mb 需要 引用 一些 字典 文件 然后 输出 70 数据 典型 复杂 计算 由于 hive 无法 单独 实现 采用 transform python 脚本 实现 开始 map tasks 设置 结果 运行 40 分钟 结束 以下 一些 改进 过程 修改 mapred map tasks 无法 实现 修改 map tasks 数目 目的 迂回 办法 输入 数据 进行 分片 输入 数据 分片 87 这样 任务 map tasks 数目 变成 87 速度 大为 提升 每个 机器 处理 速度 减慢 输入 数据 按照 distribute by 如果 这样 那么 每个 机器 分到 数据 平均 导致 一些 聚合 操作 无法 减少 存储量 事先 输入 数据 进行 distribute by 分片 单个 机器 聚合 效果 非常 python 代码 优化 数据结构 由于 python 代码 需要 遍历 所有 数据 所以 最好 不要 每个 行都 查询 很多 词典 多次 相同 查询 保存 下来 共用 结果 数据 同时 key 词典 优化 dict 形式 这样 查询 效率高 并且 内存 增加 日志 跟踪 hadoop 脚本 可以 sys stderr 输出 一些 错误 日志 这样 不会 干扰 结果 数据 但是 保存 日志 记录 比如 写个 这样 函数 def logger msg curr time time strftime -% -% time localtime time time sys stderr write str curr time str msg 能够 记录时间 自己 想要 跟踪 信息 本文 地址 http crazyant net 1440 html
1451,向Hive程序传递变量的三种方法,hive 程序 传递 变量 三种 方法 外部 hive 程序 传递 变量 方法 使用 hive 编写程序 常用 方法 hive 语句 文件 然后 使用 hive filename hql 批量 执行 查询 语句 经常 需要 外部 参数 传入 hql 语句 替换 其中 变量 动态 执行 任务 比如 动态 设定 数据库 表名 时间 序列 变量 达到 脚本 泛化 执行 目的 方法 字符串 正则 模板 引擎 暴力 方式 替换 简单 暴力 方式 hql 文件 设定 table name 这样 变量 占位 然后 使用 调度 程序 比如 shell python java 语言 读取 整个 hql 文件 一个 字符串 替换 其中 变量 然后 使用 hive cmd str 执行 hive 命令 字符串 举例 代码 表格 表格 所示 表格 hive ql 文件 内容 use test select from student limit limit count 表格 python 脚本 读取 替换 执行 hive 程序 import os step1 读取 query ql 整个 文件 内容 ql source open query ql read step2 替换 其中 占位 变量 ql target ql source replace limit count 10 step3 使用 hive 方法 执行 替换 hql 语句 序列 os system hive ql target 方法 使用 系统 变量 或者 环境变量 通常 情况 使用 shell 调度 执行 hive 程序 hive 提供 可以 直接 读取 系统 env system 变量 方法 表格 所示 表格 使用 env system 读取 外部 环境变量 use test -- 使用 env varname 方法 读取 shell export 变量 select from student limit env limit count -- 使用 system varname 方法 读取 系统 变量 select system home as my home from student 这种 方式 比较 比如 shell 可以 配置 整个 项目 各种 路径 变量 hive 程序 使用 env 可以 直接 读取 这些 配置 方法 执行 hive 命令 传入 hivevar hiveconf 方法 hive 命令 执行 hive 程序 传递 命令行 参数 使用 hivevar hiveconf 两种 参数 选项 该次 执行 传入 外部 变量 其中 hivevar 专门 提供 用户 自定义 变量 hiveconf 包括 hive site xml 配置 hive 全局变量 表格 hivevar hiveconf 传递 变量 方法 hive hivevar file hive hivevar tbname hivevar count 10 filename hql hive hivevar cmd hive hivevar tbname hivevar count 10 select from hivevar tbname limit hivevar count hive hiveconf file hive hiveconf tbname hiveconf count 10 filename hql hive hiveconf cmd hive hiveconf tbname hiveconf count 10 select from hivevar tbname limit hivevar count 经常 使用 env hivevar 方法 前者 直接 hive 脚本 读取 shell export 变量 后者 脚本 当前 执行 进行 参数设置 本文 地址 http crazyant net 1451 html
1456,Hive中Order by和Sort by的区别是什么?,hive order by sort by 区别 什么 hive 基于 hadoop 执行 分布式 程序 普通 单机 程序 不同 一个 特点 就是 最终 数据 产生 多个 文件 每个 reducer 节点 处理 partition 自己 那份 数据 产生 结果 文件 导致 hadoop 环境 数据 进行 全局 排序 如果 hadoop 进行 order by 排序 导致 所有 数据 集中 一台 reducer 节点 然后 进行 排序 这样 可能 超过 单个 节点 磁盘 内存 存储 能力 导致 任务 失败 一种 替代 方案 放弃 全局 有序 而是 分组 有序 比如 求全 百度 最高 点击 排序 而是 每种 产品线 最高 点击 排序 使用 order by 引发 全局 排序 select from baidu click order by click desc 使用 distribute sort 进行 分组 排序 select from baidu click distribute by product line sort by click desc distribute by sort by 就是 替代 方案 distribute by 设定 key 数据 hash 分发 不同 reducer 机器 然后 sort by 同一个 reducer 机器 每组 数据 进行 局部 排序 order by 全局 有序 distribute sort 分组 有序 distribute sort 结果 按组 有序 全局 无序 输入 数据 经过 以下 两个 步骤 处理 根据 key 字段 hash 相同 数据 分发 相同 reducer 节点 每个 内部 排序 由于 每组 数据 key 进行 hash 存储 并且 组内 有序 可以 两种 用途 直接 作为 hbase 输入 导入到 hbase distribute sort 进行 orderby 阶段 实现 间接 全局 排序 不过 即使 distribute by 然后 sort by 这样 操作 如果 某个 分组 数据 太大 超出 reduce 节点 存储 限制 常常 出现 137 内存 溢出 错误 对大 数据量 排序 应该 避免 本文 地址 http crazyant net 1456 html
1459,从产品和技术的对比想到的,产品 技术 对比 想到 想到 产品 技术 关系 联想 大片 对比 概念 阴和阳 文科 理科 冲动 冷静 内功 外功 外表 内在 能力 素质 道德 科学 其中 一个 代表 内在 一个 代表 没有 没有 只有 无法 成型 一直 技术 出身 知道 产品 什么 意思 学校 时候 有个 技术 社团 招收 技术 产品 两个 方向 团员 感觉 技术 才能 积累 自己 能够 创造财富 产品 没什么 积累 好像 这个 时候 灵机一动 时刻 一片空白 不要 产品 因为 技术 不会 恐慌 不会 害怕 好像 手里 锄头 觉得 自己 不会 一样 工作 一年 发现 技术 只是 手段 只是 达成 目的 工具 一切 运行 技术 解决 只有 好少 一部分 分歧 冲突 处理 问题 解决方案 文档 遣词造句 写作技巧 交流 技巧 说服 方法 时间 管理 节奏 把握 这些 全是 技术 之外 但是 占用 大部分 时间 关键 问题 在于 别人 评判 认定 这些 东西 不是 技术 进行 回到 产品 技术 终于 领会到 只有 技术 自身 灵机一动 出来 东西 完全 不能 成为 产品 开发者 一个 东西 动机 往往 不是 因为 某个 需求 而是 因为 觉得 自己 拥有 技术 出来 什么 内容 第二个 方面 即使 开发者 出来 一个 像模像样 东西 没有 推广 营销 东西 只是 闭门造车 成为 不了 大众 接收 东西 产品 就是 美观 广告 周知 实用 代名词 目的 就是 为了 解决 实际 需要 产出 可以 做到 极致 美观 简洁 这样 所有人 从中 受益 一切 乔布斯 传中 感到 强烈 震撼 乔布斯 技术 产品 经理 做出 伟大 技术 产品 做法 是从 产品 出发 以要 什么 出发 外观设计 极致 简洁 发挥 不能 简洁 然后 督促 技术 产品 设计 目标 实现 对于 用户 来说 产品 他们 接触 使用 什么 技术 运行 什么 高深 代码 没有 关系 今天 开始 晒太阳 徒步 行走 今天 开始 关注 产品 关注 素质 关注 思想 关注 关注 写作 关注 交谈 一切 在于 调和 不能 顾此失彼 产品 技术 他俩 一对 双胞胎 正如 阴和阳 本文 地址 http crazyant net 1459 html
1465,将网站的创意变成钱的过程,网站 创意 变成 过程 一个 网站 主题 有些 认为 围绕 一个 主题 建站 赚钱 这种 想法 合适 应该 围绕 一个 充满 激情 主题 开发 一个 网站 如果 热爱 话题 坚持下去 继续 写作 增加 内容 然后 带来 收入 如果 热爱 最终 放弃 这个 网站 收入 不了了之 最大化 压缩 主题 应该 创意 压缩 最小 主题 例如 如果 一个 关于 家长 网站 可以 缩小成 一个 关于 养育 孩子 网站 特殊 需要 孩子 养育 一个 网站 名称 尽可能 一个 可爱 玩弄 文字 似的 名称 如果 网站 名字 告诉 读者 什么 网站 搜索引擎 喜欢 读者 容易 发现 注册 域名 网站 名称 变成 一个 网站 url 过程 一个 虚拟主机 或者 服务器 存放 网站 代码 网站 放在 一个 虚拟主机 或者 服务器 然后 全世界 访问 网站 添加 点击 付费 广告 比如 使用 百度 联盟 通常 点击 付费 效果 加入 网站 联盟 网站 联盟 可以 网站 所有者 广告主 取得联系 网站 联盟 注册 之后 可以 搜索 哪些 广告 适合 网站 例如 如果 网站 关于 糖果 应该 寻找 卖东西 糖果 模具 成分 包装 广告主 等等 网站 增加 广告 链接 找到 合适 广告 网站 添加 广告 代码 链接 网站 放置 横幅 文字广告 用户 点击 广告 商家 东西 佣金 网站 销售 广告 空间 如果 网站 变得 受欢迎 拥有 广泛 读者 可以 其他人 网站 提供 私人 广告 空间 宣传 他们 产品 服务 网站 价格 取决于 读者 数量 广告 持续时间 位置 尺寸 广告 文章 地址 http www ehow com how 4913958 make money website idea html 本文 地址 http crazyant net 1465 html
1470,Hive的left join、left outer join和left semi join三者的区别,hive left join left outer join left semi join 三者 区别 hive join 文档 说明 地址 https cwiki apache org confluence display hive languagemanual% 2bjoins 以下 两个 测试数据 表建表 语句 use test drop table if exists table1 create table table1 student no bigint comment student name string comment 姓名 comment test 学生 信息 row format delimitedfields terminated by lines terminated by stored as textfile drop table if exists table2 create table table2 student no bigint comment class no bigint comment 课程 comment test 学生 选课 信息 row format delimitedfields terminated by lines terminated by stored as textfile load data local inpath data table1 txt overwrite into table table1 load data local inpath data table2 txt overwrite into table table2 测试数据 hive left join 测试数据 测试 left join 语句 select from table1 left outer join table2 on table1 student no table2 student no 结果 failed parse error line 22 cannot recognize input near left join table2 in join type specifier 我用 hive 版本 0.8 支持 直接 left join 写法 测试 left outer join 语句 select from table1 left outer join table2 on table1 student no table2 student no 结果 name1 111 name1 121 name1 132 name2 112 name2 143 name3 153 name3 124 name4 134 name4 125 name5 145 name5 166 name6 null null 可以 看到 left outer join 左边 数据 列出来 如果 右边 没有 对应 写成 null 同时 注意 如果 左边 主键 右边 找到 那么 结果 得到 比如 这里 主键 显示 右边 测试 left semi join 语句 select from table1 left semi join table2 on table1 student no table2 student no 结果 name12 name23 name34 name45 name5 可以 看到 打印 左边 表中 规律 如果 主键 右边 表中 存在 打印 否则 过滤 结论 hive 支持 left join 写法 hive left outer join 如果 右边 多行 左边 对应 一行 映射 输出 如果 右边 没有 左边 对应 输出 左边 右边 表字 null hive left semi join 相当于 sql in 语句 比如 上面 测试 语句 相当于 select from table1 where table1 student no in table2 student no 注意 结果 中是 没有 本文 地址 http crazyant net 1470 html
1587,MySQL执行Select语句将结果导出到文件的方法,mysql 执行 select 语句 结果 导出 文件 方法 如果 mysql 整个 数据 导出 可以 参照 文章 http crazyant net 1355 html 然而 遇到 场景 需要 执行 一个 sql 语句 然后 sql 语句 结果 输出 文件 方法 使用 mysql select into outfile tmp rs txt from tb name 句型 可行 方法 举个 例子 执行 以下 sql 语句 mysql h10.10 10.10 ucrazyant p123456 p3306 use test select into outfile tmp rs txt from tb test 这个 sql 总会 报出 下面 错误 error 1045 28000 at line access denied for user crazyant 10.10 10.10 using password yes 原因 这个 语句 不是 mysql 客户端 而是 mysql 服务器 执行 通常 用于 服务器 管理员 服务器 机器 进行 数据备份 使用 由于 mysql 客户端 账号 没有 访问 服务器 机器 本身 权限 所以 这个 sql 执行 不会 成功 方法 直接 sql 执行 结果 重定向 文件 即可 执行 下面 命令 能够 sql 语句 执行 结果 输出 文件 mysql h10.10 10.10 ucrazyant p123456 p3306 ne use test select from tb test tmp rs txt 其中 ne 执行 这个 sql 语句 选项 代表 输出 sql 语句 执行 结果 中不带 第一行 字段名 表示 执行 sql 语句 执行 下面 命令 可以 执行 sql 文件 结果 输出 文件 新建 一个 文件 名称 runsql sql 内容 use test select from db test 然后 这样 执行命令 mysql h10.10 10.10 ucrazyant p123456 p3306 runsql sql tmp rs txt 其中 命令 仍然 表示 输出表 头字段 说明 第一行 小于号 表示 输入 重定向 runsql sql 文件 内容 发送给 mysql 命令 大于号 表示 输出 重定向 命令 执行 结果 输出 文件 总结 select into outfile 只能 mysql 服务器 执行 客户端 无法 执行 mysql ne sql rs txt 可以 sql 语句 执行 输出 文件 mysql runsql sql rs txt 可以 执行 sql 文件 内容 然后 结果 输出 文件 mysql 选项 表示 输出 时不带 表头 本文 地址 http crazyant net 1587 html
1600,Hive取非Group by字段数据的方法,hive 取非 group by 字段 数据 方法 遇到 这么 一个 需求 输入 数据 一个 id 对应 多个 name 要求 输出 数据 id 唯一 name 随便 一个 可以 执行 以下 hive ql 语句 select sid class id from table2 group by sid 报错 failed error in semantic analysis line 18 expression not in group by key class id 一下 hive 这么 一个 函数 collect set 类似 mysql group concat 函数 每个 分组 其他 按照 逗号 进行 拼接 得到 一个 最终 字符串 collect set col 返回 类型 array 解释 返回 一个 重后 对象 集合 上述 ql 语句 一下 select sid collect set class id from table2 group by sid 结果 这样 11 12 13 11 14 12 15 12 13 16 14 13 15 这个 时候 我们 可以 针对 第二列 一些 计数 求和 操作 分别 对应 hive 聚合 函数 count sum 对应 本文 目的 直接 数组 获取 第一个 元素 达到 目的 这样 select sid collect set class id from table2 group by sid 结果 如下 112 113 124 125 167 13 总结 hive 允许 直接 访问 group by 字段 对于 group by 字段 可以 hive collect set 函数 收集 这些 返回 一个 数组 使用 数字 下标 可以 直接 访问 数组 元素 参考 文章 http wangjunle23 blog.163 com blog static 117838171201310222309391 本文 地址 http crazyant net 1600 html
1607,将普通Maven Spring项目转换成Web项目的方法,普通 maven spring 项目 转换成 web 项目 方法 最近 按照 李刚 疯狂 j2ee 一书 学习 spring 其中 一些 代码 ant 编译 公司 maven 所以 想要 部署 转换成 maven spring web 项目 执行 一下 本文 疯狂 j2ee request scope 代码 建立 普通 maven project 转换成 web 项目 这里 2.5 版本 注意 web 项目 webcontent 目录 有所不同 可以 点击 further configuration available 按钮 进行 设定 设定 时候 路径 src 目录 开始 复制 即可 caption id attachment 1672 align aligncenter width 525 配置 web 目录 所在 位置 caption 光盘 代码 复制到 相应 位置 这里 看到 test jsp 报错 因为 没有 spring jar 导致 步会 pom xml 配置 这个 依赖 pom xml 增加 依赖 spring jar project xmlns http maven apache org pom 4.0 xmlns xsi http www w3 org 2001 xmlschema instance xsi schemalocation http maven apache org pom 4.0 http maven apache org xsd maven 4.0 xsd modelversion 4.0 modelversion groupid pss groupid artifactid chapter75 requestscope artifactid version 0.0 snapshot version dependencies dependency groupid org springframework groupid artifactid spring context artifactid version 4.0 release version dependency dependency groupid org springframework groupid artifactid spring web artifactid version 4.0 release version dependency dependencies project web xml 配置 部署 spring 配置文件 xml version 1.0 encoding gbk web app xmlns http java sun com xml ns javaee xmlns xsi http www w3 org 2001 xmlschema instance xsi schemalocation http java sun com xml ns javaeehttp java sun com xml ns javaee web app xsd version 3.0 listener listener class org springframework web context contextloaderlistener listener class listener listener listener class org springframework web context request requestcontextlistener listener class listener context param param name contextconfiglocation param name param value classpath applicationcontext xml param value context param web app 设定 maven jar 发布 tomcat web 目录 如果 依赖 其他 子项目 需要 这里 进行 添加 举个 例子 如果 项目 用到 项目组 common jar 那么 这里 需要 加上 才能 正确 部署 新建 一个 server web 项目 部署 其中 修改 server tomcat 路径 启动 server 运行 看到 结果 总结 需要 项目 转成 web 项目 需要 pom 引入 spring context web 两个 依赖 需要 项目 部署 设置 maven 部署 一下 需要 web xml 指定 applicationcontext xml 部署 位置 本文 地址 http crazyant net 1607 html
1625,Hive开发经验问答式总结,hive 开发 经验 问答式 总结 本文 自己 开发 hive 经验 总结 希望 大家 有所 帮助 问题 留言 交流 hive 开发 经验 思维 导图 caption id attachment 1652 align aligncenter width 2005 hive 开发 经验总结 思维 导图 点击 查看 大图 caption 文档 目录 hive 程序 传递 变量 方式 方法 字符串 正则 模板 引擎 暴力 方式 替换 方法 使用 系统 变量 或者 环境变量 方法 执行 hive 命令 传入 hivevar hiveconforder by sort by 区别 遇到 sql 无法 实现 逻辑 怎么办 怎样 使用 脚本语言 扩展 hivehive 任务 执行 但是 导入 数据 非常 读取 数据 tar gz 格式 怎么办 已经 partitoin 为什么 需要 bucket 类型 设置 宽泛 当然 更好 哪些 针对 hive 优化 方法 join 时大表写 最后 如果 join 数据量 使用 mapjoin 数据 思维 使用 临时 怎样 实现 in 语法 其他 一些 技巧 删除 整个 数据库 方法 查看 数据表 详细信息 hive 可以 执行 shell hadoop dfs 命令 union all 数据 对齐 使用 null 数字 相加 问题 增加 数据 hive 两种 方法 hive 程序 传递 变量 方式 使用 hive 编写程序 常用 方法 hive 语句 文件 然后 使用 hive filename hql 批量 执行 查询 语句 经常 需要 外部 参数 传入 hql 语句 替换 其中 变量 动态 执行 任务 比如 动态 设定 数据库 表名 时间 序列 变量 达到 脚本 泛化 执行 目的 方法 字符串 正则 模板 引擎 暴力 方式 替换 简单 暴力 方式 hql 文件 设定 table name 这样 变量 占位 然后 使用 调度 程序 比如 shell python java 语言 读取 整个 hql 文件 一个 字符串 替换 其中 变量 然后 使用 hive cmd str 执行 hive 命令 字符串 举例 代码 表格 表格 所示 表格 hive ql 文件 内容 来源 疯狂 蚂蚁 www crazyant netuse test select from student limit limit count 表格 python 脚本 读取 替换 执行 hive 程序 import os step1 读取 query ql 整个 文件 内容 ql source open query ql read step2 替换 其中 占位 变量 ql target ql source replace limit count 10 step3 使用 hive 方法 执行 替换 hql 语句 序列 os system hive ql target 方法 使用 系统 变量 或者 环境变量 通常 情况 使用 shell 调度 执行 hive 程序 hive 提供 可以 直接 读取 系统 env system 变量 方法 表格 所示 表格 使用 env system 读取 外部 环境变量 use test -- 使用 env varname 方法 读取 shell export 变量 select from student limit env limit count -- 使用 system varname 方法 读取 系统 变量 select system home as my home from student 这种 方式 比较 比如 shell 可以 配置 整个 项目 各种 路径 变量 hive 程序 使用 env 可以 直接 读取 这些 配置 方法 执行 hive 命令 传入 hivevar hiveconf 方法 hive 命令 执行 hive 程序 传递 命令行 参数 使用 hivevar hiveconf 两种 参数 选项 该次 执行 传入 外部 变量 其中 hivevar 专门 提供 用户 自定义 变量 hiveconf 包括 hive site xml 配置 hive 全局变量 表格 hivevar hiveconf 传递 变量 方法 hive hivevar filehive hivevar tbname hivevar count 10 filename hqlhive hivevar cmdhive hivevar tbname hivevar count 10 select from hivevar tbname limit hivevar count hive hiveconf filehive hiveconf tbname hiveconf count 10 filename hqlhive hiveconf cmdhive hiveconf tbname hiveconf count 10 select from hivevar tbname limit hivevar count 经常 使用 env hivevar 方法 前者 直接 hive 脚本 读取 shell export 变量 后者 脚本 当前 执行 进行 参数设置 order by sort by 区别 hive 基于 hadoop 执行 分布式 程序 普通 单机 程序 不同 一个 特点 就是 最终 数据 产生 多个 文件 每个 reducer 节点 处理 partition 自己 那份 数据 产生 结果 文件 导致 hadoop 环境 数据 进行 全局 排序 如果 hadoop 进行 order by 排序 导致 所有 数据 集中 一台 reducer 节点 然后 进行 排序 这样 可能 超过 单个 节点 磁盘 内存 存储 能力 导致 任务 失败 一种 替代 方案 放弃 全局 有序 而是 分组 有序 比如 求全 百度 最高 点击 排序 而是 每种 产品线 最高 点击 排序 表格 使用 order by 引发 全局 排序 select from baidu click order by click desc 表格 使用 distribute sort 进行 分组 排序 select from baidu click distribute by product line sort by click desc distribute by sort by 就是 替代 方案 distribute by 设定 key 数据 hash 分发 不同 reducer 机器 然后 sort by 同一个 reducer 机器 每组 数据 进行 局部 排序 caption id attachment 1636 align aligncenter width 532 order by 全局 有序 distribute sort 分组 有序 caption distribute sort 结果 按组 有序 全局 无序 输入 数据 经过 以下 两个 步骤 处理 根据 key 字段 hash 相同 数据 分发 相同 reducer 节点 每个 内部 排序 由于 每组 数据 key 进行 hash 存储 并且 组内 有序 可以 两种 用途 直接 作为 hbase 输入 导入到 hbase distribute sort 进行 orderby 阶段 实现 间接 全局 排序 不过 即使 distribute by 然后 sort by 这样 操作 如果 某个 分组 数据 太大 超出 reduce 节点 存储 限制 常常 出现 137 内存 溢出 错误 对大 数据量 排序 应该 避免 遇到 sql 无法 实现 逻辑 怎么办 经常 hive 语句 无法 满足 需求 比如 日期 20140319 转换成 2014q1 季度 字符串 按照 key 进行 group 然后 每个 分组 limt 情景 直接 实现 使用 hive 提供 java udf 接口 实现 hive 提供 以下 三种 类型 udf 分别 对应 处理 不同 场景 表格 hive 提供 udf 类型 udf 类型 名称 特点 举例 udf 用户 自定义 函数 读取 一行 返回 单个 abs 单行 某字 绝对值 udaf 用户 自定义 聚合 函数 读取 多行 返回 单个 sum 多行 udtf 用户 自定义 生成 函数 读取 一行 多行 返回 多行 多列 explode 一个 变成 多行 每个 元素 一行 这三类 函数 常用 udf 其次 udaf udtf 一般 不会 遇到 如下 一个 udf 编写 使用 完整 实例 以下 几个 特点 继承 apache hadoop hive ql exec udf 父类 覆盖 text evaluate text str 方法 表格 日期 转换成 季度 字符串 udfpackage myudf import org apache hadoop hive ql exec udf import org apache hadoop io text 来源 疯狂 蚂蚁 www crazyant net udf 处理 一行 数据 产生 一行 数据 step1 用户 需要 继承 udf 父类 step2 需要 实现 evalute 方法 用于 hive 回调 author www crazyant net public class datetoquarter extends udf yymmdd 形式 日期 字符串 转换成 2014q1 形式 季度 字符串 param str 输入 日期 return 2014q1 形式 季度 字符串 public text evaluate text str if str null return null 提取 字符串 年份 月份 string year str tostring substring int month integer parseint str tostring substring string quarter if month && month quarter q1 else if month && month quarter q2 else if month && month quarter q3 else if month 10 && month 12 quarter q4 返回 2014q1 季度 字符串 return new text year quarter 表格 hive 使用 udf 语法 use test add jar home users crazyant tmp hive udf test 0.0 snapshot jar create temporary function datatoquarter as myudf datetoquarter select sname datatoquarter enter date from student udf utaf 两类 非常 常用 自定义 函数 前者 处理 单个 后者 处理 多行 合并 如果 熟悉 java 可以 这种 方法 开发 优点 这些 udf 程序 直接 map reduce 本身 任务 jvm 运行 效率 但是 缺点 在于 开发 复杂 周期长 不如 解释性 语言 python 开发 高效 怎样 使用 脚本语言 扩展 hive 除了 java 可以 使用 其它 语言 编写 streaming 程序 扩展 hive 好处 开发 速度 省去 java 编译 打包 步骤 缺点 hadoop 会多 启动 一个 streaming 进程 java 进程 通信 导致 性能 降低 caption id attachment 1637 align aligncenter width 398 streaming udf java udf caption 开发 hive streaming 程序 开发 hadoop streaming 程序 相同 是从 标准 输入 读取 分割 数据 分割 结果 写出 标准 输出 表格 10 hive streaming python 脚本 coding utf8 来源 疯狂 蚂蚁 www crazyant net 日期 字符串 转换成 季度 字符串 形式 输入 yyyymmdd 或者 yyyy mm dd 日期 形式 返回 yyyyq1 yyyyq2 yyyyq3 yyyyq4 季度 字符串 形式 import sysdef get date year quarter str pdate 获取 日期 季度 字符串 形式 year val month val pdate pdate 季度 序号 quarter index int month val quarter str sq% year val quarter index return quarter strdef process input 处理函数 每行 最后 一个 字段 日期 for line in sys stdin line str line strip if not line continue fields line split yyyy mm dd 转换成 yyyymmdd date val str fields replace 重新 组装 输出 output fields fields get date year quarter str date val print join output fields if __ name __ __ main __ process input 然后 hive 程序 可以 这样 调用 steaming 脚本 表格 11 hive 程序 调用 steaming 方法 use test -- 来源 疯狂 蚂蚁 www crazyant net -- step1 绝对路径 方式 添加 脚本 add file home users crazyant workbench streaming date to quarter py -- step2 transform .. using .. as .. 句式 调用 select transform sname birthday using python date to quarter py as sname bir quarter from student info 几个 需要 注意 地方 需要 绝对路径 方法 添加 脚本 文件 add file 可以 用于 添加 字典 数据 add file map join 分发 数据文件 方法 select 除了 transform 不能 其他 所有 需要 需要 transform 一个 python 脚本 处理 节点 所有 数据 transform 一般 需要 distribute by .. sort by 句式 一起 使用 如果 不用 distribute by .. sort by 句式 数据 分到 reduce 节点 造成 单点 负载 过重 因此 python 脚本 可以 实现 utaf 多行 聚合 udtf 行变 多行 多列 hive 任务 执行 但是 导入 数据 非常 hive 使用 hadoop 执行 查询 查询 执行 速度 但是 使用 load data hive 导入 数据 非常 是因为 hive 采取 读时 模式 读时 模式 读取数据 时候 数据 类型 格式 检查 写时 模式 写入 数据 时候 数据 类型 格式 规范 检查 数据 存到 hive 数据表 hive 采用 读时 模式 意思 针对 操作 不会 任何 校验 只是 简单 文件 复制到 hive 对应 hdfs 目录 如图 所示 读时 模式 相对 写时 模式 rdbms 一般 采用 写时 模式 数据 写入 数据表 时候 检查 一条 记录 是否 合法 如果 检查 通过 直接 返回 失败 信息 caption id attachment 1639 align aligncenter width 457 hive 导入 数据 只是 简单 复制 caption 由于 hive 存入 数据 只是 简单 文件 复制 粘贴 所以 导入 数据 速度 非常 读取 查询 时候 根据 模式 解释 数据 这个 时候 如果 遇到 符合 模式 数据 hive 直接 数据 解析 null hive 采用 读时 模式 带来 以下 几个 好处 hive 表中 新增 数据 非常 通常 情况 对于 外来 数据 采用 方法 直接 hadoop 命令 文件 传到 一个 hdfs 目录 hive 直接 这个 目录 一份 数据 可以 解析 多种 模式 存储 hive 表中 数据 hive 本身 没有 关系 数据 可以 其他 工具 比如 pig 处理 读取 数据 tar gz 格式 怎么办 hadoop 存放 大部分 日志 数据 这些 数据 重复 率高 进行 压缩 的话 节省 大量 存储空间 同时 由于 减少 网络 传输 带宽 使得 任务 执行 速率 提升 有没有 方法 读取 压缩 数据 比如 tar gz 结尾 文件 答案 肯定 并且 需要 任何 操作 可以 读取 hadoop 默认 已经 安装 编码 解码器 并且 自动 加载 使用 如下 命令 可以 查看 当前 hadoop 安装 编解码器 hive 客户端 默认 安装 编码 解码器 hive set io compression codecs io compression codecs org apache hadoop io compress defaultcodec org apache hadoop io compress gzipcodec org apache hadoop io compress bzip2codec org apache hadoop io compress lzopcodec org apache hadoop io compress lzocodec org apache hadoop io compress lzmacodec org apache hadoop io compress quicklzcodec 其中 gzipcodec 用于 tar gz 文件 进行 压缩 解压 不同 编解码 文件 规则 不同 比如 gzip 文件 由于 压缩 时候 掩盖 文件 边缘 信息 导致 这个 文件 如果 大小 拆分 乱码 因此 每个 gzip 文件 如果 特别 适合 hadoop 计算 这样 文件 可以 采用 另外 bzip2 进行 压缩 这种 格式 限定 大小 比如 64mb 方法 拆分 每个 分片 独立 完整 能够 读取 对于 hadoop 计算 以下 三种 压缩 输入 数据压缩 比如 原始 日志 进行 压缩 目的 节省 hdfs 存储空间 中间 过程 压缩 map 结果 进行 压缩 传输 reduce 节点 解压缩 然后 进行 计算 可以 节省 网络 传输 时间 不过 解压缩 耗费 cpu hadoop 由于 大部分 计算 io 密集型 cpu 密集型 因此 这种 方法 使用 输出 结果 压缩 目的 节省 存储空间 同时 方便 后续 其他 任务 快速 读取 处理 已经 partitoin 为什么 需要 bucket caption id attachment 1640 align aligncenter width 381 hive 各个 数据结构 逻辑 划分 caption 如图 hive 数据结构 划分 从大到 依次 数据库 database 对应 hdfs 顶层 目录 类似 mysql 数据库 table 对应 数据库 下面 文件夹 下面 可以 直接 数据 对应 mysql 分区 partition 对表 按照 某一 维度 进行 分表 存储 比如 各个 省份 数据 分别 一张 或者 每天 一个 分区 对应 mysql 分表 概念 分桶 bucket 数据 按照 某一字 进行 hash 分开 存储 结果 比如 如果 按照 账号 id 进行 bucket 存储 那么 账号 id 奇数 或者 偶数 分开 两个 不同 篮子 文件 这个 文件 代表 原始数据 可以 放在 篮子 可以 放在 partion table 由此 可以 看出 partition bucket 概念 类似 不过 有所不同 bucket partion 更深一层 hash 划分 并且 可以 限定 hash 如果 按照 日期 分区 那么 每天 一个 partition 一直 增长 下去 但是 如果 限定 30 bucket 不论 多少 数据 分开 放在 30 bucket 同时 分桶 概念 为了 解决 分区 一个 问题 比如 可以 按照 季度 省份 数据 分区 因为 这些 分类 可控 但是 无法 账号 进行 分区 这样 分区 数目 会太大 超过 inode 数目 限制 分桶 出现 以下 优点 解决 一些 数据 无法 分区 问题 比如 不能 账号 分区 但是 可以 账号 数据 分成 个桶 数据量 固定 所以 不会 数据 波动 每个 一类 数据 适合 抽样 分桶 有利于 高效 map join 比如 两个 表都 按照 账号 id 分成 30 个桶 那么 可以 肯定 同一个 账号 肯定 对应 里面 这样 实现 分桶 join 类型 设置 宽泛 当然 更好 hive 遵从 读时 模式 不论 模式定义 什么 样子 存储 数据量 不变 于是 为了 模式 可扩展性 容易 类型 设置 宽泛 比如 只要 数字 设置 bigint 理由 就是 数据量 没有 因为 设置 更大 范围 类型 存储 当然 设置 宽泛 类型 确实 没有 影响 数据 存储 但是 影响 数据 计算 caption id attachment 1642 align aligncenter width 495 java 通过 hive 定义 存储 数据字 建模 caption 由于 hive 底层 执行 hadoop 程序 使用 java 实现 hive 执行命令 转化成 hive 语句 执行 表字 类型 映射 java 变量 比如 hive int 映射 java int 但是 hive bigint 映射 java long 程序 分发 上千 机器 节点 时候 由于 分配 long 类型 不是 合适 int 类型 造成 整体 内存 耗费 大幅 增加 最终 结果 就是 hive 执行 效率 降低 如果 确认 能够 类型 表示 不要 宽泛 类型 哪些 针对 hive 优化 方法 join 时大表写 最后 执行 例如 tablea join tableb join tablec hive join 语句 hive table tableb 全部 加载 内存 然后 逐行扫描 tablec 进行 join 因此 join 语句 一定 大表写 最后 如果 join 数据量 使用 mapjoin 如果 确认 用于 join 数据量 很小 比如 只有 100mb 大小 可以 使用 mapjoin 语法 这样 hive 会先 小表 分发 所有 reducer 节点 分布式 缓存 加载 内存 然后 进行 join 操作 由于 减少 shuffle 操作 性能 有所 提升 使用 mapjoin 方法 select mapjoin tablea id tableb namefrom tablea join tableb on tablea id tableb id 数据 思维 使用 临时 关系数据库 不同 hive 最终 磁盘 文件 进行 扫描 处理 应该 数据处理 思维 来待 这些 sql 如果 一个 很大 但是 只用 其中 一部分 列字段 那么 最好 建立 一个 临时 临时 大表 有效字 这样 减少 大表 重复 扫描 提升 性能 不过 临时 表太多 hive 一个 确定 pig 其实 适合 用于 etl 处理 一个 对比 怎样 实现 in 语法 hive 没有 提供 in 语法 比如 in select 语句 报错 但是 这种 需求 存在 其实 可以 通过 left semi join 实现 比如 这么 两个 数据表 caption id attachment 1643 align aligncenter width 420 left semi join 例子 数据 caption 两个 执行 下面 left semi join 操作 left semi join 实现 in 语法 方法 select from table1 left semi join table2 on table1 student no table2 student no 得到 如下 执行 结果 name12 name23 name34 name45 name5 结果 使用 in select 结果 相同 10 其他 一些 技巧 删除 整个 数据库 方法 数据库 存在 表时 删除 表再 删除 数据库 不过 加上 cascade 关键字 递归 删除 整个 数据库 drop database test db cascade 查看 数据表 详细信息 可以 方法 查看 数据表 信息 分别 desc student info desc extended student info desc formatted student info 显示 简单 信息 除了 显示 信息 显示 数据 存放 位置 输入输出 格式 详细信息 种则 格式化 方法 显示 详细信息 方便 查看 hive 可以 执行 shell hadoop dfs 命令 hive 程序 可以 直接 执行 shell 命令 hadoop 命令 并且 因为 这些 hadoop 命令 直接 共用 hive 当前 jvm 执行 速度 表格 12 hive 环境 下能 快速 执行 hadoop 命令 hive dfs ls app ecom union all 数据 对齐 使用 常常 遇到 来自 很多 数据源 数据 每份 数据 相似 格式 并且 处理 逻辑 相同 可以 union all 各份 数据 对齐 存储 一个 表中 后续 这个 大表 进行 统一 处理 null 数字 相加 问题 如果 有用 sum 函数 但是 发现 sum 列中 null 可以 使用 以下 方法 转换成 coalesce cast as bigint coalesce 方法 返回 列表 第一个 不为 null 相当于 如果 第一个 字段 null 第二个 增加 数据 hive 两种 方法 如果 外部 数据 可以 external 外部 每天 hadoop fs put 方法 数据 复制到 目录 即可 这样 可以 用于 除了 hive 其他 程序 读取 如果 中间 临时 产出 可以 使用 内部 每天 计算 全量 覆盖 这些 内容 本文 地址 http crazyant net 1625 html 转载 注明 出处 谢谢 本文 pdf 格式 文档 文字 清晰 只是 图片 不能 放大 下载 地址 http pan baidu com 1sjpwjsh
1664,Python操作MySQL视频教程,python 操作 mysql 视频教程 大家 带来 自己 制作 python 操作 mysql 视频教程 教程 分为 三节 python 开发 环境 搭建 以及 支持 mysql 开发 插件 安装 python 访问 mysql 数据库 标准 api 规范 接口 讲解 python 开发 mysql 程序 实战 编码 演示 通过 学习 大家 能够 基本 掌握 python 开发 mysql 程序 视频 高清 百度 链接 http pan baidu com 1db0qm 密码 ri1npython 操作 mysql 视频教程 第一 开发 环境 搭建 推荐 使用 以下 开发 环境 搭配 eclipse jdk7 插件 pydev 3.8 0python 2.7 插件 mysql python 1.2 4b4 win32 py2.7 mysql 服务器 使用 wampserver2.5 软件包 自带 mysql 软件 需要 安装 vcredist x64mysql 5.6 17 视频 优酷 地址 http youku com show id xode3nzk4mtey htmlpython 操作 mysql 视频教程 第二 标准接口 规范 第二 视频教程 讲解 主要 内容 python 官方 针对 操作 数据库 标准规范 文档 地址 http legacy python org dev peps pep 0249 python 建立 数据库 connect 连接 对象 connection 对象 构造函数 包括 主机 端口 用户名 密码 编码 参数 connection 对象 方法 主要 关闭 连接 获取 游标 提交 事务 回滚 事务 python 执行 sql 语句 cursor 对象 普通 游标 字典 游标 区别 以及 字典 游标 优于 普通 游标 原因 游标 执行 sql 语句 方法 游标 获取 执行 sql 语句 结果 集合 方法 python 编写 访问 数据库 程序 框架 主要 包括 以下 步骤 导入 mysqldb 对象 获取 connection 对象 获取 普通 游标 或者 字典 游标 执行 sql 语句 游标 对象 取出 数据 数据 其他 处理 关闭 连接 视频 优酷 地址 http youku com show id xodixnzq1mjq0 htmlpython 操作 mysql 视频教程 第三 实例 代码 演示 第三 视频教程 讲解 主要 内容 python 编写 mysql 程序 框架 引入 模块 import mysqldb 获取 连接 conn mysqldb connect 获取 游标 cursor conn cursor 执行 sql cursor execute 获取数据 curosr fetchall 关闭 连接 conn close mysql innodb myisam 引擎 区别 innodb 支持 事务 myisam 支持 事务 如果 访问 innodb 数据库 执行 insert delete update 语句 python 代码 必须 执行 conn commit 才能 使得 sql 执行 生效 视频 优酷 地址 http youku com show id xodi4mje4njgw html 本文 代码 ppt git 地址 http git oschina net peishuaishuai python mysql tutorial 本文 高清 视频 随后 发布 百度网 敬请期待 本文 地址 http crazyant net 1664 html 转载 注明 来源
1689,Java枚举类型代码的二逼写法和艺术写法,java 枚举 类型 代码 写法 艺术 写法 最近 遇到 一种 需求 场景 使用 一个 封装 java 服务端 返回 返回 状态 返回 信息 字符串 信息 比如 操作 成功 新增 失败 查询 失败 状态 作为 一枚 java 屌丝 想到 这种 常量 信息 最好 一个 单独 里面 并且 public static final 形式 修饰 为了 返回 code 返回 信息 msg 两者 绑定 起来 可以 提供 一个 公用 方法 以下 两个 努力 一是 两个 返回 返回 信息 变量名 相似 代码 知道 两个 变量 含义 关系 第二个 提供 一个 根据 返回 获得 对应 返回 信息 方法 完后 自我感觉 良好 感觉 满足 需求 完备 于是 出现 以下 2b 代码 枚举 状态 状态 信息 2b 写法 package net crazyant 返回 客户端 状态 状态 信息 author crazyant net public class communicatecodeone 状态 操作 成功 public static final int operation success code 状态 信息 操作 成功 public static final string operation success msg 操作 成功 状态 新增 失败 public static final int add data error code 状态 信息 新增 失败 public static final string add data error msg 新增 失败 状态 查询 失败 public static final int query data error code 状态 信息 查询 失败 public static final string query data error msg 查询 失败 根据 状态 获取 状态 信息 param communicatecode 状态 return 状态 信息 字符串 public static string getmsg int communicatecode string returnmsg null switch communicatecode case operation success code 操作 成功 returnmsg operation success msg break case add data error code 新增 失败 returnmsg add data error msg break case query data error code 查询 失败 returnmsg query data error msg break return returnmsg 这种 写法 存在 问题 两个 如果 需要 新增 状态 状态 信息 需要 getmsg 方法 新增 switch case 分支 用户 调用 时候 需要 状态 传递 getmsg 方法 传递 对应 不上 风险 学习 总是 发生 不经意 看过 其他人 一段 代码 发现自己 多烂 这么 一种 艺术 写法 枚举 状态 状态 信息 艺术 写法 package net crazyant 返回 客户端 状态 状态 信息 author crazyant net public enum communicatecodetwo operation success 操作 成功 add data error 新增 失败 query data error 查询 失败 返回 状态 private int statuscode 返回 状态 信息 private string statusmsg communicatecodetwo int statuscode string statusmsg this statuscode statuscode this statusmsg statusmsg return the statuscode public int getstatuscode return statuscode return the statusmsg public string getstatusmsg return statusmsg 每次 新增 一个 状态 需要 增加 一个 枚举 元素 即可 不会 出现 状态 信息 对应 不上 调用 问题 2b 代码 艺术 代码 调用 方法 对比 package net crazyant 测试状态 码类 两个 不同 写法 author crazyant net public class testthem public static void main string args 写法 调用 方法 缺点 状态 状态 信息 关系 需要 用户 自己 绑定 可能 出现 一致 情况 int statuscode1 communicatecodeone operation success code string statusmsg1 communicatecodeone getmsg statuscode1 system out println statuscode1 statusmsg1 写法 调用 方法 优点 简洁 状态 信息 只能 通过 单个 枚举 元素 获取 int statuscode2 communicatecodetwo operation success getstatuscode string statusmsg2 communicatecodetwo operation success getstatusmsg system out println statuscode2 statusmsg2 明显 对比 显示 第二种 写法 优势 简洁 好用 不易 出错 本文 地址 http crazyant net 1689 html 转载 注明 谢谢
1697,《超体》中的哲学,超体 哲学 caption id attachment 1700 align aligncenter width 900 超体 电影 封面 无处不在 caption 同事 lx 一张 一个月 优酷 会员卡 赶紧 今天 使用 会员 才能 电影 来看 一部 超体 热泪盈眶 超体 一部 视觉 电影 但是 飙泪 是因为 里面 大量 哲学思想 柏拉图 精神 柏拉图 认为 现实 假象 真正 世界 无法 感知 精神 王国 纯粹 唯心主义 影片 大脑 开发 最后 其实 一步步 理想国 靠近 一切 心所生 物质 只是 表象 时间 加速 汽车 消失 其实 汽车 没有 存在 存在 只是 思想 知识 传承 影片 后来 主角 可以 穿越时空 回到 史前 然而 认为 主角 没有 穿越 空间 只是 经历 前人 思想 哲学家 万物 思想 其实 一直 存在 思想 之中 但是 人类 由于 局限 无法 感知 人们 平时 学习 其实 只是 回忆 已经 存在 知识 而已 主角 后来 已经 需要 学习 因为 万物 本质 发现自己 早就 了然 上帝 存在 这里 上帝 只是 一个 名词 特指 基督 人们 普遍认为 上帝 一个 然而 有人 认为 上帝 无处不在 一切 上帝 对应 知识 传承 其实 上帝 存在 每个 内心 每次 学习 领悟 上帝 对话 这里 上帝 可能 柏拉图 精神 对应 同时 解释 人类 来源 所在 人类 不会 上帝 细胞 到底 什么 存在 笛卡尔 我思 故我在 身体 不能 证明 自己 一切都是 假象 泡影 正在 思考 正在 怀疑 真切 存在 就是 思想 思想 就是 存在 万物 影像 真正 幸福 影片 主角 开发 百分 三十 时候 由于 参透 一切 不再 具有 喜悦 悲伤 痛苦 情绪 因此 变得 无表情 印证 哲学家 苦苦 思索 怎样才能 达到 真正 喜乐 这里 喜乐 无法 描述 因为 情绪 释迦 摩尼说 自己 体验 富裕 贫穷 以及 人间 万般 经历 无法 自己 保持 永远 喜乐 唯有 抛却 一些 逃避 悲伤 追求 喜乐 因为 喜悦 破灭 时候 任何 见解 推翻 见解 陷入 无尽 痛苦 唯有 放弃 一切 一切 才能 达到 超脱 一切 永生 境界 影片 最后 达到 无处不在 已经 变成 如来 上帝 进入 大乘 境界 超越 空间 时间 超越 存在 吕克贝 一个 思想 高度 导演 文章 地址 http crazyant net 1697 html
1703,Java怎样创建两个KEY（key-pair）的MAP,java 怎样 创建 两个 key key pair map xy 坐标系 一个 刻度 一个 刻度 对应 图上 一个点 pair point 那么 创建 一个点 或者 根据 寻求 一个点 需求 如果 python 语法 表达 这个 样子 dict point 然而 java 变得 容易 骨钩 一下 这么 一些 方法 使用 嵌套 mapmap integer map integer map ... ... map get get 这种 方法 水平 key 切换 垂直 key 我们 找寻 xy 坐标系 对应 其实 可以 先找 那条 垂直线 然后 找出 垂直线 高度 那个 但是 取得 这个 key value get 实例 代码 没有 第一次 get null 判断 隐患 并且 感觉 不是 直观 一个 pair key 包装 public class key private final int private final int public key int int this this override public boolean equals object if this return true if instanceof key return false key key key return key && key override public int hashcode int result result 31 result return result 这种 方法 提前 包装 一个 类中 两个 属性 同时 提供 equals 方法 用于 比较 提供 hashcode 用于 使用 计算 对象 列表 位置 为什么 覆盖 hashcode 方法 参见 链接 这个 pair 之后 map key map ... map get new key 这种 方法 代码 代价 实现 pair key map pair class 编写 不能 忘记 覆盖 equals hashcode 方法 增加 代码 感觉 不是 google hashbasedtable 类库 这种 方法 感觉 直观 最好 import com google common collect hashbasedtable import com google common collect table 创建 table long long point plane hashbasedtable create 新增 plane put 1l 2l pointa plane put 1l 3l pointb plane put 1l 4l pointc 获取 point pointa plane get 1l 2l point pointb plane get 1l 2l 惊叹 好用 java 语言 写成 这样 代码 称之为 艺术 无限 维度 key 两种 方法 可以 实现 无线 维度 key 第一种 本文 第二种 方法 一样 先写 一个 class 里面 无限 属性 然后 作为 map key 第二种 如果 类型 一样 可以 样子 实现 map list integer map ... 但是 这种 方法 出错 不易 并且 性能 总结 实现 map key 两个 绑定 属性 或者 称之为 pair key 个人 认为 首先 使用 google hashbasedtable 类库 其次 方法 编写 对应 class 可是 这些 感觉 不是 那么 方便 python 那种 tuple value 方法 那么 艺术 本文 翻译 链接 一个 答案 本文 地址 http crazyant net 1703 html
1707,Python使用list字段模式或者dict字段模式读取文件的方法,python 使用 list 字段 模式 或者 dict 字段 模式 读取 文件 方法 python 用于 处理 文本 数据 绝对 利器 极为 简单 读取 分割 过滤 转换 支持 使得 开发者 需要 考虑 繁杂 文件 处理过程 相对 java 来说 嘻嘻 博主 自己 工作 一些 复杂 文本 数据处理 计算 包括 hadoop 编写 streaming 程序 python 完成 文本处理 过程 文件 加载 内存 中是 第一步 涉及 怎样 文件 一列 映射 具体 变量 过程 最最 愚笨 方法 就是 按照 字段 下标 进行 引用 比如 样子 fields 读取 一行 并且 按照 分隔符 分割 之后 列表 user id fields user name fields user type fields 如果 按照 这种 方式 读取 一旦 文件 顺序 增减 变动 代码 维护 噩梦 这种 代码 一定 杜绝 本文 推荐 两种 优雅 方式 读取数据 配置 模式 然后 按照 模式 读取 模式 字典 模式 列表 模式 两种 形式 读取 文件 按照 分隔符 分割 成字段 数据 列表 首先 读取 文件 按照 分隔符 分割 一行 数据 返回 列表 以便 后续 处理 代码 如下 def read file data filepath 根据 路径 按行 读取 文件 参数 filepath 文件 绝对路径 param filepath 读取 文件 路径 return 分割 每行 数据 列表 fin open filepath for line in fin try line line if not line continue except continue try fields line split except continue 抛出 当前 分割 列表 yield fields fin close 使用 yield 关键字 每次 抛出 单个 分割 数据 这样 调度 程序 可以 for fields in read file data fpath 方式 读取 一行 映射 模型 方法 使用 配置 字典 模式 装配 读取 数据 列表 这种 方法 配置 一个 字段名 位置 字典 作为 数据 模式 然后 按照 模式 装配 读取 列表 数据 最后 实现 字典 方式 访问 数据 使用 函数 staticmethoddef map fields dict schema fields dict schema 根据 字段 模式 返回 模式 数据 对应 例如 fields schema name age 那么 返回 name age param fields 包含 数据 数组 一般 通过 一个 line string 通过 按照 分割 得到 param dict schema 一个 词典 key 字段名 value 位置 return 词典 key 字段名 value 段值 pdict for fstr findex in dict schema iteritems pdict fstr str fields int findex return pdict 方法 之前 方法 可以 以下 方式 读取数据 coding utf8 author www crazyant net 测试 使用 字典 模式 加载 数据 列表 优点 对于 多列 文件 通过 配置 需要 读取 读取 对应 数据 缺点 如果 字段 每个 字段 位置 配置 较为 麻烦 import file utilimport pprint 配置 读取 字典 模式 可以 配置 自己 关心 位置 dict schema userid username usertype for fields in file util fileutil read file data userfile txt 列表 按照 字典 模式 进行 映射 dict fields file util fileutil map fields dict schema fields dict schema pprint pprint dict fields 输出 结果 userid username name1 usertype userid username name2 usertype userid username name3 usertype userid username name4 usertype userid username name5 usertype userid username name6 usertype userid username name7 usertype userid username name8 usertype userid username name9 usertype userid 10 username name10 usertype userid 11 username name11 usertype 10 userid 12 username name12 usertype 11 映射 模型 方法 使用 配置 列表 模式 装配 读取 数据 列表 如果 需要 读取 文件 所有 或者 前面 一些 那么 配置 字典 模式 优点 复杂 因为 需要 每个 配置 索引 位置 并且 这些 位置 是从 开始 完后 属于 低级 劳动 需要 消灭 列表 模式 命运 而生 配置 列表 模式 转换成 字典 模式 然后 字典 加载 可以 实现 转换 模式 以及 列表 模式 读取 代码 staticmethoddef transform list to dict para list 转换成 形式 param para list 列表 里面 每个 对应 字段名 return 字典 里面 字段名 位置 映射 res dict idx while idx len para list res dict str para list idx strip idx idx return res dict staticmethoddef map fields list schema fields list schema 根据 字段 模式 返回 模式 数据 对应 例如 fields schema name age 那么 返回 name age param fields 包含 数据 数组 一般 通过 一个 line string 通过 按照 分割 得到 param list schema 名称 列表 list return 词典 key 字段名 value 段值 dict schema fileutil transform list to dict list schema return fileutil map fields dict schema fields dict schema 使用 时候 可以 列表 形式 配置 模式 需要 配置 索引 更加 简洁 coding utf8 author www crazyant net 测试 使用 列表 模式 加载 数据 列表 优点 如果 读取 所有 列表 模式 需要 顺序 写出 各个 字段名 可以 缺点 能够 读取 关心 需要 全部 读取 import file utilimport pprint 配置 读取 列表 模式 只能 配置 前面 或者 所有 list schema userid username usertype for fields in file util fileutil read file data userfile txt 列表 按照 字典 模式 进行 映射 dict fields file util fileutil map fields list schema fields list schema pprint pprint dict fields 运行 结果 字典 模式 完全 一样 file util py 全部 代码 以下 file util py 全部 代码 可以 放在 自己 公用 类库 使用 encoding utf8 author www crazyant net version 2014 12 class fileutil object 文件 路径 常用 操作方法 staticmethod def read file data filepath 根据 路径 按行 读取 文件 参数 filepath 文件 绝对路径 param filepath 读取 文件 路径 return 分割 每行 数据 列表 fin open filepath for line in fin try line line if not line continue except continue try fields line split except continue 抛出 当前 分割 列表 yield fields fin close staticmethod def transform list to dict para list 转换成 形式 param para list 列表 里面 每个 对应 字段名 return 字典 里面 字段名 位置 映射 res dict idx while idx len para list res dict str para list idx strip idx idx return res dict staticmethod def map fields list schema fields list schema 根据 字段 模式 返回 模式 数据 对应 例如 fields schema name age 那么 返回 name age param fields 包含 数据 数组 一般 通过 一个 line string 通过 按照 分割 得到 param list schema 名称 列表 list return 词典 key 字段名 value 段值 dict schema fileutil transform list to dict list schema return fileutil map fields dict schema fields dict schema staticmethoddef map fields dict schema fields dict schema 根据 字段 模式 返回 模式 数据 对应 例如 fields schema name age 那么 返回 name age param fields 包含 数据 数组 一般 通过 一个 line string 通过 按照 分割 得到 param dict schema 一个 词典 key 字段名 value 位置 return 词典 key 字段名 value 段值 pdict for fstr findex in dict schema iteritems pdict fstr str fields int findex return pdict 本文 地址 http crazyant net 1707 html
1712,做设计就像创世界,设计 世界 最近 都市 yy 小说 重生 小说 巨匠 小说 部分 部分 结尾 感觉 有点 弱势 作者 取巧 金庸 莎士比亚 哈利波 特等 经典 人物 书籍 引入 通过 书籍 简单 介绍 造成 世界 轰动 衬托出 主人公 效果 其中 作者 怎样 小说 思考 有趣 作者 提到 小说 题材 限制 可以 创立 一个 完全 虚幻 世界 这里 世界 就是 可以 定义 任何 东西 比如 生物 除了 还有 妖精 比如 天上 月亮 比如 植物 说话 但是 保证 创立 世界 完备 如果 定义 这个 世界 每天 只有 23 小时 那么 小说 任何 地方 不能 忘记 缺失 一个 小时 创立 世界 符合 逻辑 自己 所有 关系 逻辑 设计 一样 设计 目的 为了 解决 某个 问题 或者 实现 功能 问题 功能 往往 核心 需求 实现 核心 需求 相当于 已经 达到 目标 但是 一个 问题 解决 一个 系统 运行 往往 只是 几个 核心 功能 需要 包括 额外 设置 衍生 关系 逻辑 比如 为了 实现 系统 灵活性 引入 灵活 配置 功能 同时 配置 数据 使用 核心 模型 之中 那么 一定 还要 记得 配置 修改 导致 核心 模型 数据 变化 配置 核心 模型 配置 核心 模型 关联 三者 设计 思考 缺一不可 一生 二生 三生 万物 系统 完好 运行 一种 平衡 状态 需要 任何一方 协作 完成 如果 想要 打破 这种 平衡 引入 一个 变量 平静 湖水 扔进 一个 石头 石头 落点 开始 涟漪 不断 扩散 引入 这个 变量 导致系统 各个 组件 受到 影响 它们 交互 关系 它们 影响 逻辑 随之 改变 变量 本身 出发 思考 它会 影响 哪些 模块 这种 方法 经常 导致 缺失 考虑 改成 整体 浏览 整个 系统 任何 一个 模块 每个 模块 思考 引入 这个 变量 导致 变化 才能 做到 完备 考虑 例如 战场 将帅 正在 指挥 战斗 进行 如果 一队 奇兵 改变 战局 那么 战场 所有 分队 接收 消息 调整 自己 战斗 策略 不然 奇兵 变成 孤军深入 没有响应 配合 战局 影响 没有 达到 目的 平衡 落后 现状 改变 目标 系统 更加 灵活 拥有 完备 功能 必须 打破 原有 平衡 状态 这个 过程 痛苦 引入 各种各样 问题 但是 解决问题 全盘 思考 克服困难 本身 就是 一种 乐趣 成长 只有 跨越 这些 绊脚石 之后 体会 成就感 生活 意义 设计 目的 就是 创建 一个 完备 世界 这个 世界 任何 逻辑 相通 圆满
1722,《Spring in action》3rd中SpringPizza项目的运行方法,spring in action 3rd springpizza 项目 运行 方法 spring in action 3rd springpizza 项目 其他 不同 使用 gradle 编译 尝试 好久 没能 run 起来 最后 按照 一篇 文章 做法 转换成 maven 项目 然后 执行 成功 下载 代码 下载 地址 http www manning com walls4 sia3 code zip 解压 代码 sia3 code springpizza 目录 建立 pom xml 文件 项目 变成 maven 编译 pom xml 文件 内容 如下 project xmlns http maven apache org pom 4.0 xmlns xsi http www w3 org 2001 xmlschema instance xsi schemalocation http maven apache org pom 4.0 http maven apache org maven v4 xsd modelversion 4.0 modelversion groupid com yogesh groupid artifactid springpizza artifactid packaging war packaging version 1.0 snapshot version name spring web flow maven webapp name url http maven apache org url properties spring version 3.0 release spring version properties dependencies dependency groupid org springframework webflow groupid artifactid spring webflow artifactid version 2.3 release version dependency dependency groupid org springframework webflow groupid artifactid spring binding artifactid version 2.3 release version dependency dependency groupid jstl groupid artifactid jstl artifactid version 1.2 version dependency dependency groupid commons lang groupid artifactid commons lang artifactid version 2.6 version dependency dependency groupid org springframework groupid artifactid spring beans artifactid version 3.2 release version dependency dependency groupid org tuckey groupid artifactid urlrewritefilter artifactid version 3.1 version dependency dependency groupid log4j groupid artifactid log4j artifactid version 1.2 version dependency dependency groupid org springframework groupid artifactid spring aspects artifactid version 2.0 m2 version dependency dependencies build finalname springpizza finalname plugins plugin artifactid maven compiler plugin artifactid version 2.3 version configuration source 1.6 source target 1.6 target configuration plugin plugins build project 使用 maven 项目 方式 导入 springpizza 导入 发现 springpizza src test java com springinaction pizza flow pizzaflowtest java 测报 半天 搞定 删除 运行 项目 没有 影响 项目 转换成 web 形式 并且 添加 maven 依赖 编译 路径 编译 安装 项目 编译 项目 添加 server 启动 tomcat 访问 首页 地址 http localhost 8080 springpizza pizza 这样 可以 结合 代码 执行 仔细 研究 web flow 代码 spring in action 3rd 真是 好书 进入 深入 理解 spring 大门 感谢 作者
1735,读书破万卷，代码如有神,读书 万卷 代码 有神 it 技术 领域 书籍 普遍 非常 一本 java 编程 思想 竟然 多达 800 手里 很沉 只能 办公桌 子上 然而 现在 工作 普遍 非常 白天 开发 开会 晚上 回家 电影 玩游戏 根本 没有 一整块 时间 可以 出来 这种 大部头 书籍 用来 看书 时间 只有 地铁 公交 厕所 碎片 时间 可是 这么 的话 地铁 公交 厕所 太累 可行 有人 可以 电子书 我试 手机 kindle 要么 字迹 清晰 要么 排版 错乱 难以 阅读 没有 一个 办法 其实 解决办法 简单 撕开 每个 章节 单独 阅读 如下 好处 物尽其用 大部分 大部头 往往 办法 摆在 那里 桌子 浪费 money 克服 恐惧心理 大部头 看上去 害怕 一座 高山 如果 撕开 成小 章节 首先 心理 不会 恐惧 一个个 目标 一样 一章 章看 完后 惊讶 发现自己 大部头 轻便 携带 拆开 成小 章节 之后 往往 只有 几十页 折叠 一下 塞到 小包 任何 时候 出来 地方 章节 进行 阅读 因为 章节 我们 可以 章节 进行 阅读 一边 可以 第二遍 每个 章节 彻底 弄懂 一章 容易 管理 自己 进度 这么 好处 什么 撕开 java 编程 思想 第四版 撕开 疯狂 java 讲义 真是 一种 办法 化整为零 逐个 击破 大部头 往往 更加 经典 终于 办法 可以 使用 碎片 时间 学习 这些 知识 最近 java 方面 书籍 一个 书单 列举如下 这种 阅读 方法 再厚 spring in action 3th effective java 2th java 编程 思想 4th 疯狂 java 讲义 3rd 重构 改善 既有 代码 设计 代码 整洁 之道 java 并发 编程 实战 大型 网站 技术 架构 核心 原理 案例 分析 大型 网站 系统 java 中间件 实践 代码 大全 第二 程序员 修炼 之道 小工 专家 java 程序员 修炼 之道 设计模式 复用 面向对象 软件 基础 深入 理解 java 虚拟机 jvm 高级 特性 最佳 实践 数据结构 算法 分析 java 语言 描述 java 常用 算法 手册 含盘 一起 学习 reading happy let begin reading
1741,数据库并发控制机制的理解,数据库 并发 控制 机制 理解 隔离 级别 相当于 数据库 实现 一套 现有 机制 我们 直接 可以 复用 对于 特殊 需求 我们 可以 自己 使用 机制 实现 其实 我们 自己 可以 使用 机制 实现 一套 隔离 级别 机制 只是 隔离 级别 一种 实现 感触 类似 封装 函数 数据库 隔离 级别 我们 实现 几个 线程 并发 控制 方法 但是 一些 特殊 并发 控制 我们 可以 自己 使用 机制 实现 如果 事务 设置 read uncommitted 那么 事务 update 提交 事务 能够 读取 事务 更新 数据 事务 如果 回滚 事务 看到 事务 回滚 数据 如果 事务 设置 read committed 那么 事务 update 并且 没有 提交 事务 读取 不到 事务 更新 数据 如果 事务 设置 repeatable read 那么 事务 update 提交 事务 仍然 读取 不到 事务 即使 多次 commit 事务 全都 读取 不到 如果 事务 设置 serializable 如果 事务 已经 开始运行 更新 那么 事务 任何 操作 一直 等待 如果 更新 还是 读取 以上 四种 级别 事务 如果 正在 更新 一条 数据 事务 如果 更新 一条 数据 等待 直到 超时 因为 事务 更新 数据 加上
1763,有了事务为什么还需要乐观锁和悲观锁,事务 为什么 需要 乐观 悲观 为什么 事务 东西 需要 乐观 悲观 事务 粗粒度 概念 乐观 悲观 可以 细粒度 控制 比如 抢票 假设 余票 只有 隔离 级别 可以 保证 事务 事务 不能 对方 数据 不能 更新 对方 正在 更新 数据 但是 事务 事务 认为 还有 张余票 于是 出票 更新 事务 解决 并发 问题 已经 存在 并发 问题 但是 事务 读取 过时 数据 依据 过时 数据 业务 处理 所以 需要 乐观 或者 悲观 记录 一个 信息 当前 已经 读取 数据 是不是 已经 过时 事务 这么 几种 实现 方式 协议 mvcc 时间 排序 协议 有效性 检查 协议 协议 事务 一种 实现 方式 事务 用锁 封装 一个 函数 可以 重用 而已 但是 几个 事务 函数 覆盖面 粗粒度 所以 有时候 我们 借助于 锁来 进行 细粒度 控制 事务 不能 保证 每个 操作 结果 正确 售票 时超卖 还是 发生 事务 保证 整个 操作 一个组 要么 全做 要么 全不做 但是 不能 保证 多个 事务 同时 读取 同一个 数据 数据 对象 加上 排它 其他 事务 不能 读取 修改 共享 数据 对象 可以 其他 事务 读取 不能 修改 事务 可以 用锁 实现 可以 保证 一致性 隔离 但是 用来 保证 并发 隔离 并发 有点 类似 但是 隔离 只是 保证 不会 出现 相互 读取 中间 数据 无法 解决 并发 问题
1777,《解忧杂货店》- 解答心中已经有结论的疑问,解忧 杂货店 解答 心中 已经 结论 疑问 解忧 杂货店 完后 感觉 非常 温情 围绕 一个 孤儿院 相关 叙述 各自 不同 悲剧 喜剧 故事 情节 离奇 前后 吻合 第一次 体验 东野 严密 逻辑 每个 烦恼 相对 局中人 来说 问题 难以解决 比如 他们 遭遇 父母 生意 失败 男朋友 离世 坚持 自己 参加 奥运会 缺钱 以至于 酒店 继承 鲜鱼 成为 歌手 梦想 冲突 他们 幸运 一个 杂货店 老头 未来 他们 最直击 人心 痛快淋漓 解答 但是 现实 我们 来说 没有 人会 这种 机遇 遇到 各种 抉择 烦恼 困苦 但是 其实 大部分 选择 不同 道路 理由 毕竟 人生 没有 什么 绝对 大部分 事情 来说 自己 往往 倾向 答案 然后 收集 不同 资料 看法 修正 自己 答案 甚至 重新 选择 有时候 他人 询问 往往 验证 自己 答案 或者 听到 相反 想法 从而 反面 印证 自己 答案 不能 一个 一个 深入 思考 雄志 一样 不要 敷衍 不要 抱怨 不要 应付 沉下 心来 忘记 自己 深入 思考 探究 问题 答案 解决 方法
1782,Java怎样单测void类型的方法？,java 怎样 单测 void 类型 方法 java sevice 层会 很多 void 类型 方法 比如 save update 方法 只是 一些 更新 不会 返回值 单测 不能 根据 方法 返回值 编写 只能 采用 特殊 方法 方法 环境 mockito testng 测试 方法 override public void updaterulename long ruleid string newrulename long ucid assert notnull ruleid 规则 id 不能 null assert notnull newrulename 规则 名称 不能 null assert notnull ucid 操作 ucid 不能 null string cleannewrulename stringutils trim newrulename if stringutils isblank cleannewrulename throw new illegalargumentexception 规则 名称 不能 为空 查询 规则 对象 rule rule queryrulebyid ruleid if null rule throw new illegaldataexception 没有 查到 规则 rule setruleid ruleid rule setrulename cleannewrulename rule setupdateucid ucid rule setupdatetime new date ruledao updateselective rule 测试 方法 test public void testupdaterulename long ruleid 1l string newrulename newrulename long ucid 123l list rule rules new arraylist rule rule rule new rule rule setrulestatus byte dbvaluesetting rule status take effect rules add rule 查询 规则 对象 map string object params new hashmap string object params put ruleid ruleid mockito when ruledao queryrulesbycondition params thenreturn rules mockito doanswer new answer object public object answer invocationonmock invocation 断点 这里 随后 执行 rule rule rule invocation getarguments assert asserttrue rule getrulename equals newrulename return null when ruledao updateselective mockito any rule class 断点 执行 这里 ruleservice updaterulename ruleid newrulename ucid 注释 所示 如果 两个 断点 的话 执行 过程 会先 执行 最后 调用 端点 执行 过程 执行 端点 stub 这时候 断点 可以 获取 方法 执行 对入 进行 assert 校验 即可 实现 目的 new anwer 接口 其中 只有 一个 方法 用于 设置 方法 调用 代理 执行 入口 public interface answer param invocation the invocation on the mock return the value to be returned throws throwable the throwable to be thrown answer invocationonmock invocation throws throwable 代码执行 ruledao updateselective rule 时候 触发 针对 mock 对象 调用 拦截器 拦截器 创建 一个 动态 代理 动态 代理 invocation 就是 new answer 覆盖 方法 使用 拦截 代理 两种 方法 实现 mock 对象 方法 出参 设定 获取 使用 这种 方式 可以 校验 void 方法 内部 执行 调用 情况
1784,使用javap命令或者eclipse的Bytecode visualizer插件阅读java字节码文件,使用 javap 命令 或者 eclipse bytecode visualizer 插件 阅读 java 字节 文件 阅读 java class 文件 常用 方法 jdk 自带 javap 命令 但是 eclipse bytecode visualizer 插件 可以 实现 阅读 直接 阅读 class 文件 能够 了解 一下 代码 如何 执行 内幕 下面 这个 代码 为例 package test import java util list public class test public void test string string xy1 system out println public static void main string args test new test test test 方法 很多 知道 返回 true 但是 为什么 这样 很多 可能 说不清楚 我们 分别 两种 方法 阅读 一下 它们 字节 文件 首先 需要 编译 得到 test class 文件 使用 javap 命令 阅读 进入 test class 目录 然后 使用 javap test class out 字节 文件 读取 存入 out 文件 然后 notepad ++ 打开 out 文件 test 函数 样子 字节 可以 看到 编译器 已经 自动 变量 合并 一起 成为 xy1 因此 相当于 xy1 两个 字符串 比较 两者 处于 常量 因此 相等 使用 eclipse bytecode visualizer 插件 阅读 安装 插件 之后 首先 配置 一下 显示 最大化 字节 信息 然后 打开 eclipse navigator 窗口 找到 编译 test class 右键 字节 方式 打开 看到 易读 字节 同时 编辑器 右侧 能够 自动 查看 该段 代码 流程图 非常 方便 使用 两种 方式 能够 查看 代码 编译 内幕 一些 奇怪 语法 现象 能够 自己 找出 为什么 但是 测试 过程 自己 print list string strs 方法 使用 javap 命令 byte visualizer 两者 输出 字节 码中 前者 泛型 信息 后者 进行 泛型 擦除 两者 不同 奇怪
1789,Python中文转拼音代码(支持全拼和首字母缩写),python 中文 拼音 代码 支持 全拼 首字母 缩写 本文 代码 https github com cleverdeng pinyin py 升级 得来 针对 原文 代码 以下 升级 可以 传入 参数 firstcode 如果 true 只取 汉子 第一个 拼音字母 如果 false 输出 全部 拼音 修复 如果 英文字母 直接 输出 修复 如果 分隔符 为空 字符串 仍然 正常 输出 升级 可以 指定 词典 文件 路径 代码 简单 直接 读取 一个 词典 字符 英文 映射 然后 挨个 替换 中文 拼音 即可 usr bin env python coding utf 原版 代码 https github com cleverdeng pinyin py 新增 功能 可以 传入 参数 firstcode 如果 true 只取 汉子 第一个 拼音字母 如果 false 输出 全部 拼音 修复 如果 英文字母 直接 输出 修复 如果 分隔符 为空 字符串 仍然 正常 输出 升级 可以 指定 词典 文件 路径 __ version __ 0.9 __ all __ pinyin import os pathclass pinyin object def __ init __ self self word dict def load word self dict file self dict file dict file if not os path exists self dict file raise ioerror notfoundfile with file self dict file as obj for line in obj readlines try line line split self word dict line line except line line split self word dict line line def hanzi2pinyin self string firstcode false result if not isinstance string unicode string string decode utf for char in string key ord char value self word dict get key char outpinyin str value split lower if not outpinyin outpinyin char if firstcode result append outpinyin else result append outpinyin return result def hanzi2pinyin split self string split firstcode false 提取 中文 拼音 param string 提取 中文 param split 分隔符 param firstcode 提取 全拼 还是 首字母 如果 true 表示 提取 首字母 默认 false 提取 全拼 result self hanzi2pinyin string string firstcode firstcode return split join result if __ name __ __ main __ test pinyin test load word word data string java 程序 性能 优化 java 程序 更快 稳定 print in string print out str test hanzi2pinyin string string print out test hanzi2pinyin split string string split firstcode true print out test hanzi2pinyin split string string split firstcode false 实例 main 函数 代码 输出 结果 代码 使用 方法 如果 需要 其他 提取 可以 修改 一下 代码 实现 代码 包含 词典 打包 下载
1810,Java堆溢出OutOfMemoryError之代码实例和原因分析,java 溢出 outofmemoryerror 代码 实例 原因 分析 本文 演示 编写 代码 使得 出现 java lang outofmemoryerror java heap space 异常 分析 gc 日志 得出 oom 原因 同时 对堆 转储 文件 进行 分析 查看 heap 塞满 罪魁祸首 实例 代码 代码 来自 深入 理解 java 虚拟机 jvm 高级 特性 最佳 实践 一书 package jvmtest import java util arraylist import java util list vm args xms20m xmx20m xx heapdumponoutofmemoryerror author zzm public class heapoom static class oomobject public static void main string args list oomobject list new arraylist oomobject while true list add new oomobject eclipse 运行 代码 需要 设置 size 最小值 最大值 同时 使用 xx printgcdetails 参数 开启 gc 日志 打印 使用 xx heapdumponoutofmemoryerror 参数 oom 转储 数据 verbose gc xms20m xmx20m xmn10m xx printgcdetails xx survivorratio xx heapdumponoutofmemoryerror 然后 运行 出现 以下 gc 日志 异常 信息 转储 信息 gc defnew 7640k 1024k 9216k 0.0164901 secs 7640k 4593k 19456k 0.0166075 secs times user 0.02 sys 0.00 real 0.02 secs gc defnew 9216k 1024k 9216k 0.0190825 secs 12785k 10510k 19456k 0.0191593 secs times user 0.02 sys 0.00 real 0.02 secs gc defnew 9216k 9216k 9216k 0.0000369 secs tenured 9486k 5704k 10240k 0.0520898 secs 18702k 14129k 19456k perm 148k 148k 12288k 0.0522306 secs times user 0.06 sys 0.00 real 0.05 secs full gc tenured 5704k 5704k 10240k 0.0435436 secs 14616k 14616k 19456k perm 148k 148k 12288k 0.0436766 secs times user 0.03 sys 0.00 real 0.04 secs full gc tenured 5704k 5695k 10240k 0.0499650 secs 14616k 14606k 19456k perm 148k 147k 12288k 0.0500832 secs times user 0.06 sys 0.00 real 0.05 secs java lang outofmemoryerror java heap spacedumping heap to java pid12428 hprof ... heap dump file created 29715028 bytes in 0.335 secs exception in thread main java lang outofmemoryerror java heap spaceat java util arrays copyof arrays java 2245 at java util arrays copyof arrays java 2219 at java util arraylist grow arraylist java 242 at java util arraylist ensureexplicitcapacity arraylist java 216 at java util arraylist ensurecapacityinternal arraylist java 208 at java util arraylist add arraylist java 440 at jvmtest heapoom main heapoom java 20 heap def new generation total 9216k used 8921k 0x33640000 0x34040000 0x34040000 eden space 8192k 100% used 0x33640000 0x33e40000 0x33e40000 from space 1024k 71% used 0x33e40000 0x33ef6600 0x33f40000 to space 1024k 0% used 0x33f40000 0x33f40000 0x34040000 tenured generation total 10240k used 5695k 0x34040000 0x34a40000 0x34a40000 the space 10240k 55% used 0x34040000 0x345cfc28 0x345cfe00 0x34a40000 compacting perm gen total 12288k used 150k 0x34a40000 0x35640000 0x38a40000 the space 12288k 1% used 0x34a40000 0x34a658c8 0x34a65a00 0x35640000 ro space 10240k 44% used 0x38a40000 0x38eb73f0 0x38eb7400 0x39440000 rw space 12288k 52% used 0x39440000 0x39a8dd28 0x39a8de00 0x3a040000 gc 日志 分析 从图 可以 看出 发生 gc full gc 两次 full gc 完成 仍然 发现 没有 空间 于是 抛出 oom 异常 首先 一下 gc full gc 日志 格式 还有 jvm heap 内存 结构 正常 运行状况 对象 eden 创建 如果 eden 大小 达到 阈值 触发 gc 运行 标记 复制 算法 eden 有效 对象 复制到 survivor 清除 eden 无效 对象 如果 eden 大小 再次 达到 阈值 触发 gc 对象 eden 对象 复制到 survivor 如果 survivor 对象 达到 年龄 限制 复制到 old 如果 young old 复制 对象 时候 发现 old 空间 无法 满足 触发 full gc 如果 full gc 之后 仍然 无法 承载 young 区要 晋升 对象 大小 那么 抛出 oom heap 开头 日志 可以 看到 eden 已经 占用 100% from survivor 占用 71% 无法 承载 来自 eden 对象 eden from survivor 对象 8192k 1024k 71% 8919.04 但是 old 剩下 10240 55% 空间 4608k 空间 对象 无法 100% 占用率 eden 创建 eden survivor 对象 不能 复制到 old 所以 oom 注意 本文 代码 特殊 每个 heapoom 对象 没有 释放 正常 情况 eden 很多 无用 对象 清除 晋升 old 大小 等于 eden survivor 大小 转储 文件 分析 由于 加上 xx heapdumponoutofmemoryerror 参数 所以 oom 自动 生成 一个 java pid12464 hprof 转储 文件 eclipse 安装 memory analyzer 插件 直接 可以 用该 插件 打开 打开 如下 所示 可以 看到 main 函数 线程 占用 13.9 mb 几乎 所有 heap 空间 图上 右键 list objects with outgoing references 可以 查看 部分 包含 那些 对象 打开 发现 一个 obejct 数组 包含 1215488 元素 每个 元素 heapoom 对象 每个 元素 引用 类型 8byte 就是 oom 罪魁祸首 结论 使用 jvm 参数 xx printgcdetails 可以 打印 gc 日志 使用 jvm 参数 xx heapdumponoutofmemoryerror 可以 oom 打印 转储 文件 使用 eclipse 插件 memory analyzer 可以 分析 转储 文件 oom 原因 old full gc 之后 剩余 空间 仍然 无法 承载 young 区要 晋升 对象 大小 本文 地址 http crazyant net 1810 html 转载 注明
1835,想要加悲观锁可是数据行还不存在怎么办？,想要 悲观 可是 数据 存在 怎么办 两个 并发 事务 想要 同一个 key 数据 进行 更新 但是 如果 这个 key 数据 存在 的话 那么 select .. for update 当然 不能 锁住 记录 想当然 想到 可不可以 insert 一下 然后 悲观 那么 引入 一个 问题 如果 两个 并发 事务 同时 insert 的话 插入 重复 数据 如果 insert unique key 重复 的话 第二个 线程 报错 有没有 优雅 方法 答案 mysql innodb insert ... on duplicate key update 语法 用法 官网 文档 https dev mysql com doc refman 5.7 en insert on duplicate htmlif you specify on duplicate key update and row is inserted that would cause duplicate value in uniqueindex or primary key mysql performs an update of the old row for example if column is declared as uniqueand contains the value the following two statements have similar effect insert into table values on duplicate key update update table set where 使用 on duplicate key update 语法 第二条 insert 语句 自动 变成 update 语句 不会 导致 重复 插入 数据 bug 做个 简单 测试 create table tcc idx int 11 typeid int 11 value1 int 11 value2 int 11 unique key idx typeid engine innodb default charset utf8 -- 第一条 sql 执行 新增 一条 数据 sql 多次 执行 效果 相同 因为 后续 操作 变成 updateinsert into tcc idx typeid value1 values on duplicate key update value1 -- 第二条 sql 直接 进行 update 新列 update 进去 insert into tcc idx typeid value2 values on duplicate key update value2 产出 结果 只有 一条 idx typeid value1 value2 这个 利器 那么 代码 可以 直接 insert .. on duplicate key update 这个 sql 执行 保证 数据库 存在 记录 然后 加上 悲观 保证 不同 事务 不会 出现 更新 冲突 情况 本文 地址 http crazyant net 1835 html
1858,通过JVM堆栈分析出现大量线程的原因,通过 jvm 堆栈 分析 出现 大量 线程 原因 最近 收到 线上 tomcat 线程 数目 超出 报警 于是 想要 分析 问题 原因 首先 进入 线上 使用 ps aux 命令 查看 jvm 进程 可以 得到 运行 tomcat jdk 地址 home work app jdk bin java 于是 知道 jdk jstack jps 命令 目录 然后 找到 jvm 进程 home work app jdk bin jps29145 jps208 bootstrap 得到 jvm tomcat 进程 208 堆栈 导出 下载 本地 jstack 208 log txt 下载 发现 线程 堆栈 大量 这样 日志 pool 103 thread prio 10 tid 0x00007f038001e000 nid 0x759d waiting on condition 0x00007f022e5e4000 java lang thread state waiting parking at sun misc unsafe park native method parking to wait for 0x00000000912fab28 java util concurrent locks abstractqueuedsynchronizer conditionobject at java util concurrent locks locksupport park locksupport java 156 at java util concurrent locks abstractqueuedsynchronizer conditionobject await abstractqueuedsynchronizer java 1987 at java util concurrent linkedblockingqueue take linkedblockingqueue java 399 at java util concurrent threadpoolexecutor gettask threadpoolexecutor java 947 at java util concurrent threadpoolexecutor worker run threadpoolexecutor java 907 at java lang thread run thread java 662 pool 102 thread prio 10 tid 0x00007f0380011000 nid 0x71ed waiting on condition 0x00007f022e6e5000 java lang thread state waiting parking at sun misc unsafe park native method parking to wait for 0x00000000912fa170 java util concurrent locks abstractqueuedsynchronizer conditionobject at java util concurrent locks locksupport park locksupport java 156 at java util concurrent locks abstractqueuedsynchronizer conditionobject await abstractqueuedsynchronizer java 1987 at java util concurrent linkedblockingqueue take linkedblockingqueue java 399 at java util concurrent threadpoolexecutor gettask threadpoolexecutor java 947 at java util concurrent threadpoolexecutor worker run threadpoolexecutor java 907 at java lang thread run thread java 662 可以 看到 线程 处于 waiting 状态 阻塞 试图 任务 队列 中取 任务 linkedblockingqueue take 这个 任务 队列 threadpoolexecutor 线程 启动 线程 任务 队列 也就是说 这些 线程 空闲 状态 任务 到来 补充 linkedblockingqueue 知识 并发 库中 blockingqueue 一个 比较 好玩 顾名思义 就是 阻塞 队列 该类 主要 提供 两个 方法 put take 前者 一个 对象 放到 队列 尾部 如果 队列 已经 等待 直到 空闲 节点 后者 head 一个 对象 如果 没有 对象 等待 直到 可取 对象 定位 问题 简单 查找 代码 发现 有个 位置 启动 线程 提交 任务 但是 任务 执行 返回 线程 没有 关闭 导致 问题 总结 使用 executorservice 提交 线程 任务 记得 关闭 启动 线程 时候 最好 线程 起个 名字 这样 线程 堆栈 问题 排查 更加 容易 文章 地址 http crazyant net 1858 html 转载 注明 来源
1861,Java线程死亡的几种情况,java 线程 死亡 几种 情况 java 线程 会议 如下 三种 方式 结束 结束 处于 死亡 状态 run 或者 call 方法 执行 完成 线程 正常 结束 线程 抛出 一个 捕获 exception error 直接 调用 线程 stop 方法 结束 线程 注意 主线 结束 其他 线程 任何 影响 不会 随之 结束 一旦 线程 启动 起来 拥有 主线 相同 地位 不会 受到 主线 结束 影响 为了 测试 某个 线程 是否 已经 死亡 可以 调用 线程 对象 isalive 方法 线程 处于 就绪 运行 阻塞 三种 状态 方法 返回 true 线程 处于 新建 死亡 两种 状态 方法 返回 false 如下 线程 死亡 情况 进行 测试 主线 代码 如下 public class threadtest public static void main string args throws interruptedexception thread new thread new runtask start while true thread sleep 1000 system out println 主线 线程 状态 isalive 测试 线程 正常 结束 isalive 返回 false 编写 线程 正常 结束 线程 执行 代码 public class runtask implements runnable override public void run for int idx idx 10 idx ++ system out println 线程 活着 idx try thread sleep 3000 catch interruptedexception printstacktrace 两个 线程 输出 结果 如下 所示 显示 线程 正常 执行 结束 使用 thread isalive 返回 false 主线 线程 状态 true 主线 线程 状态 true 线程 活着 主线 线程 状态 true 主线 线程 状态 true 主线 线程 状态 true 线程 活着 主线 线程 状态 true 主线 线程 状态 true 主线 线程 状态 true 线程 活着 10 主线 线程 状态 true 主线 线程 状态 true 主线 线程 状态 true 主线 线程 状态 false 主线 线程 状态 false 主线 线程 状态 false 主线 线程 状态 false 主线 线程 状态 false 测试 线程 抛出 异常 之后 线程 isalive 返回 false 修改 线程 代码 加入 异常 抛出 public class runtask implements runnable override public void run for int idx idx 10 idx ++ system out println 线程 活着 idx try thread sleep 3000 catch interruptedexception printstacktrace if idx throw new runtimeexception am die 再次 执行 观察 输出 主线 线程 状态 true 主线 线程 状态 true 主线 线程 状态 true 线程 活着 主线 线程 状态 true 主线 线程 状态 true 主线 线程 状态 true 线程 活着 主线 线程 状态 true 主线 线程 状态 true 主线 线程 状态 trueexception in thread thread java lang runtimeexception am dieat runtask run runtask java 15 at java lang thread run thread java 662 主线 线程 状态 false 主线 线程 状态 false 主线 线程 状态 false 可以 看到 抛出 异常 线程 直接 终止 变成 flase 状态 总结 线程 正常 结束 或者 线程 抛出 捕获 异常 线程 变成 死亡 状态 使用 isalive 函数 返回 false 本文 地址 http crazyant net 1861 html 转载 注明 来源
1886,将Maven工程打包成可执行JAR包的方法,maven 工程 打包 成可 执行 jar 方法 如果 项目 中有 需要 后台 执行 任务 但是 主要 逻辑 java 代码 那么 采用 方式 单独 建立 一个 maven 模块 打成 jar 然后 linux 后台 通过 命令 执行 jar main 函数 java classpath backtask jar net crazyant runwebservice 于是 前提 maven 模块 打包 jar 原本 简单 事情 出现 很多 问题 原始 打包 方式 使用 maven assembly pluginpom 配置 片段 build plugins plugin groupid org apache maven plugins groupid artifactid maven jar plugin artifactid plugin plugin artifactid maven assembly plugin artifactid version 2.2 version configuration finalname mdm v3 backtasks finalname descriptorrefs descriptorref jar with dependencies descriptorref descriptorrefs configuration executions execution phase package phase goals goal single goal goals execution executions plugin plugin groupid org apache maven plugins groupid artifactid maven resources plugin artifactid version 2.6 version configuration encoding utf encoding configuration plugin plugins build 这种 打包 方式 可以 生成 target mdm v3 backtasks 1.0 0.2 jar jar 有些 工程 中是 没有 问题 但是 工程 打包 运行 出现 如下 问题 exception in thread main org springframework beans factory parsing beandefinitionparsingexception configuration problem unable to locate spring namespacehandler for xml schema namespace http www springframework org schema context offending resource class path resource applicationcontext backtasks xml at org springframework beans factory parsing failfastproblemreporter error failfastproblemreporter java 68 at org springframework beans factory parsing readercontext error readercontext java 85 at org springframework beans factory parsing readercontext error readercontext java 80 at org springframework beans factory xml beandefinitionparserdelegate error beandefinitionparserdelegate java 318 at org springframework beans factory xml beandefinitionparserdelegate parsecustomelement beandefinitionparserdelegate java 1435 at org springframework beans factory xml beandefinitionparserdelegate parsecustomelement beandefinitionparserdelegate java 1428 at org springframework beans factory xml defaultbeandefinitiondocumentreader parsebeandefinitions defaultbeandefinitiondocumentreader java 195 at org springframework beans factory xml defaultbeandefinitiondocumentreader doregisterbeandefinitions defaultbeandefinitiondocumentreader java 139 at org springframework beans factory xml defaultbeandefinitiondocumentreader registerbeandefinitions defaultbeandefinitiondocumentreader java 108 at org springframework beans factory xml xmlbeandefinitionreader registerbeandefinitions xmlbeandefinitionreader java 493 at org springframework beans factory xml xmlbeandefinitionreader doloadbeandefinitions xmlbeandefinitionreader java 390 at org springframework beans factory xml xmlbeandefinitionreader loadbeandefinitions xmlbeandefinitionreader java 334 at org springframework beans factory xml xmlbeandefinitionreader loadbeandefinitions xmlbeandefinitionreader java 302 at org springframework beans factory support abstractbeandefinitionreader loadbeandefinitions abstractbeandefinitionreader java 174 at org springframework beans factory support abstractbeandefinitionreader loadbeandefinitions abstractbeandefinitionreader java 209 at org springframework beans factory support abstractbeandefinitionreader loadbeandefinitions abstractbeandefinitionreader java 180 at org springframework beans factory support abstractbeandefinitionreader loadbeandefinitions abstractbeandefinitionreader java 243 at org springframework context support abstractxmlapplicationcontext loadbeandefinitions abstractxmlapplicationcontext java 127 at org springframework context support abstractxmlapplicationcontext loadbeandefinitions abstractxmlapplicationcontext java 93 at org springframework context support abstractrefreshableapplicationcontext refreshbeanfactory abstractrefreshableapplicationcontext java 130 at org springframework context support abstractapplicationcontext obtainfreshbeanfactory abstractapplicationcontext java 537 at org springframework context support abstractapplicationcontext refresh abstractapplicationcontext java 451 at org springframework context support classpathxmlapplicationcontext init classpathxmlapplicationcontext java 139 at org springframework context support classpathxmlapplicationcontext init classpathxmlapplicationcontext java 83 网上 很多 文章 发现 首先 大家 支持 maven assembly plugin 插件 替换成 maven shade plugin 插件 但是 替换成 maven shade plugin 之后 仍然 遇到 很多 问题 使用 maven shade plugin 逐步 解决问题 使用 maven shade plugin 插件 没有 一下子 问题 解决 经过 很多 步骤 修改 spring xml schema 编写 方式 原始 声明 这样 xml version 1.0 encoding utf beans xmlns http www springframework org schema beans xmlns xsi http www w3 org 2001 xmlschema instance xmlns context http www springframework org schema context xsi schemalocation http www springframework org schema beans http www springframework org schema beans spring beans xsd http www springframework org schema context http www springframework org schema context spring context xsd 如下 修改 xsd 版本 加上 xml version 1.0 encoding utf beans xmlns http www springframework org schema beans xmlns xsi http www w3 org 2001 xmlschema instance xmlns context http www springframework org schema context xsi schemalocation http www springframework org schema beans http www springframework org schema beans spring beans 3.0 xsd http www springframework org schema context http www springframework org schema context spring context 3.0 xsd 引入 maven shade plugin 插件 打包 方式 遇到 问题 原来 maven assembly plugin 替换成 打包 方式 build finalname mdm v3 backtasks finalname plugins plugin groupid org apache maven plugins groupid artifactid maven jar plugin artifactid plugin plugin groupid org apache maven plugins groupid artifactid maven shade plugin artifactid version 2.4 version executions execution phase package phase goals goal shade goal goals execution executions plugin plugin groupid org apache maven plugins groupid artifactid maven resources plugin artifactid version 2.6 version configuration encoding utf encoding configuration plugin plugins build 然后 下面 exception in thread main java lang securityexception invalid signature file digest for manifest main attributes at sun security util signaturefileverifier processimpl signaturefileverifier java 286 at sun security util signaturefileverifier process signaturefileverifier java 239 at java util jar jarverifier processentry jarverifier java 317 at java util jar jarverifier update jarverifier java 228 at java util jar jarfile initializeverifier jarfile java 348 at java util jar jarfile getinputstream jarfile java 415 at sun misc urlclasspath jarloader getinputstream urlclasspath java 775 at sun misc resource cachedinputstream resource java 77 at sun misc resource getbytebuffer resource java 160 at java net urlclassloader defineclass urlclassloader java 436 at java net urlclassloader access 100 urlclassloader java 71 at java net urlclassloader run urlclassloader java 361 at java net urlclassloader run urlclassloader java 355 at java security accesscontroller doprivileged native method at java net urlclassloader findclass urlclassloader java 354 at java lang classloader loadclass classloader java 425 at sun misc launcher appclassloader loadclass launcher java 308 at java lang classloader loadclass classloader java 358 at sun launcher launcherhelper checkandloadmain launcherhelper java 482 http zhentao li blogspot com 2012 06 maven shade plugin invalid signature html 找到 解决 方法 you need to add the following to pom xml configuration filters filter artifact artifact excludes exclude meta inf sf exclude exclude meta inf dsa exclude exclude meta inf rsa exclude excludes filter filters configuration 于是 加入 以上 filter pom 内容 build finalname mdm v3 backtasks finalname plugins plugin groupid org apache maven plugins groupid artifactid maven jar plugin artifactid plugin plugin groupid org apache maven plugins groupid artifactid maven shade plugin artifactid version 2.4 version executions execution phase package phase goals goal shade goal goals configuration filters filter artifact artifact excludes exclude meta inf sf exclude exclude meta inf dsa exclude exclude meta inf rsa exclude excludes filter filters configuration execution executions plugin plugin groupid org apache maven plugins groupid artifactid maven resources plugin artifactid version 2.6 version configuration encoding utf encoding configuration plugin plugins build 修改 提交 不幸 爆出 下面 错误 exception in thread main org springframework beans factory parsing beandefinitionparsingexception configuration problem unable to locate spring namespacehandler for xml schema namespace http www springframework org schema context offending resource class path resource applicationcontext backtasks xml at org springframework beans factory parsing failfastproblemreporter error failfastproblemreporter java 68 at org springframework beans factory parsing readercontext error readercontext java 85 at org springframework beans factory parsing readercontext error readercontext java 80 at org springframework beans factory xml beandefinitionparserdelegate error beandefinitionparserdelegate java 318 at org springframework beans factory xml beandefinitionparserdelegate parsecustomelement beandefinitionparserdelegate java 1435 at org springframework beans factory xml beandefinitionparserdelegate parsecustomelement beandefinitionparserdelegate java 1428 at org springframework beans factory xml defaultbeandefinitiondocumentreader parsebeandefinitions defaultbeandefinitiondocumentreader java 195 at org springframework beans factory xml defaultbeandefinitiondocumentreader doregisterbeandefinitions defaultbeandefinitiondocumentreader java 139 at org springframework beans factory xml defaultbeandefinitiondocumentreader registerbeandefinitions defaultbeandefinitiondocumentreader java 108 at org springframework beans factory xml xmlbeandefinitionreader registerbeandefinitions xmlbeandefinitionreader java 493 at org springframework beans factory xml xmlbeandefinitionreader doloadbeandefinitions xmlbeandefinitionreader java 390 at org springframework beans factory xml xmlbeandefinitionreader loadbeandefinitions xmlbeandefinitionreader java 334 at org springframework beans factory xml xmlbeandefinitionreader loadbeandefinitions xmlbeandefinitionreader java 302 at org springframework beans factory support abstractbeandefinitionreader loadbeandefinitions abstractbeandefinitionreader java 174 at org springframework beans factory support abstractbeandefinitionreader loadbeandefinitions abstractbeandefinitionreader java 209 at org springframework beans factory support abstractbeandefinitionreader loadbeandefinitions abstractbeandefinitionreader java 180 at org springframework beans factory support abstractbeandefinitionreader loadbeandefinitions abstractbeandefinitionreader java 243 at org springframework context support abstractxmlapplicationcontext loadbeandefinitions abstractxmlapplicationcontext java 127 at org springframework context support abstractxmlapplicationcontext loadbeandefinitions abstractxmlapplicationcontext java 93 at org springframework context support abstractrefreshableapplicationcontext refreshbeanfactory abstractrefreshableapplicationcontext java 130 at org springframework context support abstractapplicationcontext obtainfreshbeanfactory abstractapplicationcontext java 537 at org springframework context support abstractapplicationcontext refresh abstractapplicationcontext java 451 at org springframework context support classpathxmlapplicationcontext init classpathxmlapplicationcontext java 139 at org springframework context support classpathxmlapplicationcontext init classpathxmlapplicationcontext java 83 最后 http robert reiz com 2011 11 14 832 页面 找到 答案 是因为 项目 包含 很多 spring jar 不同 spring jar 相同 文件名称 他们 相互 冲突 为了 避免 数据文件 相互 覆盖 应该 合并 他们 如果 使用 maven shade plugin 的话 可以 pom 加上 下面 信息 解决 transformer implementation org apache maven plugins shade resource appendingtransformer resource meta inf spring handlers resource transformer transformer implementation org apache maven plugins shade resource appendingtransformer resource meta inf spring schemas resource transformer 问题 官方 解释 位于 http maven apache org plugins maven shade plugin examples resource transformers html merging content of specific files with appendingtransformer and xmlappendingtransformer 小节 解释 很多 jar 包含 相同 文件名称 为了 避免 相互 覆盖 可以 他们 合并 单个 文件 一个 例子 就是 spring context plexus spring 他俩 meta inf spring handlers 文件 这个 文件 spring 用来 处理 xml schema namespaces 通过 如下 所示 merge 方法 可以 解决 这个 问题 问题 终于 找到 原来 这里 官方 贴出来 pom project ... build plugins plugin groupid org apache maven plugins groupid artifactid maven shade plugin artifactid version 2.4 version executions execution phase package phase goals goal shade goal goals configuration transformers transformer implementation org apache maven plugins shade resource appendingtransformer resource meta inf spring handlers resource transformer transformer implementation org apache maven plugins shade resource appendingtransformer resource meta inf spring schemas resource transformer transformers configuration execution executions plugin plugins build ... project 最终 解决方案 最终 pom 文件 如下 所示 build finalname mdm v3 backtasks finalname plugins plugin groupid org apache maven plugins groupid artifactid maven jar plugin artifactid plugin plugin groupid org apache maven plugins groupid artifactid maven shade plugin artifactid version 2.4 version executions execution phase package phase goals goal shade goal goals configuration transformers transformerimplementation org apache maven plugins shade resource appendingtransformer resource meta inf spring handlers resource transformer transformerimplementation org apache maven plugins shade resource appendingtransformer resource meta inf spring schemas resource transformer transformers filters filter artifact artifact excludes exclude meta inf sf exclude exclude meta inf dsa exclude exclude meta inf rsa exclude excludes filter filters configuration execution executions plugin plugin groupid org apache maven plugins groupid artifactid maven resources plugin artifactid version 2.6 version configuration encoding utf encoding configuration plugin plugins build 使用 pom 配置 打包 运行 成功 没有 出错 参考 链接 官方 http maven apache org plugins maven shade plugin examples resource transformers html 安全 问题 http zhentao li blogspot com 2012 06 maven shade plugin invalid signature htmlcontext 问题 http robert reiz com 2011 11 14 832 本文 地址 http crazyant net 1886 html 转载 注明 来源
1890,Python使用unittest实现简单的单元测试实例,python 使用 unittest 实现 简单 单元测试 实例 如果 项目 复杂 进行 单元测试 保证 降低 出错率 方法 python 提供 unittest 可以 方便 实现 单元测试 从而 可以 替换 繁琐 杂乱 main 函数 测试 方法 测试用例 测试方法 进行 统一 管理 维护 本文 给出 一个 实例 简单 一下 明白 首先 给出 一个 测试 python 模块 代码 如下 coding utf8 日期 常用 author www crazyant net def get date year month pm date 获取 参数 pm date 对应 年份 月份 if not pm date raise exception get curr year month pm date can not be none get date yyyymmddhhmmss pattern str date str pm date replace replace replace year str date month str date return year month 然后 可以 编写 测试 脚本 代码 如下 coding utf8 测试 date service py author peishuaishuai import unittestfrom service import date serviceclass dateservicetest unittest testcase test clean tb async src acct py def setup self 这里 资源 初始化 pass def teardown self 这里 资源 释放 pass def test get date year month self 测试方法 测试方法 应该 test 开头 pm date 2015 11 25 14 40 52 year month date service get date year month pm date self assertequal year 2015 year not equal self assertequal month 11 month not equal def test get date year month self 测试方法 测试方法 应该 test 开头 pm date 20161225144052 year month date service get date year month pm date self assertequal year 2016 year not equal self assertequal month 12 month not equal test mainif __ name __ __ main __ unittest main 运行 这个 test date service py 打印 如下 信息 ..---------------------------------------------------------------------- ran tests in 0.000 sok 这里 一个点 代表 运行 成功 一个 测试 最后 给出 运行 成功 全部 多少 测试 以及 测试 时间 之前 很多 时间 一直 知道 单测 什么 因为 单测 只是 程序运行 一遍 没有 创建 逻辑 心里 疑惑 已经 程序 按照 想法 按照 设计 运行 为什么 要用 单测 重新 走一遍 后来 一个 事情 代码 bug 调试 好久 发现 问题 obja equals objb 因为 obja objb 一个 long 一个 integer 所以 即使 数值 相同 不会 相等 那一刻 发现 单测 事情 其实 就是 验证 程序 是否 按照 想法 运行 这才 终极 目的 但是 却是 关键 事情 设计 往往 没有 但是 出来 代码 经常 不是 按照 我们 所想 运行 单测 就是 验证 代码 是不是 按照 我们 想象 运行 单测 这个 技术 意义 所在 本文 地址 http crazyant net 1890 html 转载 注明 来源
1895,Bash Shell怎样检查文件是否存在？,bash shell 怎样 检查 文件 是否 存在 unix 系统 bash 环境 怎样 检查 文件 是否 存在 shell test 命令 可以 用来 检测 文件 类型 或者 比较 数值 是否 相等 命令 用来 检查 文件 是否 存在 可以 如下 命令 进行 检查 test filename filename test filename filename 下面 命令 使用 shell 条件 表达式 判断 etc hosts 文件 是否 存在 etc hosts && echo found echo not found 组合 命令 输出 以下内容 found 常见 用法 test 命令 放置 if .. else .. fi 条件 判断 条件 表达式 然后 其中 不同 分支 逻辑 bin bashfile etc hosts if file thenecho file found elseecho file not found fi 检测 文件属性 相关 操作符 如果 文件 存在 并且 具有 相应 属性 如下 操作符 返回 true file file exists and is block special file file exists and is character special file file exists and is directory file file exists file file exists and is regular file file file exists and is set group id file file exists and is owned by the effective group id file file exists and is symbolic link same as file file exists and has its sticky bit set file file exists and is symbolic link same as file file exists and is owned by the effective user id file file exists and is named pipe file file exists and read permission is granted file file exists and has size greater than zero file file exists and is socket fd file descriptor fd is opened on terminal file file exists and its set user id bit is set file file exists and write permission is granted file file exists and execute or search permission is granted 以上 命令 man test 复制 使用 上述 符号 方法 一模一样 if operator filename then echo filename found take some action here else echo filename not found take some action here fi 文章 翻译 http www cyberciti biz faq unix linux test existence of file in bash 本文 地址 http crazyant net 1895 html 转载 注明 来源
1898,使用PHPUnit编写PHP单元测试的方法,使用 phpunit 编写 php 单元测试 方法 局限于 java testng eclipse 非常 强大 手动 单测 方法 这个 框框 试图 一直 eclipse 安装 php 测试 框架 发现 一直 问题 最后 发觉 phpunit 单测 思想 直接 脚本 测试 php 文件 避免 手工 操作 测试 本来 应该 自动化 不是 所以 接受 phpunit 命令行 测试方法 不是 eclipse 手动 右键 运行 测试 phpunit 官网 https phpunit de 使用 方法 文档 明确 加以 补充 php 安装 目录 加入 windows path 环境变量 任意 建立 一个 php 二进制 文件 执行 目录 比如 bin3 bin 加入 windows path 环境变量 下载 https phar phpunit de phpunit phar 文件 保存 bin phpunit phar5 打开 命令行 例如 windows 输入 cmd enter 建立 包覆 批处理 脚本 最后 得到 bin phpunit cmd users username cd binc bin echo php dp0phpunit phar phpunit cmdc bin exit7 新开 一个 命令行 窗口 确认 一下 可以 任意 路径 执行 phpunit users username phpunit -- versionphpunit by sebastian bergmann and contributors 如果 任意 命令行 执行 phpunit 不会 报错 说明 安装 成功 一下 测试 编写 一个 文件 注意 下面 namespace 引入 phpunit 方法 phpnamespace mytest test phpunit author www crazyant net class mytestclass extends phpunit framework testcase testing the answer to do you love unit tests public function testdoyouloveunittests love true this asserttrue love 这个 文件 放置 tmp test phpunit php 然后 打开 命令行 执行 以下 命令 即可 完成 测试 tmp cd tmpc tmp phpunit test phpunit phpphpunit 5.1 by sebastian bergmann and contributors .. 100% time 106 ms memory 9.50 mbok test assertion tmp 既然 命令行 可以 执行 测试 那么 当然 方便 测试 命令 一个 自动化 bat 或者 bash 文件 每次 开发 完成 执行 全量 自动测试 即可 phpunit 官网 地址 https phpunit de documentation html 本文 地址 http crazyant net 1898 html 转载 注明 来源
1901,MySQL导入导出数据时遇到Tab符号和换行符号怎么办？,mysql 导入 导出 数据 遇到 tab 符号 换行符 怎么办 etl 下载 转换 导入 开发 时候 经常 遇到 mysql 导出 数据 经过 计算 导入到 mysql 场景 那么 一个 很难 绕过 问题 如果 mysql 包含 特殊字符 怎么办 因为 导出 文件 默认 按照 分割 分割 现在 字段 出现 不是 同时 导入 文件 load data 可以 指定 fields lines 分隔符 默认 情况 可是 现在 字段 这不乱 直观 想到 办法 导出 时候 select 语句 使用 mysql replace 函数 替换成 普通 字符串 使用 程序处理 load 库里 之后 使用 replace 替换 但是 如果 数据量 很大 的话 替换 现实 其实 这个 问题 真的 问题 答案 根本 不用 考虑 n1 mysql select 导出 自动 转义 shell python 代码 按行 读取 程序 遇到 自动 略过 shell python 代码 分割 程序 遇到 自动 略过 load data 导入 数据 时候 遇到 当成 普通 字符 处理 一个 测试 知道 准备 数据库 数据表 测试数据 create database test 40100 default character set utf8 use test set names utf8 create table table from id int 11 not null auto increment comment id name varchar 500 default null comment 名称 remark varchar 500 default null comment 备注 key id id engine innodb default charset utf8 comment 导入 测试 来源 create table table to id int 11 not null auto increment comment id name varchar 500 default null comment 名称 remark varchar 500 default null comment 备注 key id id engine innodb default charset utf8 comment 导入 测试 目的 truncate table table from truncate table table to insert into table from values name1 我们 屌丝 程序员 insert into table from values name2 我们 屌丝 程序员 insert into table from values name3 我们 屌丝 程序员 insert into table from values name4 我们 屌丝 程序员 执行 导出 数据 mysql h127.0 0.1 uroot p123456 p3306 use test set names utf8 select from table from tmp dump table from txt 查看 一下 tmp dump table from txtmore tmp dump table from txt id name remark1 name1 我们 屌丝 程序员 name2 我们 屌丝 程序员 n3 name3 我们 屌丝 程序员 name4 我们 屌丝 程序员 发现 导出 数据 出现 但是 字符 直接 显示 出来 不是 变成 真正 tab 换行 我们 vim 打开 vim tmp dump table from txt 输入 搜索 发现 匹配 隐藏 真正 tab 输入 搜索 搜到 直接 显示 出来 搜索 效果 相同 说明 导出 文件 字段 如果 包含 自动 变成 使用 程序处理 使用 python 一个 测试程序 看能 不能 正常 按行 读取 tab 分割 打开 python 命令行 for row in open tmp dump table from txt ... print row ... print join str row split ... id name remark id name remark name1 我们 屌丝 程序员 name1 我们 屌丝 程序员 name2 我们 屌丝 程序员 name2 我们 屌丝 程序员 name3 我们 屌丝 程序员 name3 我们 屌丝 程序员 name4 我们 屌丝 程序员 name4 我们 屌丝 程序员 可以 看到 程序 正常 分割 分割 没有 按照 内部 出现 分割 因为 他们 直接 文件 导入到 一个 新表 执行 导入 mysql h127.0 0.1 uroot p123456 p3306 use test set names utf8 load data local infile tmp dump table from txt into table table to fields terminated by lines terminated by ignore lines id name remark 执行命令 没有 异常 打开 目标 结果 发现 跟源表 一模一样 最终 结论 使用 select 导出 mysql 数据 时候 字段 自动 替换成 使用 shell python 读取 文件 时候 如果 遇到 不会 作为 分隔符 使用 split 函数 分割 时候 如果 遇到 略过 使用 load data mysql 导入 数据 时候 里面 不会 作为 分隔符 和行 分隔符 本文 地址 http crazyant net 1901 html 转载 注明 来源
1922,数据处理中提升性能的方法-引入并发但是避免同步,数据处理 提升 性能 方法 引入 并发 但是 避免 同步 背景 只要 存在 数据库 后台 批量 处理 数据 需求 比如 数据表 备份 定期 清理 数据 替换 数据 迁移 对于 批量 处理 来说 往往 涉及 大量 查询 过滤 归类 聚合 计算 批量 脚本 直接 查询数据库 往往 性能 太低 甚至 因为 一个 大型 sql 导致 数据库 锁表 出现 线上 事故 因此 一般 采用 先导 文件 文件 计算 然后 导入 比如 使用 mysql select from table output txt 方式 执行 sql 结果 导出 文件 针对 文件 使用 各种 方式 进行 聚合 过滤 替换 计算 最后 产出 需要 使用 格式 发布 产出 文件 或者 使用 load data 命令 导入到 数据库 由于 只是 一次性 批量 查询数据库 导出 文件 然后 针对 文件 进行 计算 不是 每次 查询数据库 大量 节省 网络 io 耗费 从而 提升 处理 速度 然而 得到 导出 文件 之后 如果 文件 过大 或者 计算 逻辑 复杂 比如 大量 调用 耗费 cpu 正则 匹配 聚合 计算 那么 单线程 处理 耗费 大量 时间 这时候 可以 引入 并发 处理 使得 机器 cpu 内存 io 网络 资源 全部 充分利用 起来 大幅度降低 处理 时间 引入 多线程 拆分 输入 文件 多个 每个 文件 启动 一个 处理 线程 hadoop map reduce 做法 文件 split 成小 分片 文件 然后 针对 每个 分片 计算 最后 每个 分片 结果 聚合 一起 然而 由于 hadoop 调度 集群 稳定性 各种 原因 对于 mb 大小 级别 文件 处理 发现 速度 非常 有时候 甚至 单机 单线程 处理速度 还慢 单机 单线程 改成 多线程 往往 发现 令人 惊讶 效果 提升 直观 做法 使用 主线 读取 输入 单个 文件 然后 读取 结果 分配 给子 线程 处理 然后 主线 程做 整合 这种 方式 因为 多线程 共用 单个 文件 io 需要 加入 文件 同步 机制 最后 发现 性能 瓶颈 单个 文件 读取 同步 之上 可以 文件 分片 成小 文件 然后 每个 文件 分配 单个 线程 单独 处理 避免 线程 资源 同步 每个 线程 享用 单独 cpu 内存 单元 文件 句柄 处理速度 达到 最快 使用 这种 方式 可以 以下 步骤 进行 使用 shell 输入 文件 分成 预定 线程 数目 份数 存放 一个 目录 输入 文件 目录 路径 作为 参数 编程语言 java python 读取 目录 所有 文件 对于 每个 文件 启动 一个 处理 线程 进行 处理 shell 输出 目录 所有 文件 使用 cat file output file 方式 得到 最终 计算结果 ## 输入 文件 分成 多个 文件 启动 多线程 进行 处理 输出 结果 文件 function run multi task 开启 多个 异步 线程 splits count 20 输入 文件 总数 source file lines count cat input file wc 计算 拆分 文件 个数 split file lines count source file lines count splits count 进行 文件 拆分 split split file lines count input file input dir inputfile _# 执行 java 程序 java cmd classpath jar path net crazyant backtaskmain input dir output dir output err dir 合并 文件 cat output dir output file run multi task 这里 注意 拆分 文件 时候 不能 使用 split 按照 大小 进行 拆分 因为 输入 文件 截断 对应 java 程序 通过 读取 文件夹 文件 列表 方法 每个 文件 单独 启动 一个 线程 public class backtaskmain public static void main string args string inputdatadir args string outputdatadir args string errdatadir args file inputdir new file inputdatadir file inputfiles inputdir listfiles 记录 开启 线程 list thread threads new arraylist thread for file inputfile inputfiles if inputfile getname equals inputfile getname equals .. continue 针对 每个 inputfile 生成 对应 outputfile errfile string outputsrclicefpath outputdatadir inputfile getname out string erroroutputfpath errdatadir inputfile getname err 创建 runnable backrzinterface backrzinterface new backrzinterface backrzinterface setinputfilepath inputfile getabsolutepath backrzinterface setoutputfilepath outputsrclicefpath backrzinterface seterroroutputfpath erroroutputfpath 创建 thread 启动 线程 thread singlerunthread new thread backrzinterface threads add singlerunthread singlerunthread start for thread thread threads try 使用 thread join 等待 所有 线程 执行 完毕 thread join system out println thread getname has over catch interruptedexception printstacktrace system out println proccess all over 通过 这种 方式 文件 分成 文件 启动 多个 线程 每个 线程 处理 一个 文件 最终 每个 文件 结果 聚合 得到 最终 产出 性能 大幅 提升 若有 依赖 资源 可以 线程 复制 拆分 克隆 防止 依赖 资源 成为 性能 瓶颈 上面 代码 backrzinterface 每个 线程 启动 时要 使用 runnable 对象 可以 看到 每次 new 方式 创建 创建 runnablebackrzinterface backrzinterface new backrzinterface 这样 每个 处理 线程 依赖 backrzinterface 独立 这个 runnable 代码 使用 不会 存在 同步 问题 如果 多线程 处理 需要 使用 外部 资源 最好 办法 使得 每个 线程 单独 使用 自己 独占 资源 相互之间 不会 存在 冲突 可以 实现 最大化 并发 处理 其他 一些 例子 比如 多线程 用到 字典 文件 那么 方法 首先 字典 文件 复制 多份 每个 线程 使用 自己 独占 字典 避免 并发 同步 访问 字典 多线程 需要 统一 id 发号 可以 提前 计算 每个 输入 文件 行数 然后 依次 生成 第一个 线程 需要 id 范围 第二个 线程 需要 id 范围 这些 不同 id 范围 可以 分别 生成 不同 文件 这样 每个 线程 使用 各自 独立 id 资源 避免 多个 线程 时刻 访问 单个 id 发号 服务 使得 发号 成为 性能 瓶颈 可能 多线程 如果 依赖 相同 service 如果 可以 每次 new 对象 每次 new 如果 bean spring 管理 service 加上 scope prototype 或者 对象 每次 clone 一下 得到 一个 对象 保证 最终 每个 线程 使用 自己 独占 对象 尽量 使用 函数 编程 思想 每个 函数 不要 产生 副作用 不要 修改 入参 结果 只能 通过 return 返回 避免 增加 代码 同步 冲突 可能 通过 以上 这些 类似 方法 每次 可能 需要 同步 访问 共享资源 通过 复制 分片 手段 得到 不同 每个 线程 单独 访问 自己 一份 避免 同步 访问 最终 实现 性能 最优 避免 同步 终极 方法 使用 进程 进行 实现 资源 隔离 如果 文件 分成 多份 依赖 id 词典 资源 相应 提供 多份 但是 发现 代码 存在 无法 解决 代码 级别 同步 怎么办 相对 想尽办法 解决 代码 同步 问题 来说 多线程 进程 之间 性能 差别 微乎其微 我们 知道 线程 使用 进程 资源 所以 导致 线程 之间 存在 竞争 进程 资源 但是 对于 进程 来说 cpu 内存 硬件资源 完全 隔离 这时候 程序运行 进程 不是 多线程 反而 更好 提升 性能 对于 一些 支持 多线程 不好 语言 比如 php 直接 这种 进程 计算 方法 速度 并不比 支持 多线程 java python 语言 拆分 文件 就是 启动 进程 splits count 20input splits dir input dir splits output splits dir output dir splits 输入 文件 行数 source file lines count cat input file wc 每个 文件 拆分 行数 总行 除以 拆分 文件 个数 就是 对应 进程 个数 split file lines count source file lines count splits count 执行 拆分 注意 这里 使用 进行 级别 拆分 更好 split split file lines count input file input splits dir inputfile process idx 1for fname in ls input splits dir doinput fpath input splits dir fnameouput fpath output splits dir fname 后台 执行 所有 进程 php php main php input fpath ouput fpath process idx ++ done 等待 所有 后台 进程 执行 结束 wait 合并 文件 cat output splits dir output file 上述 代码 使用 shell 符号 可以 后台 同时 启动 多个 进程 使用 wait 语法 可以 实现 多线程 thread join 特性 等待 所有 进程 执行 结束 总结 对于 输入 文件 大小 计算 复杂度 处于 单机 集群 计算 之间 数据处理 使用 并发 处理 最为 合适 但是 并发 同步 处理 却会 降低 多线程 性能 这时 可以 借助于 输入 文件 复制 拆分 依赖 资源 复制 拆分 切片 方法 实现 每个 线程 处理 自己 独占 资源 从而 最大化 提升 计算速度 对于 一些 无法 避免 代码 同步 冲突 逻辑 可以 退化 进程 处理 数据 借助于 shell 后台 进程 支持 实现 进程 级别 资源 独占 最终 大幅 提升 处理 性能
1931,Log4j将不同Package的日志输出到不同的文件的方法,log4j 不同 package 日志 输出 不同 文件 方法 随着 项目 规模 越来越 不断 引入 模块 不同 模块 打印 自己 日志 最后 造成 日志 根本 没法 查看 比如 自己 项目 存在 以下 这些 日志 接收 外界 消息 日志 对外 发送 消息 日志 后台 常驻 线程 处理 日志 外部 接口 访问 参数 返回 结果 接口 日志 service 访问 数据库 产生 sql 日志 其中 消息日志 后台 线程 日志 数据量 非常 庞大 如果 所有 日志 打印 一个 文件 使用 tail log log 文件 发现 日志 快速 滚动 根本无法 查看 甚至 定位 一个 具体 sql 或者 service 访问 日志 解决 方法 就是 可以 不同 日志 加以 分类 输出 这样 相互 日志 影响 尤其 重要 接口 访问 日志 能够 方便 定位 排查 问题 步骤 log4j properties 配置 先贴 一下 自己 所有 log4j properties 配置 log4j rootlogger info console filelog4j appender console net czt log asyncconsoleappenderlog4j appender console layout org apache log4j patternlayoutlog4j appender console layout conversionpattern %- 5p crazyant web %- 17c 13f user id user ip server address server name request uri session id m% nlog4j appender console buffersize 10000log4j appender console encoding utf 8log4j appender file org apache log4j rollingfileappenderlog4j appender file file home work apache tomcat 6.0 39 logs crazyant loglog4j appender file maxbackupindex 5log4j appender file maxfilesize 1gblog4j appender file layout org apache log4j patternlayoutlog4j appender file layout conversionpattern %- 5p crazyant web yyyy mm dd hh mm ss sss user id user ip server address server name request uri session id method l% n% m% nlog4j appender file buffersize 10000log4j appender file encoding utf 8log4j logger net czt crazyant msg debug messagelog4j additivity net czt crazyant msg falselog4j appender message org apache log4j rollingfileappenderlog4j appender message file home work apache tomcat 6.0 39 logs crazyant message loglog4j appender message append truelog4j appender message maxfilesize 1gblog4j appender message maxbackupindex 5log4j appender message layout org apache log4j patternlayoutlog4j appender message layout conversionpattern yyyy mm dd hh mm ss %- 5p m% nlog4j appender message encoding utf 8log4j logger net czt crazyant async service debug asynclog4j additivity net czt crazyant async service falselog4j appender async org apache log4j rollingfileappenderlog4j appender async file home work apache tomcat 6.0 39 logs crazyant async loglog4j appender async append truelog4j appender async maxfilesize 1gblog4j appender async maxbackupindex 5log4j appender async layout org apache log4j patternlayoutlog4j appender async layout conversionpattern yyyy mm dd hh mm ss %- 5p m% nlog4j appender async encoding utf 8log4j logger net czt orm mybatis sqlmonitormanager debug showsqllog4j additivity net czt orm mybatis sqlmonitormanager falselog4j logger net czt transaction interceptor smarttransactioninterceptor debug showsqllog4j additivity net czt transaction interceptor smarttransactioninterceptor falselog4j appender showsql org apache log4j rollingfileappenderlog4j appender showsql file home work apache tomcat 6.0 39 logs crazyant sql loglog4j appender showsql append truelog4j appender showsql maxfilesize 1gblog4j appender showsql maxbackupindex 5log4j appender showsql layout org apache log4j patternlayoutlog4j appender showsql layout conversionpattern yyyy mm dd hh mm ss %- 5p m% nlog4j appender showsql encoding utf 8log4j logger net czt crazyant service debug servicelog4j additivity net czt crazyant service falselog4j appender service org apache log4j rollingfileappenderlog4j appender service file home work apache tomcat 6.0 39 logs crazyant service loglog4j appender service append truelog4j appender service maxfilesize 1gblog4j appender service maxbackupindex 5log4j appender service layout org apache log4j patternlayoutlog4j appender service layout conversionpattern yyyy mm dd hh mm ss %- 5p m% nlog4j appender service encoding utf 配置文件 下方 可以 方便 看到 message 消息 async 端线 showsql 数据库 日志 service 接口 调用 分别 输出 不同 日志 文件 其中 一些 解释 log4j rootlogger info console filelog4j 一个 rootlogger 普通 logger 概念 默认 情况 我们 需要 一个 rootlogger 就是 所有 日志 只会 输出 一个 日志 文件 一下 普通 logger 配置 接口 日志 service 为例 log4j logger net czt crazyant service debug service 这句 net czt crazyant service 表示 普通 logger 日志 配置 生效 package 完全 路径 其中 service 表示 普通 logger 名字 log4j additivity net czt crazyant service false 其中 net czt crazyant service 上面 相同 表示 配置 针对 package 该句 配置 意思 不要 package 日志 输出 rootlogger 日志 输出 自己 配置 日志 就行了 log4j appender service org apache log4j rollingfileappender 以及 配置 下面 配置 这里 service 字符串 上面 第一个 配置 service 相同 表示 普通 logger 配置 下方 配置 rootlogger 相同 表示 每天 输出 文件 编码 utf8 分片 规则 每行 输出 模式 等等 自己 遇到 问题 上面 log4j properties 配置 以后 发现 各个 日志 文件创建 但是 里面 没有 内容 这是 为啥 来看 下面 第二个 注意 地方 步骤 输出 日志 需要 设定 日志 对象 对应 具体 class 什么 意思 上面 配置 项中 一个 net czt crazyant service package 字符串 那么 我们 自己 一下 log4j 怎样 不同 package logger 日志 输出 不同 文件 一下 两种 方法 采用 intercepter 或者 aop 方式 log4j 自己 检测 日志 输出 检测 日志 产生 哪个 package 输出 对应 文件 用户 一个 class 参数 log4j 获取 class 对应 package 以此为准 定位 不同 日志 文件 一下 代码 显然 log4j 一种 简单 直接 方式 import org apache commons logging log import org apache commons logging logfactory public class myclassimpl implements myclass loger private static final log logger logfactory getlog myclassimpl class my func public void myfunc logger info call method myfunc logger logfactory getlog myclassimpl class 传入 使用 logger class 参数 class 反射 取到 package 地址 就是 log4j 用来 输出 日志 package 地址 这种 做法 强大 地方 方便 逻辑 日志 归类 比如 很多 代码 属于 一个 package 但是 它们 逻辑 属于 一起 举个 例子 消息 处理 只是 接口 调用 service 这个 package 可能 还会 调用 发送 msg 操作 如果 msg package 一些 日志 输出 service 那么 这个 msg logger 初始化 时候 传入 一个 serivice class 就行了 或者 对于 一类 所有 日志 来说 它们 所有 logger 对象 来自 封装 单个 对象 实例 即可 这个 单个 对象 实例 传入 参数 只有 一个 用于 标识 这个 逻辑 归类 即可 总结 log4j properties 支持 package 或者 具体 class 日志 单独 输出 但是 需要 代码 logger 初始化 时候 日志 配置 package 对应 原创 文章 转载 注明 地址 http crazyant net 1931 html
1946,MAC环境堪比Visio的画图神器,mac 环境 堪比 visio 画图 神器 windows 使用 visio 框图 流程图 非常 方便 切换 mac 一直 苦恼 不到 一个 可以 替代 画图 工具 同事 推荐 发现 一个 神器 omnigraffle 可以 直接 官方网站 下载 最新 软件包 https www omnigroup com omnigraffle 网上 几个 可以 使用 许可证 序列号 分享 大家 omnigraffle pro name mojado serial jyfe jrjn gsot grag evji tefe vji name mojado live com serial izah irli efdi xaem jbjj jefj bjj name mojado gnu org serial emip osmg csju zzbl inxy tefi nxy name magic mike serial lgeo avrn tpgy bzkr weqt zeb 本文 链接 http crazyant net 1946 html
1957,工程师的月亮和六便士,工程师 月亮 六便士 月亮 六便士 英国 作家 威廉 萨默塞特 毛姆 大长篇 力作 之一 完成 1919 作品 法国 印象 画家 保罗 生平 素材 描述 一个 原本 平凡 伦敦 证券 经纪人 特里 兰德 突然 艺术 抛妻 弃子 绝弃 旁人 看来 优裕 美满 生活 奔赴 南太平洋 塔希提 圆笔 谱写 自己 光解 灿烂 生命 生命 价值 全部 注入 绚烂 画布 故事 贫穷 纠缠 病魔 折磨 毫不在意 只是 后悔 从来 没有 光顾 意识 作品 表现 天才 个性 物质文明 以及 现代 婚姻 家庭 生活 之间 矛盾 有着 广阔 生命 视角 散发 消毒水 味道 手术刀 皮囊 包裹 人性 进行 犀利 解剖 混合 看客 讪笑 幽默 残忍 目光 六便士 当时 英国 货币 最小 单位 有个 朋友 毛姆 开玩笑 人们 仰望 月亮 常常 脚下 六便士 毛姆 觉得 说法 有意思 这个 书名 开玩笑 语气 月亮代表 高高在上 理想 六便士 现实 代表 工程师 六便士 月亮 软件 开发者 或者 成为 工程师 属于 工程 技术人员 再也 具体 不过 事情 确认 需求 开发 测试 上线 运维 一件件 实事 同时 关心 六便士 事情 职称 薪资 对于 工程师 来说 眼中 容易 全是 六便士 对于 我们 来说 月亮 梦想 追求 如果 工程师 月亮 远方 梦想 追求 什么 特里 兰德 开始 时候 一位 伦敦 证券 经纪人 薪水 有着 大房子 漂亮 老婆 两个 孩子 生活 水平 处于 社会 中层 只要 努力 打拼 生活 更优越 然而 来说 这些 物质 意义 六便士 难以 满足 自己 精神 艺术 追求 令人 佩服 他会 突然 放弃 所有 放弃 温暖 舒适 房子 放弃 每月 宽裕 薪资 放弃 温柔体贴 老婆 天伦之乐 家庭 物质 生活 脱离 完全 投入 自己 精神 追求 即使 混沌 潦倒 即使 受尽 挫折 没有 感到 后悔 不适 反而 一步步 靠近 自己 月亮 最终 拥抱 自己 月亮 对应 原著 六便士 代表 物质 追求 月亮代表 精神 追求 精神 追求 带来 物质 追求 完全 无法比拟 满足 如果 月亮 定义 精神 追求 工程师 应该 追寻 什么 也许 规划 架构 实现 功能 圆满 交付 带来 成就感 也许 别人 认同 满足感 也许 各方 利益 和谐 协调 带来 认同感 如果 月亮 定义 理想 追求 工程师 目标 什么 也许 做出 人们 需要 依赖 产品 也许 成为 领域 不可 替代 不可或缺 大牛 也许 团队 前进 精神领袖 这些 好像 不是 理想 困惑 我该 怎样 选择 现实 压力 人们 不得不 面对 六便士 一直 低头 走路 忘记 抬头 月亮 人们 因为 房贷 买车 计划 育儿 目标 不断 更加 关注 金钱 现实 变成 一个 物质 机器 日复一日 年复一年 最终 回过头来 发现自己 房子 车子 孩子 长大 可是 自己 几十年 埋头苦干 车轮 一条条 公路 最终 原地 转圈圈 自己 精神 领域 好像 一直 那么 贫乏 人生 路上 只有 物质 追求 只是 追求 高高的 薪资 大大的 房子 漂亮 车子 优越 地位 更能 带来 满足 更能 带来 成就感 更能 自己 后悔 精神 追求 对于 佛陀 来说 放弃 一切 物质 哪怕 身上 遮体 但是 精神 修为 达到 圆满 这才 终极 追求 自我实现 对于 这个 精彩 未知 世界 探索 精神 修炼 领悟 低头 看着 六便士 同时 需要 抬头 追求 月亮 看书 健身 沉思 音乐 冥想 交流 修炼 不要 物质 奴隶 精神 主人
1961,MAC挂载NTFS移动硬盘进行读写操作,mac 挂载 ntfs 移动硬盘 进行 读写操作 ntfs windows nt file system ntfs 意思 windows 特有 文件系统 所以 mac 没有 直接 提供 支持 读写 插入 ntfs 移动硬盘 只能 读取 文件 不能 写入 文件 两种 方法 可以 解决 这个 问题 方法 就是 移动硬盘 转换成 fat32 格式 但是 这样 存储 小于 4gb 文件 方法 如下 所以 需要 执行 几个 命令 执行 挂载 步骤 查看 自己 磁盘 地址 ls volumes 然后 看到 自己 移动硬盘 名称 假设 名字 叫做 移动硬盘 2016 那么 自己 移动硬盘 地址 就是 volumes 移动硬盘 2016 步骤 查看 移动硬盘 信息 diskutil info volumes 移动硬盘 2016 输出 磁盘 详细信息 查找 关键字 device node 一行 这样 device node dev disk2s13 影动 硬盘 退出 为的是 重新 挂载 执行命令 hdiutil eject volumes 移动硬盘 2016 disk2 unmounted disk2 ejected.4 创建 一个 自己 挂载 目录 mkdir users baidu mymobiledisk5 执行 磁盘 挂载 sudo mount ntfs rw nobrowse dev disk2s1 users baidu mymobiledisk 然后 提示 输入 密码 输入 之后 命令 结束 这时候 发现 已经 打开 users baidu mymobiledisk 进行 文件 读写
1964,"Stay hungry, Stay foolish",stay hungry stay foolish 即使 穷尽 一生 精力 我们 探索 世界 多少 精彩 永远 保持 饥饿 不要 停止 永远 追寻 追求 步伐 探索 现实 世界 精神 世界 未知领域 永远 保持 一切 保持 敬畏 卑微 虚心 只有 山脚 出发 攀登 才能 领略到 沿途 美丽 风景 两句话 两种 翻译 中式 翻译 求知若渴 虚心 若愚 典型 儒家 价值观 影响 导致 翻译 错误 中国 文化 知识 重要 虚心 一种 美德 西式 翻译 永不 知足 我行我素 然而 西方 文化 完全 不同 鼓励 冒险 张扬 个性 纵观 乔布斯 人生哲学 两句话 应该 理解 永不 知足 我行我素 只有 这样 才能 理解 西方 文化 精髓 乔布斯 一生 追求 文章 来自 http crazyant net 1964 html
1973,如此重要但是经常被忽视的代码架构！,如此 重要 但是 经常 被忽视 代码 架构 软件开发 生命周期 大致 一样 流程 需求 分析 产出 概念模型 概要 设计 包括 系统 边界 设计 内部 架构设计 设计 决策 详细 设计 包括 代码 架构 业务 逻辑 实现 开发 代码 单元测试 连通 测试 部署 上线 系统 运维 这样 流程 开发 代码 这个 步骤 其实 分界点 实现 前面 设计 同时 开发 代码 最终 进行 测试 运行 正常 情况 概念模型 边界 交互 设计 数据流 设计 系统 内部 架构设计 设计 决策 等等 产出 文档 各方 阅读 实施 然而 经常 情况 大家 忽视 如何 代码 架构 表达 这些 设计 意图 经常 看到 一些 系统 设计 非常 清晰 高大 但是 阅读 代码 时候 发现 一团乱麻 如果 涉及 系统 交接 文档 过时 发现 变成 一个 糟糕 系统 其实 代码 如果 承载 这些 意图 不是 最好 体现 代码 架构 规范化 模型 架构 位置 对应 系统 实现 过程 对于 需求 分析 产出 得到 领域 模型 对于 边界 模型 设计 产出 系统 上下文 交互 接口 设计 然而 由于 内部 模型 代码 模型 因为 限于 系统 内部 只要 实现 边界 模型 不用 关系 怎么 实现 最后 导致 这部分 关注 导致 混乱 架构 明显 编程 风格 无论 怎么 努力 模型 设计 代码 实现 之间 存在 差异 只不过 差别 模型 设计 产出 文档 但是 文档 只能 表达 主模型 一部分 内容 或者 投影 无法 全部 表达 文档 同时 存在 维护 代价 过高 从而 导致 容易 过时 问题 采用 架构 明显 编码 风格 进行 编程 就是 源代码 嵌入 关于 系统 架构 模型 线索 一种 设计 意图 也就是说 程序 可以 运行 这样 一个 最低 要求 之上 遵循 模型 嵌入 代码 原理 这里 目的 为了 嵌入 模型 目的 能否 代码 表达 领域 模型 能否 表达 设计 模型 对于 领域 模型 表达 设计 意图 标准 方法 就是 领域 类型 关系 理解 映射 程序 结构 代码 表达 模块 模块 试图 类型 运行 视图 类型 主要 通过 模块 命名 加入 通用 模式 命名 实现 比如 manager service factory filter builder agent proxy repository statusmanager ruleengine facade 可以 看到 这些 词语 来源于 设计模式 分析 模式 通用 名次 通过 这些 名次 约定 团队 成员 约定 一个 通用 完善 代码 架构 即可 通过 代码 表达 设计 意图 一个 通用 完善 代码 架构 大量 书籍 资料 提供 概念模型 系统 交互 设计 设计 然而 对于 代码 架构 没有 一个 规范 通用 标准 导致 大家 出来 代码 各种各样 命名 依赖 混乱 不堪 代码 简直 无法 阅读 组织 良好 划分 关系 依赖 设计 代码 变得 阅读 并且 表达 设计 意图 第一步 这个 模型 每个 部分 说明 注释 主要 一个 划分 方法 就是 技术 实现 业务 逻辑 区别 业务 逻辑 我们 提供 系统 实现目标 但是 容易 变化 部分 如果 封装 一个 模块 隔离 变化 交给 业务 理解 透彻 同学 实现 效果 对外 提供 接口 代码 粘合 保存 数据 db 调用 第三方 资源 实现 dto model entiry 转换 这些 代码 因为 涉及 业务 逻辑 因为 包含 业务 逻辑 那么 变化 频率 降低 business 输入 来自 manager 获取 或者 整合 业务 对象 business 通过 各种 逻辑 处理 转换 给出 业务 结果 然后 manager 对外 进行 分发 文中 引用 资源 架构 明显 编码 风格 来自 书籍 恰如其分 软件架构 代码 架构图 划分 infoq 架构 漫谈 作者 kevin 提供 文章 架构 角度看 如何 代码 架构 改进 注释 本文 地址 http crazyant net 1973 html
1980,Tomcat内存分析相关方法(jmap和mat),tomcat 内存 分析 相关 方法 jmap mat linux 环境 命令行 首先 根据 进程 命令 获取 运行 tomcat 进程 idps aux grep tomcat grep java grep bsc 第二列 可以 看到 进程 id 然后 使用 jmap 可以 查看 内存 home work bsc java jdk 1.7 7u60 bin jmap heap 7840 输出 结果 包括 内存 各个 部分 work xxxx com logs home work bsc java jdk 1.7 7u60 bin jmap heap 10433attaching to process id 10433 please wait ... debugger attached successfully server compiler detected jvm version is 24.60 b09using parallel threads in the new generation using thread local object allocation concurrent mark sweep gcheap configuration minheapfreeratio 40 maxheapfreeratio 70 maxheapsize 8388608000 8000.0 mb newsize 1048576000 1000.0 mb maxnewsize 1048576000 1000.0 mb oldsize 5439488 5.1875 mb newratio survivorratio permsize 134217728 128.0 mb maxpermsize 268435456 256.0 mb g1heapregionsize 0.0 mb heap usage new generation eden survivor space capacity 943718400 900.0 mb used 393328672 375.1074523925781 mb free 550389728 524.8925476074219 mb 41.67860582139757% usededen space capacity 838860800 800.0 mb used 288471072 275.1074523925781 mb free 550389728 524.8925476074219 mb 34.388431549072266% usedfrom space capacity 104857600 100.0 mb used 104857600 100.0 mb free 0.0 mb 100.0% usedto space capacity 104857600 100.0 mb used 0.0 mb free 104857600 100.0 mb 0.0% usedconcurrent mark sweep generation capacity 1288736768 1229.03515625 mb used 706435104 673.7090148925781 mb free 582301664 555.3261413574219 mb 54.816089797478334% usedperm generation capacity 134217728 128.0 mb used 65034240 62.021484375 mb free 69183488 65.978515625 mb 48.45428466796875% used27139 interned strings occupying 3055832 bytes 如上 可以 清楚 看到 内存 配置 信息 年轻 包括 eden from to 年代 永久 各自 内存 信息 使用 eclipse memory analysis tool 工具 进行 详细分析 首先 使用 命令 内存 dump 文件 home work bsc java jdk 1.7 7u60 bin jmap dump format file home work tmp bsc bin 10433mat memory analyzer tool 工具 eclipse 一个 插件 使用 起来 非常 方便 尤其 分析 内存 dump 文件 可以 非常 直观 看到 各个 对象 空间 占用 内存大小 实例 数量 对象 引用 关系 利用 oql 对象 查询 以及 可以 方便 找出 对象 gc roots 相关 信息 当然 吸引 还是 能够 快速 开发人员 生成 内存 泄露 报表 方便 定位问题 分析 问题 mat 工具 下载 地址 http www eclipse org mat downloads phpmat 插件 下载 地址 http download eclipse org mat 1.3 update site 然后 可以 查看 内存 数据 点击 可以 看下 最大 对象 什么 从而 分析程序 行为 本文 地址 http crazyant net 1980 html
2012,打工者心态、主人公意识、个人公司品牌,打工者 心态 主人公 意识 个人 公司 品牌 作为 一个 雇员 我们 工资 养活 自己 应该 秉持着 什么样 心态 工作 打工者 心态 要不得 他们 认为 多少 工作 应该 多少 工资 多少 工资 多少 工作 三天 敲钟 两天 敲鱼 没有 规划 没有 激情 对于 属于 自己 职责 范围 事情 必定 低头 拒绝 不会 积极 包揽 一些 灰色 地带 事情 负责 人生 只有 一次 时间 过去 不会 复返 这种 心态 浪费 生命 浪费 精力 实在 要不得 主人公 意识 最为 强大 公司 事务 当做 自己 事务 任何 事情 过问 以免 出现 差错 除了 做好 自己 事情 别人 事情 督促 激励 任何 事情 为了 公司 利益 每天 上班时间 小时 工作 14 小时 不会 觉得 因为 激情 因为 认为 公司 主人 但是 现实 不是 公司 主人 公司 动荡 期间 这个 主人 裁掉 为什么 自欺 欺其人 这个 公司 主人 其实 不论 什么 我们 秉持 个人 公司 品牌 虽然 只有 一个 但是 自己 当成 一个 公司 看待 这个 公司 只有 自己 一个 员工 对外 提供 产品 软件开发 软件 资讯 服务 自己 就是 这个 公司 主人 自己 任何 事情 需要 个人 公司 品牌 负责 这时候 所在 雇主 公司 其实 个人 公司 合作 公司 个人 公司 合作 公司 提供 自己 产品 一个 公司 想要 持续 活下去 必定 一直 需要 危机意识 竞争 激烈 淘汰 残酷 如果 不比 别的 公司 提供 更好 产品 更好 服务 更好 合作 那么 取代 非常 必然 事情 个人 公司 品牌 秉持 危机意识 事情 积极 面对 苦难 迎难而上 只有 别的 公司 更好 更强 才能 活下去 一个 公司 当然 不断 提升 打磨 创新 改进 产品 因此 一个 程序员 不断 学习 技术 深挖 现有 技术 这样 合作 公司 需要 外部 公司 提供 服务 时候 我们 才能 立于 优先 境地 一个 公司 注重 营销 如果 一个 公司 宣称 对外 广告 只是 一纸 简历 是不是 认为 合作 公司 了解 机会 选中 机会 很多 因此 个人 公司 既然 成立 我们 目的 就是 为了 销售 产品 价格 我们 广告 除了 那纸 简历 我们 可以 使用 博客 演讲 视频 课程 写书 社交 各种 方式 推销 自己 进而 下次 出售 产品 时候 知名度 一个 公司 既然 作为 独立 个体 存在 那么 绝对 不能 滥竽充数 合作 当然 负责 一块 具体 事务 搞砸 自己 完全 负责 因为 合作 公司 当然 机会 替换 一家 其他 员工 这个 号称 个人 公司 事情 一个 公司 除了 销售 自己 核心 产品 为了 抓住 用户 经常 使用 赠品 促销 方式 增加 销量 那么 个人 公司 当然 不能 提供 自己 软件 服务 产品 提供 一些 额外 奉送 比如 负责 合作 公司 面试 提供 一些 技术培训 负责 一些 预算 事务 人生 苦短 有所为 对于 很多 事情 往往 是因为 我们 没有 一个 正确 心态 应对 所以 出现 很多 偏离 所谓 心态 决定 一切 我们 不能 打工者 心态 除了 创业 无法 真正 拥有 创业者 心态 那么 我们 可以 树立 个人 公司 品牌 随时 创业者 合作者 心态 融入 自己 工作 这时候 发现 存在 以下 一些 消极 想法 为什么 学习 现在 技术 够用 可是 一个 公司 品牌 合作者 公司 如果 要求 当然 解除 合作 选用 其他 产品 更新 更好 公司 不是 事情 不是 分内之事 公司 为了 东西 还有 赠品 买个 煎饼果子 送个 豆浆 提升 销量 什么 问题 只要 技术 哪里 拜托 技术 可是 别人 知道 面试 时候 带上 那么 两页 简历 短短的 小时 觉得 完全 表达 自己 获得 职位 合作 应该 之前 通过 博客 演讲 视频 写书 社交 各种 方式 打出 自己 品牌 产品 影响力 这样 才能 赢得 合作 从今天起 就是 个人 公司 董事长
2022,Mybatis源码解读-设计模式总结,mybatis 源码 解读 设计模式 总结 虽然 我们 知道 26 设计模式 但是 大多 停留 概念 层面 真实 开发 很少 遇到 mybatis 源码 使用 大量 设计模式 阅读 源码 观察 设计模式 其中 应用 能够 深入 理解 设计模式 mybatis 至少 遇到 以下 设计模式 使用 builder 模式 例如 sqlsessionfactorybuilder xmlconfigbuilder xmlmapperbuilder xmlstatementbuilder cachebuilder 工厂 模式 例如 sqlsessionfactory objectfactory mapperproxyfactory 单例 模式 例如 errorcontext logfactory 代理 模式 mybatis 实现 核心 比如 mapperproxy connectionlogger jdk 动态 代理 还有 executor loader 使用 cglib 或者 javassist 达到 延迟 加载 效果 组合 模式 例如 sqlnode 各个 子类 choosesqlnode 模板 方法 模式 例如 baseexecutor simpleexecutor 还有 basetypehandler 所有 子类 例如 integertypehandler 适配器 模式 例如 log mybatis 接口 jdbc log4j 各种 日志 框架 适配 实现 装饰 模式 例如 cache 包中 cache decorators 子包 中等 各个 装饰 实现 迭代 模式 例如 迭代 模式 propertytokenizer 接下来 挨个 模式 进行 解读 介绍 模式 自身 知识 然后 解读 mybatis 怎样 应用 模式 builder 模式 builder 模式 定义 一个 复杂 对象 构建 表示 分离 使得 同样 构建 过程 可以 创建 不同 表示 属于 创建 模式 一般来说 如果 一个 对象 构建 比较复杂 超出 构造函数 包含 范围 可以 使用 工厂 模式 builder 模式 相对 工厂 模式 产出 一个 完整 产品 builder 应用 更加 复杂 对象 构建 甚至 只会 构建 产品 一个 部分 mybatis 环境 初始化 过程 sqlsessionfactorybuilder 调用 xmlconfigbuilder 读取 所有 mybatismapconfig xml 所有 mapper xml 文件 构建 mybatis 运行 核心 对象 configuration 对象 然后 configuration 对象 作为 参数 构建 一个 sqlsessionfactory 对象 其中 xmlconfigbuilder 构建 configuration 对象 调用 xmlmapperbuilder 用于 读取 mapper 文件 xmlmapperbuilder 使用 xmlstatementbuilder 读取 build 所有 sql 语句 这个 过程 一个 相似 特点 就是 这些 builder 读取 文件 或者 配置 然后 大量 xpathparser 解析 配置 语法 解析 反射 生成 对象 存入 结果 缓存 步骤 这么 工作 不是 一个 构造函数 包括 因此 大量 采用 builder 模式 解决 对于 builder 具体 方法 大都 build 开头 比如 sqlsessionfactorybuilder 为例 包含 以下 方法 根据 不同 输入 参数 构建 sqlsessionfactory 这个 工厂 对象 工厂 模式 mybatis 比如 sqlsessionfactory 使用 工厂 模式 工厂 没有 那么 复杂 逻辑 一个 简单 工厂 模式 简单 工厂 模式 simple factory pattern 称为 静态 工厂 方法 static factory method 模式 属于 创建 模式 简单 工厂 模式 可以 根据 参数 不同 返回 不同 实例 简单 工厂 模式 专门 定义 一个 类来 负责 创建 其他 实例 创建 实例 通常 具有 共同 父类 sqlsession 可以 认为 一个 mybatis 工作 核心 接口 通过 这个 接口 可以 执行 执行 sql 语句 获取 mappers 管理 事务 类似 连接 mysql connection 对象 可以 看到 factory opensession 方法 重载 很多 分别 支持 autocommit executor transaction 参数 输入 构建 核心 sqlsession 对象 defaultsqlsessionfactory 默认 工厂 实现 一个 方法 可以 看出 工厂 怎么 产出 一个 产品 private sqlsession opensessionfromdatasource executortype exectype transactionisolationlevel level boolean autocommit transaction tx null try final environment environment configuration getenvironment final transactionfactory transactionfactory gettransactionfactoryfromenvironment environment tx transactionfactory newtransaction environment getdatasource level autocommit final executor executor configuration newexecutor tx exectype return new defaultsqlsession configuration executor autocommit catch exception closetransaction tx may have fetched connection so lets call close throw exceptionfactory wrapexception error opening session cause finally errorcontext instance reset 这是 一个 opensession 调用 底层 方法 方法 configuration 读取 对应 环境 配置 然后 初始化 transactionfactory 获得 一个 transaction 对象 然后 通过 transaction 获取 一个 executor 对象 最后 通过 configuration executor 是否 autocommit 三个 参数 构建 sqlsession 这里 其实 可以 看到 端倪 sqlsession 执行 其实 委托 对应 executor 进行 对于 logfactory 实现 代码 public final class logfactory private static constructor extends log logconstructor private logfactory disable construction public static log getlog class aclass return getlog aclass getname 这里 有个 特别 地方 log 变量 类型 constructor extends log 也就是说 工厂 生产 只是 一个 产品 而是 具有 log 公共 接口 一系列 产品 比如 log4jimpl slf4jimpl 很多 具体 log 单例 模式 单例 模式 singleton pattern 单例 模式 确保 一个 只有 一个 实例 而且 自行 实例 整个 系统 提供 这个 实例 这个 称为 单例 提供 全局 访问 方法 单例 模式 要点 三个 一是 某个 只能 一个 实例 二是 必须 自行 创建 这个 实例 三是 必须 自行 整个 系统 提供 这个 实例 单例 模式 一种 对象 创建 模式 单例 模式 又名 单件 模式 单态 模式 mybatis 中有 两个 地方 用到 单例 模式 errorcontext logfactory 其中 errorcontext 每个 线程 范围 单例 用于 记录 线程 执行 环境 错误信息 logfactory 提供 整个 mybatis 使用 日志 工厂 用于 获得 针对 项目 配置 日志 对象 errorcontext 单例 实现 代码 public class errorcontext private static final threadlocal errorcontext local new threadlocal errorcontext private errorcontext public static errorcontext instance errorcontext context local get if context null context new errorcontext local set context return context 构造函数 private 修饰 具有 一个 static 局部 instance 变量 一个 获取 instance 变量 方法 获取 实例 方法 判断 是否 为空 如果 的话 创建 然后 返回 构造 对象 只是 这里 有个 有趣 地方 local 静态 实例 变量 使用 threadlocal 修饰 也就是说 属于 每个 线程 各自 数据 instance 方法 获取 线程 实例 如果 没有 创建 线程 独有 errorcontext 代理 模式 代理 模式 可以 认为 mybatis 核心 使用 模式 正是 由于 这个 模式 我们 需要 编写 mapper java 接口 需要 实现 mybatis 后台 我们 完成 具体 sql 执行 代理 模式 proxy pattern 一个 对象 提供 一个 代理 对象 控制 对原 对象 引用 代理 模式 叫做 proxy surrogate 一种 对象 结构型 模式 代理 模式 包含 如下 角色 subject 抽象 主题 角色 proxy 代理 主题 角色 realsubject 真实 主题 角色 这里 两个 步骤 第一个 提前 创建 一个 proxy 第二个 使用 时候 自动 请求 proxy 然后 proxy 执行 具体 事务 我们 使用 configuration getmapper 方法 调用 mapperregistry getmapper 方法 方法 调用 mapperproxyfactory newinstance sqlsession 生成 一个 具体 代理 author lasse voss public class mapperproxyfactory private final class mapperinterface private final map method mappermethod methodcache new concurrenthashmap method mappermethod public mapperproxyfactory class mapperinterface this mapperinterface mapperinterface public class getmapperinterface return mapperinterface public map method mappermethod getmethodcache return methodcache suppresswarnings unchecked protected newinstance mapperproxy mapperproxy return proxy newproxyinstance mapperinterface getclassloader new class mapperinterface mapperproxy public newinstance sqlsession sqlsession final mapperproxy mapperproxy new mapperproxy sqlsession mapperinterface methodcache return newinstance mapperproxy 这里 通过 newinstance sqlsession sqlsession 方法 得到 一个 mapperproxy 对象 然后 调用 newinstance mapperproxy mapperproxy 生成 代理 对象 然后 返回 查看 mapperproxy 代码 可以 看到 如下 内容 public class mapperproxy implements invocationhandler serializable overridepublic object invoke object proxy method method object args throws throwable try if object class equals method getdeclaringclass return method invoke this args else if isdefaultmethod method return invokedefaultmethod proxy method args catch throwable throw exceptionutil unwrapthrowable final mappermethod mappermethod cachedmappermethod method return mappermethod execute sqlsession args 非常 典型 mapperproxy 实现 invocationhandler 接口 并且 实现 接口 invoke 方法 通过 这种 方式 我们 需要 编写 mapper java 接口类 真正 执行 一个 mapper 接口 时候 转发给 mapperproxy invoke 方法 方法 调用 后续 sqlsession cud executor execute preparestatement 一系列 方法 完成 sql 执行 返回 组合 模式 组合 模式 组合 多个 对象 形成 树形 结构 表示 整体 部分 结构 层次 组合 模式 单个 对象 叶子 对象 组合 对象 组合 对象 具有 一致性 对象 组织 树结构 可以 用来 描述 整体 部分 关系 同时 模糊 简单 元素 叶子 对象 复杂 元素 容器 对象 概念 使得 客户 能够 处理 简单 元素 一样 处理 复杂 元素 从而 客户程序 能够 复杂 元素 内部结构 使用 组合 模式 需要 注意 一点 组合 模式 关键 地方 叶子 对象 组合 对象 实现 相同 接口 就是 组合 模式 能够 叶子 节点 对象 节点 进行 一致 处理 原因 mybatis 支持 动态 sql 强大 功能 比如 下面 这个 sql update id update parametertype org format dynamicproxy mybatis bean user update users trim prefix set prefixoverrides if test name null and name name name if if test age null and age age age if if test birthday null and birthday birthday birthday if trim where id id update 里面 使用 trim if 动态 元素 可以 根据 条件 生成 不同 情况 sql dynamicsqlsource getboundsql 方法 调用 rootsqlnode apply context 方法 apply 方法 所有 动态 节点 实现 接口 public interface sqlnode boolean apply dynamiccontext context 对于 实现 sqlsource 接口 所有 节点 就是 整个 组合 模式 各个 节点 组合 模式 简单 在于 所有 节点 一类 节点 可以 递归 向下 执行 比如 对于 textsqlnode 因为 最底层 叶子 节点 所以 直接 对应 内容 append sql 语句 overridepublic boolean apply dynamiccontext context generictokenparser parser createparser new bindingtokenparser context injectionfilter context appendsql parser parse text return true 但是 对于 ifsqlnode 需要 判断 如果 判断 通过 仍然 调用 元素 sqlnode contents apply 方法 实现 递归 解析 overridepublic boolean apply dynamiccontext context if evaluator evaluateboolean test context getbindings contents apply context return true return false 模板 方法 模式 模板 方法 模式 所有 模式 最为 常见 几个 模式 之一 基于 继承 代码 复用 基本 技术 模板 方法 模式 需要 开发 抽象类 具体 子类 设计师 之间 协作 一个 设计师 负责 给出 一个 算法 轮廓 骨架 一些 设计师 负责 给出 这个 算法 各个 逻辑 步骤 代表 这些 具体 逻辑 步骤 方法 称做 基本 方法 primitive method 这些 基本 方法 汇总 起来 方法 叫做 模板 方法 template method 这个 设计模式 名字 就是 从此 模板 定义 一个 操作 算法 骨架 一些 步骤 延迟 子类 使得 子类 可以 改变 一个 算法 结构 即可 定义 算法 某些 特定 步骤 mybatis sqlsession sql 执行 委托 executor 实现 executor 包含 以下 结构 其中 baseexecutor 采用 模板 方法 模式 实现 大部分 sql 执行 逻辑 然后 以下 几个 方法 交给 子类 定制 完成 protected abstract int doupdate mappedstatement ms object parameter throws sqlexception protected abstract list batchresult doflushstatements boolean isrollback throws sqlexception protected abstract list doquery mappedstatement ms object parameter rowbounds rowbounds resulthandler resulthandler boundsql boundsql throws sqlexception 模板 方法 类有 几个 子类 具体 实现 使用 不同 策略 简单 simpleexecutor 执行 一次 update select 开启 一个 statement 对象 立刻 关闭 statement 对象 可以 statement preparestatement 对象 重用 reuseexecutor 执行 update select sql 作为 key 查找 statement 对象 存在 使用 存在 创建 完后 关闭 statement 对象 而是 放置 map string statement 供下 一次 使用 可以 statement preparestatement 对象 批量 batchexecutor 执行 update 没有 select jdbc 批处理 支持 select 所有 sql 添加 批处理 addbatch 等待 统一 执行 executebatch 缓存 多个 statement 对象 每个 statement 对象 addbatch 完毕 等待 逐一 执行 executebatch 批处理 batchexecutor 相当于 维护 多个 每个 很多 属于 自己 sql 苹果 蓝里装 很多 苹果 番茄 蓝里装 很多 番茄 最后 统一 仓库 可以 statement preparestatement 对象 比如 simpleexecutor 这样 实现 update 方法 overridepublic int doupdate mappedstatement ms object parameter throws sqlexception statement stmt null try configuration configuration ms getconfiguration statementhandler handler configuration newstatementhandler this ms parameter rowbounds default null null stmt preparestatement handler ms getstatementlog return handler update stmt finally closestatement stmt 适配器 模式 适配器 模式 adapter pattern 一个 接口 转换成 客户 希望 一个 接口 适配器 模式 接口 兼容 那些 可以 一起 工作 别名 包装 wrapper 适配器 模式 可以 作为 结构型 模式 可以 作为 对象 结构型 模式 mybatsi logging 包中 一个 log 接口 author clinton begin public interface log boolean isdebugenabled boolean istraceenabled void error string throwable void error string void debug string void trace string void warn string 接口定义 mybatis 直接 使用 日志 方法 log 接口 具体 由谁来 实现 mybatis 提供 多种 日志 框架 实现 这些 实现 匹配 这个 log 接口 定义 接口 方法 最终 实现 所有 外部 日志 框架 mybatis 日志 适配 比如 对于 log4jimpl 实现 来说 实现 持有 org apache log4j logger 实例 然后 所有 日志 方法 委托 实例 实现 public class log4jimpl implements log private static final string fqcn log4jimpl class getname private logger log public log4jimpl string clazz log logger getlogger clazz overridepublic boolean isdebugenabled return log isdebugenabled overridepublic boolean istraceenabled return log istraceenabled overridepublic void error string throwable log log fqcn level error overridepublic void error string log log fqcn level error null overridepublic void debug string log log fqcn level debug null overridepublic void trace string log log fqcn level trace null overridepublic void warn string log log fqcn level warn null 装饰 模式 装饰 模式 decorator pattern 动态 一个 对象 增加 一些 额外 职责 responsibility 增加 对象 功能 来说 装饰 模式 生成 子类 实现 更为 灵活 别名 可以 称为 包装 wrapper 适配器 模式 别名 相同 它们 适用 不同 场合 根据 翻译 不同 装饰 模式 有人 称之为 油漆工 模式 一种 对象 结构型 模式 mybatis 缓存 功能 由根 接口 cache org apache ibatis cache cache 定义 整个 体系 采用 装饰 设计模式 数据 存储 缓存 基本功能 perpetualcache org apache ibatis cache impl perpetualcache 永久 缓存 实现 然后 通过 一系列 装饰 器来 perpetualcache 永久 缓存 进行 缓存 策略 方便 控制 如下 用于 装饰 perpetualcache 标准 装饰 共有 全部 org apache ibatis cache decorators 包中 fifocache 先进先出 算法 缓存 回收 策略 loggingcache 输出 缓存 命中 日志 信息 lrucache 最近 最少 使用 算法 缓存 回收 策略 scheduledcache 调度 缓存 负责 定时 清空 缓存 serializedcache 缓存 序列化 序列化 存储 softcache 基于 引用 实现 缓存 管理策略 synchronizedcache 同步 缓存 装饰 用于 防止 多线程 并发 访问 weakcache 基于 引用 实现 缓存 管理策略 另外 还有 一个 特殊 装饰 transactionalcache 事务性 缓存 正如 大多数 持久 框架 一样 mybatis 缓存 同样 分为 一级 缓存 二级缓存 一级 缓存 本地 缓存 perpetualcache 类型 永久 缓存 保存 执行器 baseexecutor 执行器 sqlsession defaultsqlsession 所以 一级 缓存 生命周期 sqlsession 相同 二级缓存 自定义 缓存 实现 cache 接口 可以 作为 二级缓存 所以 配置 encache 第三方 缓存 二级缓存 namespace 名称 空间 唯一 标识 保存 configuration 核心 配置 对象 二级缓存 对象 默认 类型 perpetualcache 如果 配置 缓存 默认 类型 mybatis 根据 配置 自动 追加 一系列 装饰 cache 对象 之间 引用 顺序 synchronizedcache -- loggingcache -- serializedcache -- scheduledcache -- lrucache -- perpetualcache9 迭代 模式 迭代 iterator 模式 叫做 游标 cursor 模式 gof 给出 定义 提供 一种 方法 访问 一个 容器 container 对象 各个 元素 暴露 对象 内部 细节 java iterator 就是 迭代 模式 接口 只要 实现 接口 相当于 应用 迭代 模式 比如 mybatis propertytokenizer property 包中 重量级 该类 reflection 包中 其他 频繁 引用 这个 实现 iterator 接口 使用 经常 用到 iterator 接口 hasnext 这个 函数 public class propertytokenizer implements iterator propertytokenizer private string name private string indexedname private string index private string children public propertytokenizer string fullname int delim fullname indexof if delim name fullname substring delim children fullname substring delim else name fullname children null indexedname name delim name indexof if delim index name substring delim name length name name substring delim public string getname return name public string getindex return index public string getindexedname return indexedname public string getchildren return children overridepublic boolean hasnext return children null overridepublic propertytokenizer next return new propertytokenizer children overridepublic void remove throw new unsupportedoperationexception remove is not supported as it has no meaning in the context of properties 可以 看到 这个 传入 一个 字符串 构造函数 然后 提供 iterator 方法 解析 子串 进行 遍历 一个 常用 方法 参考资料 图说 设计模式 http design patterns readthedocs io zh cn latest index html 深入浅出 mybatis 系列 --- sql 执行 流程 分析 源码 http www cnblogs com dongying 4142476 html 设计模式 读书笔记 ----- 组合 模式 http www cnblogs com chenssy 3299719 htmlmybatis3.3 技术 内幕 五鼠 东京 执行器 executor 设计 原本 http blog csdn net wagcy article details 32963235mybatis 缓存 机制 详解 cache https my oschina net lixin91 blog 620068 本文 地址 http crazyant net 2022 html 转载 注明 来源
2076,怎样借助Python爬虫给宝宝起个好名字,怎样 借助 python 爬虫 宝宝 起个 名字 2019 03 31 更新 代码 python3 简化 版本 https github com peiss chinese name score tree master chinese name score python3 代码 视频 讲解 付费 视频 课程 一节 https www iqiyi com 19rsj1yvy8 html 每个 一生 遇到 一件 事情 事情 出现 之前 不会 关心 但是 事情 一旦 来临 发现 极其重要 并且 需要 时间 做出 重大 决定 就是 自己 新生 宝宝 起个 名字 因为 孩子 出生 两周 内起个 名字 需要 办理 出生证明 估计 很多 一样 开始 慌乱 虽然 感觉 汉字 非常 随便 找个 名字 都行 后来 发现 不是 随便 事情 怎么 发现 合适 于是 到处 词典 网上 唐诗宋词 诗经 甚至 武侠小说 然而 得到 名字 往往 受到 家属 意见 反对 比如 顺口 亲戚 重名 重音 问题 这样 陷入 重复 寻找 否定 循环 越来越 混乱 于是 我们 再次 回到 网上 各种 搜索 找到 很多 网上 给出 宝宝 好听 名字 大全 之类 文章 这些 文章 一下子 给出 几百 千个 名字 眼花缭乱 没法 使用 不少 名字 网站 或者 app 输入 名字 给出 八字 或者 五格 评分 这样 功能 感觉 参考 然而 要么 我们 需要 一个个 名字 输入 进行 测试 要么 这些 网站 或者 app 自身 名字 很少 要么 不能 满足 我们 需求 比如 限定 要么 开始 收费 最后 不到 一个 好用 于是 这么 一个 程序 主要 功能 给出 批量 名字 提供 参考 这些 名字 结合 宝宝 生辰八字 出来 自己 可以 扩充 名字 比如 网上 发现 一批 诗经 名字 看看 怎么样 添加 进去 可以 限定 名字 使用 比如 家族 限定 当前 字辈 名字 必须 名字 列表 可以 给出 评分 这样 倒排 可以 高分 低分 来看 名字 通过 这种 方式 可以 得到 一份 符合 自己 孩子 生辰八字 自己 家谱 限制 以及 自己 喜好 名字 列表 并且 列表 已经 给出 分数 用于 参考 以此 基准 我们 可以 挨个 琢磨 找出 心仪 名字 当然 如果 想法 随时 可以 名字 添加 词库 里面 进行 重新 计算 程序 代码 结构 代码 介绍 chinese name score 代码 根目录 chinese name score main 代码 目录 chinese name score main dicts 词典 文件目录 chinese name score main dicts names boys double txt 词典 文件 男孩 双字 名字 chinese name score main dicts names boys single txt 词典 文件 男孩 单字 名字 chinese name score main dicts names girls single txt 词典 文件 女孩 双字 名字 chinese name score main dicts names grils double txt 词典 文件 女孩 单字 名字 chinese name score main outputs 输出 数据 目录 chinese name score main outputs names girls source wxy txt 输出 示例 文件 chinese name score main scripts 一些 词典 文件 预处理 脚本 chinese name score main scripts unique file lines py 设定 词典 文件 词典 名字 空白行 chinese name score main sys config py 程序 系统配置 包含 取得 目标 url 词典 文件 路径 chinese name score main user config py 程序 用户 配置 包括 宝宝 年月日时 性别 设定 chinese name score main get name score py 程序 运行 入口 使用 代码 方法 如果 没有 限定 找到 词典 文件 names boys double txt names grils double txt 可以 这里 添加 自己 找到 一些 名字 列表 按行 分割 添加 最后 即可 如果 限定 找到 词典 文件 names boys single txt names girls single txt 这里 添加 自己 预先 中意 单个 列表 按行 分割 添加 最后 即可 打开 user config py 进行 配置 配置 项见 一节 运行 脚本 get name score py outputs 目录 查看 自己 产出 文件 可以 复制到 excel 进行 排序 操作 程序 配置 入口 程序 配置 如下 coding gb18030 这里 配置 setting 限定 如果 配置 该值 取用 单字 字典 否则 取用 多字 字典 setting limit world setting name prefix 性别 取值 或者 setting sex 省份 setting area province 北京 城市 setting area region 海淀 出生 公历 年份 setting year 2017 出生 公历 月份 setting month 出生 公历 日子 setting day 11 出生 公历 小时 setting hour 11 出生 公历 分钟 setting minute 11 结果 产出 文件名称 setting output fname names girls source xxx txt 根据 配置 setting limit world 系统 自动 决定 选用 单字 词典 还是 多字 词典 如果 设置 该项 比如 等于 那么 程序 组合 所有 单字 名字 用于 计算 比如 国浩和浩国 两个 名字 计算 如果 设置 该项 保持 字符串 程序 只会 读取 double txt 双字 词典 程序 原理 这是 一个 简单 爬虫 大家 可以 打开 http life httpcn com xingming asp 网站 查看 这是 一个 post 表单 填写 需要 参数 提交 打开 一个 结果 页面 结果 页面 下方 包含 八字 分数 五格 分数 如果 想得到 分数 需要 两件 事情 一是 爬虫 自动 提交 表单 获取 结果 页面 是从 结果 页面 提取 分数 对于 第一件 事情 简单 urllib2 即可 实现 代码 chinese name score main get name score py post data urllib urlencode params req urllib2 urlopen sys config request url post data content req read 这里 params 参数 dict 使用 这种 方式 进行 post 数据 提交 然后 content 得到 结果 数据 params 参数 设定 如下 params 日期 类型 表示 公历 表示 农历 params data type params year str user config setting year params month str user config setting month params day str user config setting day params hour str user config setting hour params minute str user config setting minute params pid str user config setting area province params cid str user config setting area region 喜用 五行 表示 自动 分析 表示 自定 喜用 params wxxy params xing user config setting name prefix params ming name postfix 表示 表示 if user config setting sex params sex else params sex params act submit params isbz 第二件 事情 是从 网页 提取 需要 分数 我们 可以 使用 beautifulsoup4 实现 语法 简单 soup beautifulsoup content html parser from encoding gb18030 full name get full name name postfix print soup find string re compile 姓名 五格 评分 for node in soup find all div class chaxun node cont node get text if 姓名 五格 评分 in node cont name wuge node find string re compile 姓名 五格 评分 result data wuge score name wuge next sibling get text if 姓名 八字 评分 in node cont name wuge node find string re compile 姓名 八字 评分 result data bazi score name wuge next sibling get text 通过 方法 html 解析 提取 八字 五格 分数 运行 结果 事例 1287 李国 姓名 八字 评分 61.5 姓名 五格 评分 78.6 总分 140.12 1287 国铁 姓名 八字 评分 61 姓名 五格 评分 89.7 总分 150.73 1287 李国晶 姓名 八字 评分 21 姓名 五格 评分 81.6 总分 102.64 1287 李鸣国 姓名 八字 评分 21 姓名 五格 评分 90.3 总分 111.35 1287 李柔国 姓名 八字 评分 64 姓名 五格 评分 78.3 总分 142.36 1287 李国经 姓名 八字 评分 21 姓名 五格 评分 89.8 总分 110.87 1287 李国蒂 姓名 八字 评分 22 姓名 五格 评分 87.2 总分 109.28 1287 李国登 姓名 八字 评分 21 姓名 五格 评分 81.6 总分 102.69 1287 李略国 姓名 八字 评分 21 姓名 五格 评分 83.7 总分 104.710 1287 李国添 姓名 八字 评分 21 姓名 五格 评分 81.6 总分 102.611 1287 李国天 姓名 八字 评分 22 姓名 五格 评分 83.7 总分 105.712 1287 李国田 姓名 八字 评分 22 姓名 五格 评分 93.7 总分 115.7 这些 分数 我们 可以 进行 排序 一个 实用 参考资料 友情 提示 分数 很多 因素 有关 比如 出生 时刻 已经 限定 限定 笔画 因素 这些 条件 决定 有些 名字 不会 分数 不要 受此 影响 找出 相对 分数 可以 目前 程序 只能 抓取 一个 网站 内容 地址 http life httpcn com xingming asp 列表 仅供参考 看过 一些 文章 历史 很多 名人 伟人 姓名 八字 评分 非常低 但是 建功立业 名字 确实 有些 影响 有时候 朗朗上口 就是 最好 从本 列表 选取 名字 之后 可以 百度 人人 网等 地方 查查 以防 有些 负面 重名 或者 这个 名字 人太多 大街 八字 分数 中国 传承 五格 分数 日本 近代 发明 有时候 可以 试试 西方 星座 起名 并且 奇怪的是 八字 五个 分数 不同 网站 打分 相差 很大 说明 东西 供参考 本文 代码 已上 传到 github https github com peiss chinese name score 附注 有些 朋友 不会 运行 程序 但是 想得到 宝宝 起名 结果 列表 可以 qq693609645 联系 运行 一份 结果 收取 少量 费用 本文 地址 http crazyant net 2076 html 转载 注明 来源
2089,Mybatis源码解读-初始化过程详解,mybatis 源码 解读 初始化 过程 详解 使用 mybatis 我们 通常 配置 spring 容器 spring 启动 时候 自动 加载 mybatis 所有 配置文件 然后 生成 注入 spring bean 本文 实用 角度 进行 mybatis 源码 解读 关注 以下 一些 方面 mybatis 哪些 配置文件 配置 mybatis 初始化 源码 流程 mybatis 初始化 产生 哪些 对象 mybatis 初始化 环境 并且 执行 sql 语句 java 代码 先看 一段 初始化 mybatis 环境 并且 执行 sql 语句 java 代码 package org apache ibatis session import java io reader import org apache ibatis io resources public class mytest public static void main string args throws exception 开始 初始化 final string resource org apache ibatis builder mapperconfig xml final reader reader resources getresourceasreader resource sqlsessionfactory sqlmapper new sqlsessionfactorybuilder build reader 开始 执行 sqlsqlsession session sqlmapper opensession integer count session selectone org apache ibatis domain blog mappers blogmapper selectcountofposts system out println count 代码 完成 这些 事情 读取 mybatis 配置文件 构建 sqlsessionfactory3 sqlsessionfactory 创建 一个 sqlsession4 使用 sqlsession 执行 一个 select 语句 参数 mapper java 一个 方法 打印 结果 这里 三行 代码 包括 读取 配置文件 创建 sqlsessionfactory 就是 mybatis 一次 初始化 过程 如果 查看 一下 spring 配置 mybatis 文件 发现 使用 mybatis spring 主要 初始化 这个 sqlsessionfactory 对象 bean id sqlsessionfactory class org mybatis spring sqlsessionfactorybean property name datasource ref datasource property name configlocation value classpath conf mapperconfig xml property name mapperlocations list value classpath mapper xml value list property bean spring 配置 sqlsessionfactory 接收 三个 参数 分别 数据源 datasource mybatis 配置文件 mapperconfig xml mapper xml 文件 扫描 路径 可以 看出 mybatis 初始化 过程 就是 读取 配置文件 然后 构建 sqlsessionfactory 过程 mybatis 哪些 配置文件 配置 上面 java 代码 初始化 mybatis 使用 配置文件 mapperconfig xml 然而 spring 配置文件 构建 sqlsessionfactory 使用 mapper xml 配置文件 其实 mybatis 最多 两类 文件 配置文件 mapperconfig xml 可以 通过 mappers xml 元素 包含 普通 mapper xml 配置文件 配置文件 mapperconfig xml 一个 包含 所有 属性 mapperconfig xml 实例 xml version 1.0 encoding utf doctype configuration public mybatis org dtd config 3.0 en http mybatis org dtd mybatis config dtd configuration properties resource org apache ibatis databases blog blog derby properties settings setting name cacheenabled value true setting name lazyloadingenabled value false setting name multipleresultsetsenabled value true setting name usecolumnlabel value true setting name usegeneratedkeys value false setting name defaultexecutortype value simple setting name defaultstatementtimeout value 25 settings typealiases typealias alias author type org apache ibatis domain blog author typealias alias blog type org apache ibatis domain blog blog typealiases typehandlers typehandler javatype string jdbctype varchar handler org apache ibatis builder customstringtypehandler typehandlers objectfactory type org apache ibatis builder exampleobjectfactory property name objectfactoryproperty value 100 objectfactory plugins plugin interceptor org apache ibatis builder exampleplugin property name pluginproperty value 100 plugin plugins environments default development environment id development transactionmanager type jdbc property name value transactionmanager datasource type unpooled property name driver value driver property name url value url property name username value username property name password value password datasource environment environments databaseidprovider type db vendor property name sql server value sqlserver property name db2 value db2 property name oracle value oracle databaseidprovider mappers mapper resource org apache ibatis builder authormapper xml mapper resource org apache ibatis builder blogmapper xml mappers configuration 配置文件 只有 一个 xml 节点 就是 configuration 包含 配置 properties 属性 这里 配置 属性 可以 整个 配置文件 使用 替换 需要 动态 配置 属性 settings 设置 mybatis 极为重要 调整 设置 它们 改变 mybatis 运行 行为 比如 是否 使用 缓存 日志 记录 方式 typealiases 类型 命名 类型 别名 java 类型 设置 一个 名字 xml 配置 有关 存在 意义 在于 用来 减少 完全 限定 冗余 typehandlers 类型 处理器 无论是 mybatis 预处理 语句 preparedstatement 设置 一个 参数 还是 结果 集中 取出 一个 值时 类型 处理器 获取 合适 方式 转换成 java 类型 objectfactory 对象 工厂 mybatis 每次 创建 结果 对象 实例 使用 一个 对象 工厂 objectfactory 实例 完成 plugins 插件 mybatis 允许 映射 语句 执行 过程 一点 进行 拦截 调用 比如 增加 分页 功能 格式化 输出 最终 sql 扩展 environments 环境 mybatis 可以 配置 适应 多种 环境 这种 机制 有助于 sql 映射 应用 多种 数据库 之中 比如 设置 不同 开发 测试 线上 配置 每个 配置 可以 配置 事务 管理器 数据源 对象 databaseidprovider 数据库 厂商 标识 mybatis 可以 根据 不同 数据库 厂商 执行 不同 语句 这种 厂商 支持 基于 映射 语句 databaseid 属性 mappers 映射器 mybatis 行为 已经 上述 元素 配置 通过 这里 配置 mappers 文件 我们 可以 查找 定义 sql 映射 语句 用于 执行 可以 看出 配置 用户 设定 mybatis 运行 一些 环境 mappers 映射器 需要 执行 sql 配置 正常 情况 我们 需要 配置 mapper 映射器 地址 即可 前面 mybatis 行为 配置 默认值 正常 情况 需要 设定 包含 最终 sql mapper 映射器 配置文件 虽然 我们 经常 mapper 文件 知道 select insert update delete 四种 元素 还有 sql resultmap 配置 感觉 配置 好多好多 其实 mapper 总共 配置 我们 常用 包含 在内 cache 给定 命名 空间 缓存 配置 cache ref 其他 命名 空间 缓存 配置 引用 resultmap 复杂 强大 元素 用于 实现 数据库 表列 java bean 属性 映射 配置 sql 其他 语句 引用 重用 语句 insert 映射 插入 语句 update 映射 更新 语句 delete 映射 删除 语句 select 映射 查询 语句 正常 情况 我们 很少 使用 mybatis 提供 cache 机制 而是 使用 外部 redis 缓存 所以 这里 cache 配置 几乎 不会 使用 主要 就是 我们 平时 使用 配置 以上 就是 mybatis 所有 提供 我们 配置 地方 改变 mybatis 行为 配置 每个 xml 配置文件 刚好 配置 总共 16 配置 mybatis 初始化 源码 流程 阅读 mybatis 源码 最好 方式 是从 源码 单测 作为 入口 然后 debug 一步步 执行 自己 关注 地方 多多 停留 一会 仔细 查看 以下 代码 流程 进行 解析 主要 代码 mybatis 代码 初始化 入口 beforeclasspublic static void setup throws exception createblogdatasource final string resource org apache ibatis builder mapperconfig xml final reader reader resources getresourceasreader resource sqlmapper new sqlsessionfactorybuilder build reader 这里 看到 进入 new sqlsessionfactorybuilder build reader 方法 进入 sqlsessionfactorybuilder build 方法 public sqlsessionfactory build reader reader string environment properties properties try xmlconfigbuilder parser new xmlconfigbuilder reader environment properties return build parser parse catch exception throw exceptionfactory wrapexception error building sqlsession finally errorcontext instance reset try reader close catch ioexception intentionally ignore prefer previous error 主要 两行 try 第一行 内容 调用 xpathparser 加载 mybatis 配置文件 第二步 包含 两个 步骤 parser parse 方法 返回 一个 configuration 对象 包裹 build 方法 只有 一行 代码 public sqlsessionfactory build configuration config return new defaultsqlsessionfactory config 可以 看出 其实 初始化 过程 就是 创建 configuration 对象 过程 对照 mapperconfig xml 元素 configuration 不难猜测 configuration 一个 非常 重要 包含 mybatis 所有 数据 配置 对象 mybatis 核心 对象 configuration 构建 过程 接下来 进入 xmlconfigbuilder parse 方法 方法 解析 xml 文件 configuration 节点 然后 挨个 解析 上面 配置文件 提到 配置 public configuration parse if parsed throw new builderexception each xmlconfigbuilder can only be used once parsed true parseconfiguration parser evalnode configuration return configuration private void parseconfiguration xnode root try issue 117 read properties firstpropertieselement root evalnode properties properties settings settingsasproperties root evalnode settings loadcustomvfs settings typealiaseselement root evalnode typealiases pluginelement root evalnode plugins objectfactoryelement root evalnode objectfactory objectwrapperfactoryelement root evalnode objectwrapperfactory reflectorfactoryelement root evalnode reflectorfactory settingselement settings read it after objectfactory and objectwrapperfactory issue 631environmentselement root evalnode environments databaseidproviderelement root evalnode databaseidprovider typehandlerelement root evalnode typehandlers mapperelement root evalnode mappers catch exception throw new builderexception error parsing sql mapper configuration cause 我们 挨个 查看 这些 配置 解析 产出 什么 内容 properties 配置 解析 进入 propertieselement 方法 我们 发现 初始化 一个 properties 对象 xml 所有 节点 按照 key value 存入 properties 之后 configuration variables 变量 进行 合并 configuration variables 本身 properties 对象 private void propertieselement xnode context throws exception if context null properties defaults context getchildrenasproperties string resource context getstringattribute resource string url context getstringattribute url if resource null && url null throw new builderexception the properties element cannot specify both url and resource based property file reference please specify one or the other if resource null defaults putall resources getresourceasproperties resource else if url null defaults putall resources geturlasproperties url properties vars configuration getvariables if vars null defaults putall vars parser setvariables defaults configuration setvariables defaults properties 配置 解析 合并 configuration variables 之后 后续 配置文件 可以 使用 这些 变量 setting 配置 读取 setting 配置 读取 包含 两个 步骤 第一步 xml 所有 配置 读取 properties 对象 private properties settingsasproperties xnode context if context null return new properties properties props context getchildrenasproperties check that all settings are known to the configuration classmetaclass metaconfig metaclass forclass configuration class localreflectorfactory for object key props keyset if metaconfig hassetter string valueof key throw new builderexception the setting key is not known make sure you spelled it correctly case sensitive return props 这个 函数 读取 setting 配置 通过 反射 访问 configuration class 如果 存在 某个 配置 set 方法 报错 然后 settingselement 方法 这些 读取 配置 存入 configuration private void settingselement properties props throws exception configuration setautomappingbehavior automappingbehavior valueof props getproperty automappingbehavior partial configuration setautomappingunknowncolumnbehavior automappingunknowncolumnbehavior valueof props getproperty automappingunknowncolumnbehavior none configuration setcacheenabled booleanvalueof props getproperty cacheenabled true configuration setproxyfactory proxyfactory createinstance props getproperty proxyfactory configuration setlazyloadingenabled booleanvalueof props getproperty lazyloadingenabled false configuration setaggressivelazyloading booleanvalueof props getproperty aggressivelazyloading false configuration setmultipleresultsetsenabled booleanvalueof props getproperty multipleresultsetsenabled true configuration setusecolumnlabel booleanvalueof props getproperty usecolumnlabel true configuration setusegeneratedkeys booleanvalueof props getproperty usegeneratedkeys false configuration setdefaultexecutortype executortype valueof props getproperty defaultexecutortype simple configuration setdefaultstatementtimeout integervalueof props getproperty defaultstatementtimeout null configuration setdefaultfetchsize integervalueof props getproperty defaultfetchsize null configuration setmapunderscoretocamelcase booleanvalueof props getproperty mapunderscoretocamelcase false configuration setsaferowboundsenabled booleanvalueof props getproperty saferowboundsenabled false configuration setlocalcachescope localcachescope valueof props getproperty localcachescope session configuration setjdbctypefornull jdbctype valueof props getproperty jdbctypefornull other configuration setlazyloadtriggermethods stringsetvalueof props getproperty lazyloadtriggermethods equals clone hashcode tostring configuration setsaferesulthandlerenabled booleanvalueof props getproperty saferesulthandlerenabled true configuration setdefaultscriptinglanguage resolveclass props getproperty defaultscriptinglanguage configuration setcallsettersonnulls booleanvalueof props getproperty callsettersonnulls false configuration setuseactualparamname booleanvalueof props getproperty useactualparamname true configuration setreturninstanceforemptyrow booleanvalueof props getproperty returninstanceforemptyrow false configuration setlogprefix props getproperty logprefix suppresswarnings unchecked class extends log logimpl class extends log resolveclass props getproperty logimpl configuration setlogimpl logimpl configuration setconfigurationfactory resolveclass props getproperty configurationfactory 因为 setting 变量 直接 改变 mybatis 行为 所以 配置 直接 存于 confirguration 属性 typealiases 配置 解析 进入 typealiaseselement 方法 用于 typealiases 配置 解析 private void typealiaseselement xnode parent if parent null for xnode child parent getchildren if package equals child getname string typealiaspackage child getstringattribute name configuration gettypealiasregistry registeraliases typealiaspackage else string alias child getstringattribute alias string type child getstringattribute type try class clazz resources classforname type if alias null typealiasregistry registeralias clazz else typealiasregistry registeralias alias clazz catch classnotfoundexception throw new builderexception error registering typealias for alias cause 方法 typealiases 配置 提取 之后 存入 typealiasregistry 这个 对象 对象 basebuilder 初始化 public abstract class basebuilder protected final configuration configuration protected final typealiasregistry typealiasregistry protected final typehandlerregistry typehandlerregistry public basebuilder configuration configuration this configuration configuration this typealiasregistry this configuration gettypealiasregistry this typehandlerregistry this configuration gettypehandlerregistry configuration 类中 我们 看到 对象 声明 protected final typealiasregistry typealiasregistry new typealiasregistry 打开 该类 代码 发现 特别 简单 一个 map 存储 别名 对应 映射 public class typealiasregistry private final map string class type aliases new hashmap string class public typealiasregistry registeralias string string class registeralias byte byte class registeralias long long class registeralias short short class registeralias int integer class registeralias integer integer class registeralias double double class registeralias float float class registeralias boolean boolean class 构造函数 mybatis 已经 默认 注册 一些 常用 别名 关系 所以 我们 可以 mappers xml 文件 使用 这些 名字 typehandlers 配置 元素 解析 mybatis 提供 大部分 数据类型 typehandlers 如果 我们 定制 自己 类型 处理器 比如 实现 数据库 两个 数字 中文 映射 可以 自己 实现 typehandlerprivate void typehandlerelement xnode parent throws exception if parent null for xnode child parent getchildren if package equals child getname string typehandlerpackage child getstringattribute name typehandlerregistry register typehandlerpackage else string javatypename child getstringattribute javatype string jdbctypename child getstringattribute jdbctype string handlertypename child getstringattribute handler class javatypeclass resolveclass javatypename jdbctype jdbctype resolvejdbctype jdbctypename class typehandlerclass resolveclass handlertypename if javatypeclass null if jdbctype null typehandlerregistry register javatypeclass typehandlerclass else typehandlerregistry register javatypeclass jdbctype typehandlerclass else typehandlerregistry register typehandlerclass 方法 通过 反射 得到 javatypeclass jdbctype typehandlerclass 三个 变量 三个 变量 组成 javatype jdbctype typehandler 三元组 遇到 javatype jdbctype 转换 或者 遇到 jdbctype javatype 转换 使用 typehandler 然后 方法 调用 typehandlerregistry register 进行 注册 typehandlerregistry 对象 是从 basebuilder configuration 对象 获取 public abstract class basebuilder protected final configuration configuration protected final typealiasregistry typealiasregistry protected final typehandlerregistry typehandlerregistry public basebuilder configuration configuration this configuration configuration this typealiasregistry this configuration gettypealiasregistry this typehandlerregistry this configuration gettypehandlerregistry typehandlerregistry 建立 几个 map 映射 public final class typehandlerregistry private final map jdbctype typehandler jdbc type handler map new enummap jdbctype typehandler jdbctype class private final map type map jdbctype typehandler type handler map new hashmap type map jdbctype typehandler private final typehandler object unknown type handler new unknowntypehandler this private final map class typehandler all type handlers map new hashmap class typehandler 第一个 jdbctype key map 第二个 javatype key map 第三个 未知 处理器 最后 一个 包含 全部 处理器 执行 sql 时候 javabean javatype 转换 db jdbctype 查询 出来 数据 时候 需要 jdbctype 转换成 javatype typehandlerregistry 构造函数 已经 注册 很多 默认 typehandler 大部分 情况 需要 我们 添加 public typehandlerregistry register boolean class new booleantypehandler register boolean class new booleantypehandler register jdbctype boolean new booleantypehandler register jdbctype bit new booleantypehandler register byte class new bytetypehandler register byte class new bytetypehandler register jdbctype tinyint new bytetypehandler register short class new shorttypehandler register short class new shorttypehandler register jdbctype smallint new shorttypehandler 实现 一个 typehandler 需要 实现 接口 接口 提供 是从 javatype jdbctype setparameter 方法 以及 jdbctype javatype 转换 getresult 方法 public interface typehandler void setparameter preparedstatement ps int parameter jdbctype jdbctype throws sqlexception getresult resultset rs string columnname throws sqlexception getresult resultset rs int columnindex throws sqlexception getresult callablestatement cs int columnindex throws sqlexception objectfactory 配置 解析 如果 自己 控制 查询数据库 结果 javabean 映射 生成 可以 创建 自己 objectfactory 解析 代码 如下 private void objectfactoryelement xnode context throws exception if context null string type context getstringattribute type properties properties context getchildrenasproperties objectfactory factory objectfactory resolveclass type newinstance factory setproperties properties configuration setobjectfactory factory 可以 看到 配置 包含 type 属性 以及 properties 节点 创建 objectfactory 对象 设置 configuration configuration 对象 objectfactory 成员 变量 protected objectfactory objectfactory new defaultobjectfactory 实现 objectfactory 需要 继承 接口 public interface objectfactory void setproperties properties properties create class type create class type list class constructorargtypes list object constructorargs boolean iscollection class type 工厂 接口 提供 设置 属性 列表 还有 创建对象 工厂 方法 plugin 元素 解析 plugin mybatis 插件 可以 我们 自己 进行 开发 用于 扩展 mybatis 进入 pluginelement 方法 进入 解析 private void pluginelement xnode parent throws exception if parent null for xnode child parent getchildren string interceptor child getstringattribute interceptor properties properties child getchildrenasproperties interceptor interceptorinstance interceptor resolveclass interceptor newinstance interceptorinstance setproperties properties configuration addinterceptor interceptorinstance 该段 代码 首先 获取 intercepter 元素 作为 拦截器 然后 读取 节点 所有 节点 作为 配置 最后 调用 configuration addinterceptor 方法 添加 configuration interceptorchain 对象 拦截器 一个 包装 对象 public class interceptorchain private final list interceptor interceptors new arraylist interceptor public object pluginall object target for interceptor interceptor interceptors target 变量 每次 变化 target interceptor plugin target return target public void addinterceptor interceptor interceptor interceptors add interceptor public list interceptor getinterceptors return collections unmodifiablelist interceptors 该类 使用 list interceptor 存储 所有 配置 拦截器 提供 addinterceptor 用于 添加 拦截器 提供 getinterceptors 用于 获取 当前 所有 添加 插件 列表 提供 pluginall 接口 调用 所有 interceptor plugin object 方法 进行 插件 执行 environments 配置 解析 environments 可以 配置 多个 环境 配置 每个 配置 包含 数据源 事务 管理器 两项 如下 所示 代码 private void environmentselement xnode context throws exception if context null if environment null environment context getstringattribute default for xnode child context getchildren string id child getstringattribute id if isspecifiedenvironment id transactionfactory txfactory transactionmanagerelement child evalnode transactionmanager datasourcefactory dsfactory datasourceelement child evalnode datasource datasource datasource dsfactory getdatasource environment builder environmentbuilder new environment builder id transactionfactory txfactory datasource datasource configuration setenvironment environmentbuilder build 代码 通过 isspecifiedenvironment 方法 判断 当前 id 是不是 指定 读取 environment 如果 的话 通过 反射 获取 事务 管理器 数据源 然后 environment builder 创建 enviroment 对象 设置 configuration configuration 可以 看到 enviroment 成员 变量 protected environment environment enviroment 对象 包含 三个 属性 public final class environment private final string id private final transactionfactory transactionfactory private final datasource datasource databaseidprovider 配置 解析 mybatis 当然 只是 支持 mysql 支持 oracle sqlserver 不同 数据库 解析 代码 如下 private void databaseidproviderelement xnode context throws exception databaseidprovider databaseidprovider null if context null string type context getstringattribute type awful patch to keep backward compatibilityif vendor equals type type db vendor properties properties context getchildrenasproperties databaseidprovider databaseidprovider resolveclass type newinstance databaseidprovider setproperties properties environment environment configuration getenvironment if environment null && databaseidprovider null string databaseid databaseidprovider getdatabaseid environment getdatasource configuration setdatabaseid databaseid 解析 databaseidprovider 里面 properties 存储 各种 数据库 映射 并且 databaseidprovider 提供 一个 根据 datasource 获取 对应 databseid 方法 vendordatabaseidprovider 为例 通过 connection getmetadata getdatabaseproductname 获取 数据库 产品名称 然后 刚才 databaseidprovider 获取 对应 databaseid public class vendordatabaseidprovider implements databaseidprovider private static final log log logfactory getlog vendordatabaseidprovider class private properties properties overridepublic string getdatabaseid datasource datasource if datasource null throw new nullpointerexception datasource cannot be null try return getdatabasename datasource catch exception log error could not get databaseid from datasource return null overridepublic void setproperties properties this properties private string getdatabasename datasource datasource throws sqlexception string productname getdatabaseproductname datasource if this properties null for map entry object object property properties entryset if productname contains string property getkey return string property getvalue no match return nullreturn null return productname private string getdatabaseproductname datasource datasource throws sqlexception connection con null try con datasource getconnection databasemetadata metadata con getmetadata return metadata getdatabaseproductname finally if con null try con close catch sqlexception ignored 获取 databaseid 之后 最后 databaseid 设置 configuration 后续 执行 sql 时候 自动 根据 databaseid 映射 具体 数据库 sql mappers 配置 解析 mappers 解析 最为 复杂 我们 假设 mapper 文件 url 指定 xml 文件 进行 解析 流程 查看 private void mapperelement xnode parent throws exception if parent null for xnode child parent getchildren if package equals child getname string mapperpackage child getstringattribute name configuration addmappers mapperpackage else string resource child getstringattribute resource string url child getstringattribute url string mapperclass child getstringattribute class if resource null && url null && mapperclass null errorcontext instance resource resource inputstream inputstream resources getresourceasstream resource 使用 xmlmapperbuilder 加载 mapper xml 然后 进入 parse 方法 xmlmapperbuilder mapperparser new xmlmapperbuilder inputstream configuration resource configuration getsqlfragments mapperparser parse else if resource null && url null && mapperclass null errorcontext instance resource url inputstream inputstream resources geturlasstream url xmlmapperbuilder mapperparser new xmlmapperbuilder inputstream configuration url configuration getsqlfragments mapperparser parse else if resource null && url null && mapperclass null class mapperinterface resources classforname mapperclass configuration addmapper mapperinterface else throw new builderexception mapper element may only specify url resource or class but not more than one 注释 部分 显示 读取 每个 mapper xml 资源 文件 地址 进入 xmlmapperbuilder parse 方法 public void parse if configuration isresourceloaded resource configurationelement parser evalnode mapper configuration addloadedresource resource bindmapperfornamespace parsependingresultmaps parsependingchacherefs parsependingstatements private void configurationelement xnode context try string namespace context getstringattribute namespace if namespace null namespace equals throw new builderexception mapper namespace cannot be empty builderassistant setcurrentnamespace namespace cacherefelement context evalnode cache ref cacheelement context evalnode cache parametermapelement context evalnodes mapper parametermap resultmapelements context evalnodes mapper resultmap sqlelement context evalnodes mapper sql buildstatementfromcontext context evalnodes select insert update delete catch exception throw new builderexception error parsing mapper xml cause 然后 进入 configurationelement parser evalnode mapper 方法 读取 所有 xml mapper 元素 这里 我们 查看 buildstatementfromcontext 方法 private void buildstatementfromcontext list xnode list if configuration getdatabaseid null buildstatementfromcontext list configuration getdatabaseid buildstatementfromcontext list null private void buildstatementfromcontext list xnode list string requireddatabaseid for xnode context list final xmlstatementbuilder statementparser new xmlstatementbuilder configuration builderassistant context requireddatabaseid try statementparser parsestatementnode catch incompleteelementexception configuration addincompletestatement statementparser 方法 出现 一个 xmlstatementbuilder 用于 select insert update delete 语句 各自 解析 xmlstatementbuilder parsestatementnode 方法 解析 各种 语句 属性 参数 以及 动态 sql 处理 最后 调用 builderassistant addmappedstatement 方法 所有 参数 内容 构建 mappedstatement 添加 configuration mappedstatement statement statementbuilder build configuration addmappedstatement statement 以下 configuration mappedstatements 对象 configuration mappedstatements 对象 protected final map string mappedstatement mappedstatements new strictmap mappedstatement mapped statements collection 这里 strictmap 就是 一个 hashmap addmappedstatement 方法 可以 看到 map key 各个 sql id public void addmappedstatement mappedstatement ms mappedstatements put ms getid ms 由此 可以 推测 整个 mybatis 执行 sql 过程 业务 代码 调用 sqlmapperinterface method 方法 mybatis 根据 method 限定 名称 作为 id mappedstatements 找到 构建 mappedstatement 对象 使用 mappedstatement 读取 sql 各种 配置 执行 sql mybatis 初始化 对象 产出 列表 总结 以上 就是 mybatis 初始化 过程 详解 最终 产出 以下 对象 列表 产出 sqlsessionfactory 相当于 connectionfactory 用于 生产 sqlsession sqlsession 相当于 connection 用于 实际 sql 查询 sqlsessionfactory 核心 对象 configuration 所有 mybatis 配置 mapper 配置 列表 解析 读取 对象 属性 configuration 各个 对象 configuration variables 类型 properties 存储 mybatis 配置 properties 对象 configuration 直接 属性 setting 配置 因为 直接 影响 mybatis 行为 直接 赋值 configuration 对象 属性 configuration typealiasregistry 对象 存储 别名 映射 key 别名 value 别名 对应 configuration typehandlerregistry 对象 存储 typehandler 映射 key javatype 或者 jdbctype value typehandler configuration objectfactory 对象 存储 单个 objectfactory 对象 用于 db 映射 javabean 对象 创建 configuration interceptorchain 对象 存储 plugin 对象 列表 用户 可以 添加 用于 扩展 mybatis configuration environment 对象 指定 开发 测试 线上 环境 根据 datasource 决定 databaseid 对象 取值 configuration databaseid 存储 使用 db 类型 mybatis 根据 不同 db sql 适配 configuration mappedstatements 存储 key id value mappedstatement map 执行 sql 此处 获取 对象 参考资料 xml 映射 配置文件 http www mybatis org mybatis zh configuration htmlxml 映射 文件 http www mybatis org mybatis zh sqlmap xml html 本文 地址 http crazyant net 2089 html 转载 注明 来源
2120,Zookeeper并不保证读取的是最新数据,zookeeper 保证 读取 最新 数据 如果 zk 进行 读取 操作 读取 数据 可能 过期 数据 不是 最新 数据 已上 图为例 如果 一个 zk 集群 10000 节点 进行 写入 时候 如果 已经 6k 节点 写入 成功 zk 认为 本次 请求 成功 但是 这时候 如果 一个 客户端 读取 刚好 另外 4k 节点 数据 那么 读取 就是 过期数据 zk 官方 文档 对此 解释 地址 https zookeeper apache org doc r3.1 zookeeperprogrammers htmlzookeeper 一致性 保证 zookeeper 一种 高性能 扩展 服务 虽然 读取 速度 写入 但是 读取 写入 操作 设计 极为 快速 这样 原因 读取 情况 zookeeper 可能 提供 数据 为了 zookeeper 一致性 保证 顺序 一致性 来自 客户端 更新 按照 发送 顺序 写入 zk 原子 更新 操作 要么 成功 要么 失败 没有 中间状态 系统 快照 客户端 看到 服务 相同 视图 不管 连接 服务器 可靠性 一旦 应用 更新 数据 持久 直到 数据 再次 更新 对于 保证 两个 推论 如果 客户端 得到 成功 返回 说明 写入 成功 数据 持久 如果 出现 通信 错误 超时 一些 故障 客户端 知道 更新 是否 应用 我们 采取措施 尽量减少 失败 唯一 保证 只有 成功 返回 paxos 称为 单调 条件 如果 客户端 已经 读取 数据 或者 写入 成功 数据 不会 因为 zk 失败 导致 回滚 及时性 一段时间 客户端 看到 最新 系统 更新 在此期间 客户端 看到 这种 变更 有时 开发人员 错误 假定 zookeeper 实际上 没有 做出 一个 保证 客户端 一致性 zookeeper 保证 每个 实例 两个 不同 客户端 具有 相同 zookeeper 数据 视图 由于 诸如 网络 延迟 因素 一个 客户端 可以 客户端 通知 改变 之前 执行 更新 考虑 两个 客户端 场景 如果 客户端 znode 设置 告诉 客户端 读取 客户端 可以 读取 旧值 取决于 连接 服务器 如果 客户端 客户端 读取 相同 重要 客户端 应该 执行 读取 之前 zookeeper api 方法 调用 sync 方法 因此 zookeeper 本身 保证 所有 服务器 同步 发生变化 zookeeper 原语 用于 构建 高级 函数 提供 有用 客户端 同步 zk sync 方法 解释 异步 实现 当前 进程 leader 之间 指定 path 数据 同步 cap 理论 理论 计算机科学 cap 定理 cap theorem 被称作 鲁尔 定理 brewer theorem 指出 对于 一个 分布式计算 系统 来说 可能 同时 满足 以下 三点 一致性 consistence 等同于 所有 节点 访问 一份 最新 数据 副本 可用性 availability 每次 请求 获取 非错 响应 但是 保证 获取 数据 最新 数据 分区 容错性 network partitioning 实际效果 而言 分区 相当于 通信 时限 要求 系统 如果 不能 时限 达成 数据 一致性 意味着 发生 分区 情况 必须 当前 操作 之间 做出 选择 根据 定理 分布式系统 只能 满足 三项 两项 可能 满足 全部 三项 理解 cap 理论 简单 方式 想象 两个 节点 处分 两侧 允许 至少 一个 节点 更新 状态 导致 数据 一致 丧失 性质 如果 为了 保证数据 一致性 分区 一侧 节点 设置 不可 那么 丧失 性质 除非 两个 节点 可以 互相 通信 才能 既保证 保证 导致 丧失 性质 对于 zookeeper 来说 实现 可用性 分区 容错性 写入 一致性 丧失 读取 一致性 有所 丧失 有所 获得 没有 十全十美 本文 地址 http crazyant net 2120 html 转载 注明 来源
2124,Java线程池ThreadPoolExecutor详解,java 线程 threadpoolexecutor 详解 线程 工作 原理 线程 池刚 创建 里面 没有 一个 线程 任务 队列 作为 参数 进来 不过 就算 队列 里面 任务 线程 不会 马上 执行 它们 调用 execute 方法 添加 一个 任务 线程 池会 如下 判断 如果 正在 运行 线程 数量 小于 corepoolsize 那么 马上 创建 线程 运行 这个 任务 如果 正在 运行 线程 数量 大于 等于 corepoolsize 那么 这个 任务 放入 队列 如果 这时候 队列 而且 正在 运行 线程 数量 小于 maximumpoolsize 那么 还是 创建 线程 运行 这个 任务 如果 队列 而且 正在 运行 线程 数量 大于 等于 maximumpoolsize 那么 线程 池会 抛出 异常 告诉 调用者 不能 接受任务 一个 线程 完成 任务 它会 队列 中取 一个 任务 执行 一个 线程 无事 超过 一定 时间 keepalivetime 线程 池会 判断 如果 当前 运行 线程 大于 corepoolsize 那么 这个 线程 停掉 所以 线程 所有 任务 完成 最终 收缩 corepoolsize 大小 这样 过程 说明 不是 加入 任务 一定 会先 执行 假设 队列 大小 10 corepoolsize maximumpoolsize 那么 加入 20 任务 执行 顺序 就是 这样 首先 执行 任务 然后 任务 13 放入 队列 这时候 队列 任务 14 15 16 马上 执行 任务 17 20 抛出 异常 最终 顺序 14 15 16 10 11 12 13 线程 池有 哪些 配置 线程 可以 使用 java util concurrent threadpoolexecutor 创建 该类 包含 最全 参数 构造函数 如下 public threadpoolexecutor int corepoolsize int maximumpoolsize long keepalivetime timeunit unit blockingqueue runnable workqueue threadfactory threadfactory rejectedexecutionhandler handler 相应 就是 线程 可以 配置 参数 corepoolsize 核心 大小 如果 调用 prestartallcorethreads 或者 prestartcorethread 方法 直接 预先 创建 corepoolsize 线程 否则 当有 任务 之后 创建 一个 线程 执行 任务 线程 池中 线程 数目 达到 corepoolsize 到达 任务 放到 缓存 队列 当中 这样 好处 如果 任务量 很小 那么 甚至 需要 缓存 任务 corepoolsize 线程 可以 应对 maximumpoolsize 线程 最大 线程 表示 在线 程池 最多能 创建 多少 线程 如果 运行 线程 超过 这个 数字 那么 相当于 线程 池已 新来 任务 使用 rejectedexecutionhandler 进行 处理 keepalivetime 表示 线程 没有 任务 执行 保持 多久 时间 终止 然后 线程 数目 维持 corepoolsize 大小 unit 参数 keepalivetime 时间 单位 workqueue 一个 阻塞 队列 用来 存储 等待 执行 任务 如果 当前 线程 需求 超过 corepoolsize 大小 放在 这里 threadfactory 线程 工厂 主要 用来 创建 线程 比如 可以 指定 线程 名字 handler 如果 线程 池已 任务 处理 方式 线程 阻塞 队列 包含 哪几种 选择 如果 线程 超过 corepoolsize 开始 线程 放到 阻塞 队列 相当于 生产者 消费者 一个 数据通道 以下 一些 阻塞 队列 供选择 arrayblockingqueue2 delayqueue3 linkedblockingqueue4 priorityblockingqueue5 synchronousqueuearrayblockingqueue 一个 边界 阻塞 队列 内部 实现 一个 数组 边界 意思 容量 有限 我们 必须 初始化 时候 指定 容量 大小 容量 大小 一旦 指定 不可 改变 delayqueue 阻塞 内部 元素 delayqueue 元素 必须 实现 java util concurrent delayed 接口 接口 只有 一个 方法 就是 long getdelay timeunit unit 返回值 就是 队列 元素 释放 保持 时间 如果 返回 或者 一个 负值 意味着 元素 已经 到期 需要 释放 此时 delayedqueue 通过 take 方法 释放 对象 delayqueue 应用 定时 关闭 连接 缓存 对象 超时 处理 各种 场景 linkedblockingqueue 阻塞 队列 大小 配置 可选 如果 我们 初始化 指定 一个 大小 就是 边界 如果 指定 就是 边界 边界 其实 采用 默认 大小 integer max value 容量 内部 实现 一个 链表 priorityblockingqueue 一个 没有 边界 队列 排序 规则 java util priorityqueue 一样 需要 注意 priorityblockingqueue 允许 插入 null 对象 所有 插入 priorityblockingqueue 对象 必须 实现 java lang comparable 接口 队列 优先级 排序 规则 就是 按照 我们 这个 接口 实现 定义 synchronousqueue 队列 内部 允许 容纳 一个 元素 一个 线程 插入 一个 元素 后会 阻塞 除非 这个 元素 一个 线程 消费 使用 应该 linkedblockingqueue 注意 一般 情况 下要 配置 一下 队列 大小 设置 成有界 队列 否则 jvm 内存 如果 线程 已经 可是 还有 任务 提交 怎么办 线程 池已 定义 运行 线程 maximumpoolsize 并且 workqueue 有界 队列 并且 已满 如果 无界 队列 当然 永远 不会 这时候 提交 任务 怎么办 线程 池会 任务 传递 最后 一个 参数 rejectedexecutionhandler 处理 比如 打印 报错 日志 抛出 异常 存储 mysql redis 用于 后续 处理 等等 线程 默认 提供 几种 处理 方式 条目 哪些 饱和 策略 可以 使用 饱和 策略 就是 线程 池已 情况 任务 处理 策略 默认 以下 几种 默认 threadpoolexecutor abortpolicy 处理程序 遭到 拒绝 抛出 运行 rejectedexecutionexception threadpoolexecutor callerrunspolicy 线程 调用 运行 任务 execute 本身 策略 提供 简单 反馈 控制 机制 能够 减缓 任务 提交 速度 threadpoolexecutor discardpolicy 不能 执行 任务 删除 threadpoolexecutor discardoldestpolicy 如果 执行程序 尚未 关闭 位于 工作 队列 头部 任务 删除 然后 重试 执行程序 如果 再次 失败 重复 过程 当然 可以 自己 实现 处理 策略 继承 rejectedexecutionhandler 接口 即可 接口 只有 一个 方法 void rejectedexecution runnable threadpoolexecutor executor 怎样 优化 线程 配置 如何 合理配置 线程 大小 仅供参考 一般 需要 根据 任务 类型 配置 线程 大小 如果 cpu 密集型 任务 需要 尽量 压榨 cpu 参考值 可以 ncpu 如果 io 密集型 任务 参考值 可以 设置 ncpu 当然 只是 一个 参考值 具体 设置 需要 根据 实际 情况 进行 调整 比如 可以 线程 大小 设置 参考值 观察 任务 运行 情况 系统 负载 资源 利用率 进行 适当 调整 其中 ncpu cpu 核心 可以 使用 runtime getruntime availableprocessors 获取 参考 文章 java 多线程 详解 线程 使用 http www cnblogs com weiguo21 4813678 htmlthreadpoolexecutor 策略 选择 工作 队列 选择 java 线程 http blog csdn net longeremmy article details 8231184 java 并发 blockingqueue http blog csdn net suifeng3051 article details 48807423 本文 地址 http crazyant net 2124 html 转载 注明 来源
2145,快速找到Tomcat中最耗CPU的线程,快速 找到 tomcat 最耗 cpu 线程 找出 tomcat jvm 进程 id work 112542000 jps 290 bootstrap 61213 jps 查看 进程 耗费 cpu 线程 work 112542000 ps mp 290 thread tid time sort k2 head 20 user cpu pri scnt wchan user system tid time work 15.3 03 11 58 work 1.2 19 326 00 15 45 work 0.2 19 872 00 03 44 work 0.1 19 992 00 01 44 work 0.1 19 972 00 01 16 work 0.1 19 870 00 01 19 work 0.1 19 869 00 01 34 work 0.0 19 9993 00 00 00 work 0.0 19 997 00 00 06 work 0.0 19 9969 00 00 00 work 0.0 19 9968 00 00 00 work 0.0 19 996 00 00 34 work 0.0 19 9960 00 00 00 work 0.0 19 995 00 00 00 work 0.0 19 9944 00 00 00 work 0.0 19 994 00 00 31 work 0.0 19 9936 00 00 00 work 0.0 19 9934 00 00 26 work 0.0 19 9933 00 00 21 tid 326 为例 查看 线程 堆栈 首先 十进制 326 转换成 十六进制 可以 在线 转换 http tool oschina net hexconvert 结果 等于 146 使用 jstack 查询 线程 堆栈 work 112542000 jstack 290 grep 0x160 10 timer 2955 daemon prio 10 tid 0x00007f39d3ecd000 nid 0x1602 in object wait 0x00007f38fb273000 java lang thread state timed waiting on object monitor at java lang object wait native method at java util timerthread mainloop timer java 552 locked 0x00000007c2a0fc40 java util taskqueue at java util timerthread run timer java 505 timer 2954 daemon prio 10 tid 0x00007f392481e000 nid 0x15e4 in object wait 0x00007f38fbe7f000 java lang thread state timed waiting on object monitor at java lang object wait native method at java util timerthread mainloop timer java 552 -- timer 2132 daemon prio 10 tid 0x00007f39d367d000 nid 0x1603 in object wait 0x00007f3933f46000 java lang thread state timed waiting on object monitor at java lang object wait native method at java util timerthread mainloop timer java 552 locked 0x00000007b44ef3c8 java util taskqueue at java util timerthread run timer java 505 timer 2131 daemon prio 10 tid 0x00007f39d3b61800 nid 0x15e6 in object wait 0x00007f3934d54000 java lang thread state timed waiting on object monitor at java lang object wait native method at java util timerthread mainloop timer java 552 -- timer 450 daemon prio 10 tid 0x00007f39d0728800 nid 0x160 in object wait 0x00007f39b1312000 java lang thread state timed waiting on object monitor at java lang object wait native method at java util timerthread mainloop timer java 552 locked 0x00000007bddf8788 java util taskqueue at java util timerthread run timer java 505 timer 449 daemon prio 10 tid 0x00007f39ec01f000 nid 0xffc7 in object wait 0x00007f39af5f5000 java lang thread state timed waiting on object monitor at java lang object wait native method at java util timerthread mainloop timer java 552 参考资料 http scau fly iteye com blog 1884606http www blogjava net hankchen archive 2012 05 09 377735 html 本文 地址 http crazyant net 2145 html
2150,Python高级编程技巧,python 高级 编程 技巧 ipython 使用 地址 https ipython org install html 简单 安装 方法 pip install ipython 一些 方便 使用 方法 输入 查看 对象 然后 输入 一个 问号 可以 查看 api 输入 两个 问号 可以 查看 代码 可以 直接 调用 shell 命令 前面 带上 即可 tab 可以 自动 语法 补全 最近 命令 输出 结果 可以 __ ___ 三个 变量 获得 hist 或者 history 查看 历史 命令 timeit 可以 进行 命令 执行 时间 测试 数据结构 算法 列表 生成器 in in for in if out 集合 生成器 列表 生成器 相同 in in for in if in sout in 10 type out 10 set 字典 生成器 in 11 in 12 str for in if out 12 range xrange 使用 in 13 range docstring range stop list of integersrange start stop step list of integersin 14 range 10 out 14 in 15 range 10 out 15 in 16 xrange docstring xrange stop xrange objectxrange start stop step xrange objectin 19 list xrange 10 out 19 in 21 list xrange 10 out 21 range xrange 用法 相同 只是 range 直接 生成 一个 内存 列表 xrange 生成 一个 生产 xrange 效率 更高 节省 内存 filter 用于 过滤 数据 in 22 filter docstring filter function or none sequence list tuple or stringreturn those items of sequence for which function item is true iffunction is none return the items that are true if sequence is tupleor string return the same type else return list type builtin function or methodin 23 filter lambda x% xrange 10 out 23 使用 collections namedtuple 列表 或者 元组 命名 in 24 from collections import namedtuplein 30 point namedtuple point in 31 point 11 22 in 32 .__ dict __ out 32 ordereddict 11 22 in 33 xout 33 11in 34 yout 34 22random 使用 in 35 from random import randintin 36 randint signature randint docstring return random integer in range including both end points file library frameworks python framework versions 2.7 lib python2.7 random pytype instancemethodin 37 randint 10 out 37 统计 序列 元素 频度 top nin 42 from collections import counterin 43 counter in 44 counter aaabbbbccccccddddddeeeeee in 45 cout 45 counter in 46 most common out 46 字典 value 排序 in 47 from random import randintin 48 keys abcdefg in 50 randint 90 100 for in keys in 51 dout 51 90 100 94 97 94 95 91 in 53 items out 53 90 94 100 94 97 91 95 in 54 sorted docstring sorted iterable cmp none key none reverse false -- new sorted listtype builtin function or methodin 55 sorted items key lambda out 55 90 91 94 94 95 97 100 获得 多个 词典 key 交集 in 99 from random import randint samplein 100 dd1 randint 90 100 for in sample abcdefghij in 101 dd2 randint 90 100 for in sample abcdefghij in 102 dd3 randint 90 100 for in sample abcdefghij in 103 dd1out 103 100 97 100 97 92 in 104 dd2out 104 100 90 93 93 90 in 105 dd3out 105 96 93 91 97 90 in 106 mp map dict viewkeys dd1 dd2 dd3 in 107 mpout 107 dict keys dict keys dict keys in 108 reduce lambda mp out 108 怎样 字典 按照 插入 有序 in 122 from collections import ordereddictin 123 ordereddict in 124 1in 125 2in 126 2in 127 2in 128 dout 128 ordereddict 怎样 实现 长度 队列 功能 in 138 from collections import dequein 139 deque docstring deque iterable maxlen -- deque objectbuild an ordered collection with optimized access from its endpoints file library frameworks python framework versions 2.7 lib python2.7 collections pytype typein 141 deque in 142 append in 143 append in 144 append in 145 append in 146 dout 146 deque 迭代 怎样 齐头并进 并行 遍历 多个 集合 in 147 names for in abcdefg in 148 ages for in range 21 28 in 149 scores randint 90 100 for in range in 150 namesout 150 in 151 agesout 151 21 22 23 24 25 26 27 in 152 scoresout 152 93 90 95 97 91 93 92 in 153 in 153 zip docstring zip seq1 seq2 ... seq1 seq2 ... ... return list of tuples where each tuple contains the th elementfrom each of the argument sequences the returned list is truncatedin length to the length of the shortest argument sequence type builtin function or methodin 154 for name age score in zip names ages scores ... print name age score ... 21 93b 22 90c 23 95d 24 97e 25 91f 26 93g 27 92 怎样 串行 遍历 多个 集合 in 158 lista randint 60 70 for in range 10 in 159 list lista out 159 65 60 62 64 63 60 68 67 61 62 in 160 listb randint 90 100 for in range 20 in 161 listbout 161 98 96 97 98 95 95 90 99 92 92 99 92 100 95 100 100 93 91 92 98 in 163 from itertools import chainin 164 chain docstring chain iterables -- chain objectreturn chain object whose next method returns elements from thefirst iterable until it is exhausted then elements from the nextiterable until all of the iterables are exhausted file library frameworks python framework versions 2.7 lib python2.7 lib dynload itertools sotype typein 165 for in chain lista listb ... print ... 98 96 97 98 95 95 90 99 92 92 99 92 100 95 100 100 93 91 92 98 字符串 使用 多种 分隔符 拆分 字符串 in 166 in 167 import rein 169 re sub signature re sub pattern repl string count flags docstring return the string obtained by replacing the leftmostnon overlapping occurrences of the pattern in string by thereplacement repl repl can be either string or callable if string backslash escapes in it are processed if it isa callable it passed the match object and must returna replacement string to be used file library frameworks python framework versions 2.7 lib python2.7 re pytype functionin 171 re sub out 171 如果 进行 字符串 模糊 搜索 部分 替换 in 172 things happend in 2017 08 09 it is sunddy in 175 re sub out 175 things happend in 08 2017 09 it is sunddy 列表 join 如果 数字 元素 怎么办 in 176 print join str for in 33 4.0 ab334.0 文件 如何 使用 临时文件 in 186 from tempfile import temporaryfile namedtemporaryfilein 187 temporaryfile in 188 write aa in 189 close in 191 namedtemporaryfile signature namedtemporaryfile mode bufsize suffix prefix tmp dir none delete true docstring create and return temporary file arguments prefix suffix dir -- as for mkstemp mode -- the mode argument to os fdopen default bufsize -- the buffer size argument to os fdopen default delete -- whether the file is deleted on close default true the file is created as mkstemp would do it returns an object with file like interface the name of the fileis accessible as its name attribute the file will be automaticallydeleted when it is closed unless the delete argument is set to false file library frameworks python framework versions 2.7 lib python2.7 tempfile pytype functionin 192 namedtemporaryfile in 193 write in 194 nameout 194 var folders sc rpg0yq054hb7vdr83ms1rp2w0000gn tmpqionuu 并发 编程 如何 使用 多线程 in cat multi threading pyfrom threading import threaddef func print xts for in range 10 thread target func args start ts append for in ts join print main thread over in run multi threading py0 01 12 83 274 645 1256 2167 3438 5129 729main thread over 一中 直接 函数 执行 第二种 创建 一个 继承 thread in 18 cat multi threading class pyfrom threading import threadclass mythread thread def __ init __ self thread .__ init __ self self def run self print self self self self xts for in range 10 mythread start ts append for in ts join print main thread over in 19 run multi threading class py0 01 12 83 274 64 1256 2167 3438 5129 729main thread over 线程 间通信 生产者 消费者 模式 in cat producer consumer py coding utf8from threading import thread currentthreadfrom queue import queuefrom time import sleepfrom random import randint samplefrom itertools import chainclass producer thread def __ init __ self queue thread .__ init __ self self queue queue def run self for in range sleep randint ele sample abcdefg print producer currentthread name ele self queue put ele class consumer thread def __ init __ self queue thread .__ init __ self self setdaemon true self queue queue def run self while true self queue get sleep print consumer currentthread name queue queue tps for in range tp producer queue tp start tps append tp for in range tc consumer queue tc start for in tps join print main thread over in run producer consumer pyproducer thread 301 cconsumer thread 304 aproducer thread 302 producer thread 303 gproducer thread 301 cconsumer thread 304 consumer thread 305 cproducer thread 303
2160,Hive实现返回MAP的UDF,hive 实现 返回 map udf 如果 只是 返回 string 那么 直接 继承 udf 即可 如果 想要 返回 map list struct 需要 继承 genericudf 如下 代码 示例 url 参数 进行 解析 一个 map 返回 import java util linkedhashmap import java util map import org apache commons lang stringutils import org apache hadoop hive ql exec udfargumentexception import org apache hadoop hive ql metadata hiveexception import org apache hadoop hive ql udf generic genericudf import org apache hadoop hive serde2 objectinspector objectinspector import org apache hadoop hive serde2 objectinspector objectinspectorfactory import org apache hadoop hive serde2 objectinspector primitive primitiveobjectinspectorfactory import org apache hadoop hive serde2 objectinspector primitive stringobjectinspector import org apache hadoop io text public class urlparamstomap extends genericudf private final map text text sortmap new linkedhashmap text text private stringobjectinspector urloi override public objectinspector initialize objectinspector arguments throws udfargumentexception if arguments length throw new udfargumentexception urlparamstomap param must be argu urloi stringobjectinspector arguments return objectinspectorfactory getstandardmapobjectinspector primitiveobjectinspectorfactory writablestringobjectinspector primitiveobjectinspectorfactory writablestringobjectinspector override public object evaluate deferredobject deferredobjects throws hiveexception object urlobj deferredobjects get text url text urloi getprimitivewritableobject urlobj getparamsmap url tostring sortmap return sortmap public map text text getparamsmap string url map text text sortmap map text text defaultmap new linkedhashmap text text if stringutils isblank url return defaultmap string urlsplits url split if null urlsplits urlsplits length return defaultmap string urlparamstr urlsplits if stringutils isblank urlparamstr return defaultmap string paramsplits urlparamstr split if null paramsplits paramsplits length return defaultmap for string kvstr paramsplits if stringutils isblank kvstr continue string kvs kvstr split if null kvs && kvs length if stringutils isnotblank kvs && stringutils isnotblank kvs sortmap put new text kvs new text kvs return sortmap override public string getdisplaystring string strings return map strings 转载 注明 来自 疯狂 蚂蚁 www crazyant net
2167,使用Kmeans对Word2vec的输出做聚类,使用 kmeans word2vec 输出 聚类 word2vec 产出 每个 词语 权重 向量 使用 这个 向量 可以 直接 所有 词语 聚类 以下 代码 word2vec model 作为 输入 进行 kmeans 训练 同时 进行 迭代 计算 选出 wssse 最小 word2vec 结果 作为 kmeans 输入 进行 聚类 进行 多次 迭代 选出 wssse 最小 param spark param model def word2vectokmeans spark sparksession model org apache spark mllib feature word2vecmodel import org apache spark mllib clustering kmeans kmeansmodel import org apache spark mllib linalg vectors val parseddata data map vectors dense split map _. todouble cache val parseddata model getvectors map row vectors dense row ._ map _. todouble toseq val parseddatardd spark sparkcontext parallelize parseddata cache cluster the data into two classes using kmeans val numklist to 20 numklist foreach val numiterations 50 val clusters kmeans train parseddatardd numiterations evaluate clustering by computing within set sum of squared errors val wssse clusters computecost parseddatardd println within set sum of squared errors wssse 这里 使用 mllib 库算 出来 wssse 对应 关系 2737409.97935174433680667 17178079424646796.95862099535621979 8313877946600079.29481542747583517 9018185788568308.93915777589558225 364393443510553948.31711242811548844 816332791912534551.224984812313530924 490348819214525710.927285733915523946 1744262096516516929.8587020234617511611 249029313118510014.9337205022519503478 8160144274620500293.188117236 使用 如下 代码 进行 绘图 coding utf8import matplotlib pyplot as pltx wssse for line in open kmeans wssse txt line line fields line split if len fields continue append int fields wssse append float fields plt xlabel plt ylabel sse plt plot wssse plt show 图片 如下 不是 完美 手肘 不过 拐点 大概 位置 或者 聚类 比较 合适 可以 打印 距离 每个 中心 10 数据 val distdata model getvectors map row val word row ._ val probvector vectors dense row ._ map _. todouble val predictk clusters predict probvector val centervector clusters clustercenters predictk 计算 当前 当前 中心 距离 val dist vectors sqdist probvector centervector predictk word dist toseq val distrdd spark sparkcontext parallelize distdata val groupdata distrdd map row row ._ row ._ row ._ groupbykey 打印 距离 每个 中心 10 个点 groupdata map row row ._ row ._ tolist sortwith ._ ._ take 10 collect foreach row row ._ foreach row2 println row ._ row2 ._ row2 ._ 然而 查看 数据 不能 得到 为啥 这么 分类 聚类 结果 不好 分析 参考 文章 手肘 选出 最佳 kmeans https blog csdn net qq 15738501 article details 79036255k means spark 文档 https spark apache org docs 2.2 mllib clustering html means
2177,使用PaddlePaddle搭建卷积网络做文本数据分类,使用 paddlepaddle 搭建 卷积 网络 文本 数据 分类 paddlepaddle 百度 开源 深度 学习 框架 采用 cafee 类似 layer 搭建 方式 构建 深度 神经网络 当前 试图 发布 fluid 版本 提供 算子 级别 网络 构建 技能 最近 一个 文本 分类 需求 试着 使用 paddle 进行 实验 paddle 使用 体验 文档 不全 特别 简陋 模型库 比较 即使 用法 可以 搜索 代码 查找 用法 github 问题 回复 比较 及时 感觉 paddle 大力推广 发展 如果 paddle 同学 看到 的话 建议 文档 补全 输入 数据 包含 部分 用户 画像 包括 用户 性别 年龄 职业 信息 用户 搜索词 列表 保持 时间 序列 进行 分词 用词 过滤 处理 类别 信息 词语 信息 进行 stringindexer 之后 使用 spark 进行 输入 数据 如下 所示 10673111069 36027 15862 11069 48152 36027 11069 33830 48152 36027 11069 50730 11069 50730 11069 47002110673162151 21292 21666 53679 21292 21666 34384 26807 53680 381 2992 64045 2992 69922 62902 33460 其中 单个 数字 画像 属性 分类 分割 数字 列表 代表 词语 列表 最后 一列 代表 分类 目标 整个 代码 实现 包含 部分 分别 数据 读入 reader 实现 训练 算法 实现 使用 算法 实现 数据 读入 reader 实现 coding utf8 实现 paddle 需要 读取数据 reader 实现 其中 包括 如下 部分 读取 整个 数据 分割 训练 测试 提供 paddle 可以 直接 使用 reader 函数 通过 yield 方式 抛出 数据 import randomdef read datas 读取 所有 数据 return fpath inputdatas numbers txt results datas for line in open fpath line line if not line or len line continue fields line split if len fields continue 属性 提取 gender age lifestage trade educationallevel job words label fields results datas append int float gender int float age int float lifestage int float trade int float educationallevel int float job 注意 这里 paddle 序列 数据 sequence data 其实 元素 list 元素 int for in words split int float label return results datasdef split data train test results datas rand seed test ratio 0.1 进行 训练 数据 测试数据 拆分 这里 使用 随机 方法 进行 param results datas param rand seed param test ratio return rand seed 37 rand random random rand seed train data test data for line in results datas if rand random test ratio train data append line else test data append line return train data test datadef split data train test avg results datas test ratio 0.03 词典 顺序 倒叙 排列 然后 均匀 采样 param results datas param rand seed param test ratio return total len len results datas test datas cnt total len test ratio sample gap int total len 1.0 test datas cnt sort datas sorted results datas cmp lambda int int train data test data for in range len sort datas if sample gap test data append sort datas else train data append sort datas return train data test dataresults datas read datas print 数据 读取 完毕 len results datas train data test data split data train test avg results datas 0.03 print data read over print 训练 集合 数据 大小 len train data print 测试 集合 数据 大小 len test data def train reader paddle 需要 用于 训练 数据 提取 return for line in train data yield linedef test reader paddle 需要 用于 训练 数据 提取 return for line in test data yield lineif __ name __ __ main __ print len train data print len test data 其中 需要 注意 地方 就是 paddle sequence data 含义 就是 一个 list 所以 对于 query 数据 列表 需要 处理 list 元素 list 形式 查看 一下 脚本 运行 结果 数据 读取 完毕 20088data read over 训练 集合 数据 大小 19479 测试 集合 数据 大小 60919479609 62151 21292 21666 53679 21292 21666 34384 26807 53680 381 2992 64045 2992 69922 62902 3346 训练 算法 实现 coding utf8 使用 paddle 实现 深层 网络 import osimport paddle v2 as paddleimport reader paddle sequenceimport sys 字典 输入 数据 模式 比如 通过 fileds feeding gender 可以 得到 gender 数值 feeding gender age lifestage trade educationallevel job words label def convr perceptron 搭配 而成 卷积 网络 return 获取 卷积 conv1 conv2 get words conv 获取 画像 特征 features fc get usr combined features concat 卷积 画像 concat layer paddle layer concat input features fc conv1 conv2 加入 dropout layer 防止 拟合 dropout layer paddle layer dropout input concat layer dropout rate 0.6 加入 最终 分类 使用 softmax 分类 类别 predict paddle layer fc input dropout layer size act paddle activation softmax return predictdef get usr combined features 用户 画像 特征 进入 fc return gender paddle layer data name gender type paddle data type integer value gender emb paddle layer embedding input gender size 16 gender fc paddle layer fc input gender emb size 16 age paddle layer data name age type paddle data type integer value age emb paddle layer embedding input age size 16 age fc paddle layer fc input age emb size 16 lifestage paddle layer data name lifestage type paddle data type integer value 10 lifestage emb paddle layer embedding input lifestage size 16 lifestage fc paddle layer fc input lifestage emb size 16 trade paddle layer data name trade type paddle data type integer value 23 trade emb paddle layer embedding input trade size 16 trade fc paddle layer fc input trade emb size 16 educationallevel paddle layer data name educationallevel type paddle data type integer value educationallevel emb paddle layer embedding input educationallevel size 16 educationallevel fc paddle layer fc input educationallevel emb size 16 job paddle layer data name job type paddle data type integer value job emb paddle layer embedding input job size 16 job fc paddle layer fc input job emb size 16 usr combined features paddle layer fc input gender fc age fc lifestage fc trade fc educationallevel fc job fc size 200 act paddle activation tanh return usr combined featuresdef get words conv words 输入 进入 conv return 词表 大小 这个 数字 来自 分词 进入 list size word dict len 73614 emb dim hid dim 256 注意 这里 integer value sequence 意思 这种 形式 words paddle layer data name words type paddle data type integer value sequence word dict len words emb paddle layer embedding input words size emb dim 搭建 卷积 网络 可以 多个 卷积 conv1 paddle networks sequence conv pool input words emb context len hidden size hid dim conv2 paddle networks sequence conv pool input words emb context len hidden size hid dim return conv1 conv2def train 执行 训练 初始化 paddle paddle init use gpu false trainer count network config paddle layer data name label type paddle data type integer value 获取 网络 预测 结果 predict convr perceptron 设定 cost 分类 误差 cost paddle layer classification cost input predict label 随机 初始化 参数 parameters paddle parameters create cost 创建 优化 主要 设定 l2 正则 学习 adam optimizer paddle optimizer adam learning rate 2e regularization paddle optimizer l2regularization rate 0.9 model average paddle optimizer modelaverage average window 0.5 max average window 10000 使用 sgd 训练器 trainer paddle trainer sgd cost cost parameters parameters update equation adam optimizer 报错 拓扑 结构 这个 拓扑 结构 来回 用于 infer inference topology paddle topology topology layers predict with open inference topology conv pkl wb as inference topology serialize for inference 保存 训练 误差 测试 误差 用于 将来 曲线 绘制 fout pass err open train pass error conv txt fout pass err write passid ttest data accurcy ttrain data accurcy 保存 中间 信息 def event handler event if isinstance event paddle event enditeration if event batch id 100 print npass batch cost event pass id event batch id event cost event metrics else sys stdout write sys stdout flush if isinstance event paddle event endpass with open params pass conv _% tar event pass id as trainer save parameter to tar result test trainer test reader paddle batch paddle reader shuffle reader paddle sequence test reader buf size 50000 batch size 100 feeding feeding print ntest with pass event pass id result test metrics classification error evaluator result train trainer test reader paddle batch paddle reader shuffle reader paddle sequence train reader buf size 50000 batch size 100 feeding feeding print ntrain with pass event pass id result train metrics classification error evaluator fout pass err write t% t% str event pass id str float result test metrics classification error evaluator str float result train metrics classification error evaluator fout pass err flush 执行 训练 trainer train reader paddle batch paddle reader shuffle reader paddle sequence train reader buf size 50000 batch size 100 feeding feeding event handler event handler num passes 300 fout pass err flush fout pass err close if __ name __ __ main __ train 训练 当前目录 生成 如下 文件 rw -- -- baidu staff 2.4 may 22 16 06 params pass conv tar rw -- -- baidu staff 2.4 may 22 16 06 params pass conv tar rw -- -- baidu staff 2.4 may 22 16 07 params pass conv tar rw -- -- baidu staff 6.0 may 17 16 14 inference topology pkl 同时 训练 过程 打印 过程 信息 i0523 15 53 02.666565 2921214848 util cpp 166 commandline -- use gpu false -- trainer count i0523 15 53 02.690153 2921214848 gradientmachine cpp 94 initing parameters .. i0523 15 53 02.708933 2921214848 gradientmachine cpp 101 init parameters done pass batch cost 1.769033 classification error evaluator 0.7699999809265137 ................................................................................................... pass batch 100 cost 1.773714 classification error evaluator 0.8100000023841858 .............................................................................................. test with pass 0.750410497189 train with pass 0.740233063698 pass batch cost 1.779777 classification error evaluator 0.75 ................................................................................................... pass batch 100 cost 1.677371 classification error evaluator 0.7200000286102295 .............................................................................................. test with pass 0.610837459564 train with pass 0.5671235919 试了试 gpu cpu 区别 真的 发现 gpu 多倍 速度 深度 学习 建立 gpu 技术 果然 不差 同时 可以 试着 打印 训练 错误 准确率 曲线 可以 看到 12 时候 打到 局部 最优 之后 出现 拟合 整体 效果 最好 88% 准确率 尝试 多次 调整 dropout l2 正则 参数 依然 这个 准确率 因此 停止 调整 有待 收集 数据 可以 提升 准确率 利用 模型 预测 既然 已经 训练 完毕 那么 怎么 使用 代码 coding utf8 使用 模型 预测 import osimport paddle v2 as paddleimport reader paddle sequenceimport sys 需要 训练 时候 feeding 一样 feeding gender age lifestage trade educationallevel job words label def test paddle init use gpu false trainer count 读取 最优 那个 参数 文件 tarfn params pass conv tar 读取 模型 拓扑 文件 topology filepath inference topology conv pkl 加载 参数 拓扑 一个 infer 对象 with open tarfn as param open topology filepath as topo params paddle parameters parameters from tar param inferer paddle inference inference parameters params fileobj topo 使用 测试 集合 一条 数据 进行 infer 说明 对于 预测 输入 需要 处理 训练 测试 一样 格式 可以 reader reader paddle sequence test reader for in reader print res inferer infer input feeding feeding print res breakif __ name __ __ main __ 两个 选项 test 打印 一下 运行 结果 i0523 16 00 56.536753 2921214848 util cpp 166 commandline -- use gpu false -- trainer count 11069 36027 15862 11069 48152 36027 11069 33830 48152 36027 11069 50730 11069 50730 11069 47002 0.25260347 0.15734845 0.1648475 0.17209302 0.14046918 0.11263847 可以 看到 最后 一行 打印 预测 分类 概率 总结 以上 讲述 使用 paddle 搭建 神经网络 整个 流程 包括 数据 读取 网络 搭建 训练 模型 应用 方面 对于 已经 训练 模型 可以 python flask 或者 django 进行 加载 对外 提供 远程 调用 其实 一通百通 一个 网络 搭建 实现 之后 paddle 理解 自己 同时 尝试 连接 网络 lstm 网络 卷积 网络 非常 类似 只要 替换 卷积 部分 即可 对于 paddle 虽然 当前 完善 毕竟 国内 深度 学习 框架 同时 能够 实现 业务 目标 一点 还是 继续 支持 附带 paddle 链接 最新 文档 http www paddlepaddle org docs develop documentation zh getstarted index cn html 开放 模型库 https github com paddlepaddle models 教程 https github com paddlepaddle book 中文 book http www paddlepaddle org docs develop book 04 word2vec index cn html 本文 链接 http crazyant net 2177 html 转载 注明 来源
2194,读书笔记 - 数据驱动从方法到实践,读书笔记 数据 驱动 方法 实践 数据源 event 模型 重要性 数据源 重要 若想 数据 平台 做好 数据源 非常 重要 如果 我们 源头 本身 结构化 构化 下游 需要 跟着 源头 数据 解析 效率 很多 用户 行为 事件 模型 有效 规范 结构化 用户 行为 之后 许多 数据分析 变得 容易 每个 event 用户 发生 行为 一个 快照 能够 尽可能 还原 现场 数据 概念 数据 强调 宏观 一味 追求 数据量 强调 全量 强调 多种 数据源 包括 前端 端的 数据 以及 日志 数据库 数据 数据 时代 前沿 数据 采集 手段 获取 全量 数据 成为 可能 强调 多维度 数据 包括 事件 商品 各种 维度 属性 字段 比如 现在 所在 公司 客户 不同 身高 群体 平均 消费额 什么 差异 可能 回答 出来 因为 没有 记录 身高 这一 维度 数据 强调 实时 数据 采集 实时 数据分析 价值 我们 对大 数据 概念 较为 清晰 认识 它们 主要 强调 数据 获取 规模 传统 数据 时代 差异 这是 企业 进行 数据 采集 四字 法则 法则 企业 数据 采集 提出 一定 要求 数据 本质 运用 数据 首先 应该 解决 思维 问题 数据 思维 企业 数据 运营 管理 过程 运用 数据 思维 方式 随着 各种 前沿技术 发展 我们 思维 方式 已经 直接 决策 方式 脑袋 因果 驱动 转化 数据 驱动 直接 数据 答案 就是 数据 思维 我们 获取 数据 全面 消除 不确定性 数据 本质 消除 不确定性 第一次 接触 这个 观点 吴军 硅谷 之谜 一书中 当时 觉得 醍醐灌顶 一直 思考 究竟 什么 数据 吴军 这句 直中 要害 之后 时间 一书时 尝试 搜索 信息论 不确定性 关系 发现 克劳德 香农 claudeshannon 这么 一句 信息 用来 消除 不确定性 东西 果然 信息论 鼻祖 一句 解释 信息 精髓 数据 驱动 理念 现状 数据 驱动 价值 分为 两点 其一 驱动 决策 通过 数据 帮助 拍板 包括 产品 改进 运营 优化 营销 分析 商业 决策 我们 数据 判断 哪些 渠道 转化 效果 更好 哪些 功能 样式 更加 用户 欢迎 就是 我们 常说 bi businessintelligence 商业智能 通过 数据 支持 决策 其二 驱动 产品 智能 所谓 智能 归结为 这么 一种 模式 我们 一定 数据 基础 然后 上面 一个 算法 模型 得到 数据 结果 反馈 产品 这样 产品 本身 具有 学习 能力 可以 不断 迭代 比如 个性化 推荐 通过 采集 许多 用户 行为 数据 这个 基础 训练 用户 兴趣 模型 然后 用户 推荐 信息 用户 使用 数据 反馈 模型 精准 广告 就是 类似 模式 智能 一种 学习 能力 产品 智能 就是 现在 比较 ai artificialintelligence 人工智能 概念 这两点 消除 决策 不确定性 只是 前者 人来 执行 决策 后者 机器 执行 决策 事实上 认为 数据 驱动 决策 只能 发挥 数据 20% 价值 甚至 数据 驱动 产品 智能 将会 发挥 数据 更大 价值 非常 看好 ai 发展趋势 现实 理想 数据 驱动 典型 需求 驱动 根据 需求 数据 业务 提出 数据 需求 工程师 满足 需求 加上 排队 等待 整个 效率 非常低 完成 一个 需求 几天 甚至 几周 时间 那么 理想 数据 驱动 应该 怎样 数据源 整好 这个 基础 提供 强大 分析 平台 业务 需求 提出 能够 自助式 self service 完成 数据分析 需求 串行 变成 并行 完成 需求 几天 时间 缩短 几分钟 甚至 几秒钟 这才 理想 数据 驱动 数据 驱动 流大 数据 时代 到来 条件 数据 采集 能力 增强 数据 采集 能力 一个 数据 团队 必须 具备 能力 根据 提及 数据 采集 能力 应该 全域 数据 采集 能力 包括 pc 互联网 移动 互联网 iot 线下 数据 各个方面 数据处理 能力 增强 数据处理 能力 数据 采集 存储 检索 加工 变换 传输 能力 数据处理 实现 数据分析 挖掘 数据 价值 前提 衡量 数据 发展 状态 重要 指标 摩尔定律 及大 数据分析 计算技术 发展 赋予 企业 很强 数据处理 能力 数据 意识 提升 互联网 作为 新兴 行业 高速 发展 初期 引发 诸多 流量 红利 如今 红利 已经 消失 殆尽 企业 认识 必须 通过 数据分析 了解 用户 需求 洞察 用户 心理 从而 提升 用户 体验 最终 构建 自身 核心 竞争力 企业 发展 进入 精细化 运营 阶段 建立 起以 用户 中心 设计 数据 驱动 产品 管理 意识 年前 大家 讨论 数据 重不 重要 问题 现在 问题 焦点 已经 变成 如何 数据 发挥 更大 价值 数据分析 金字塔 数据 采集 埋点 数据分析 整个 体系 数据 采集 恰恰 重要 数据源 重要 百度 做大 数据 最大 心得 数据源 数据 建模 恰恰 冰山 下面 部分 各种 分析方法 只是 冰山一角 我们 建设 数据源 做好 数据 根基 数据 采集 埋点 一词 非常 形象 创业 之后 知道 这个 因为 百度 数据 采集 基于 日志 业务 逻辑 嵌入 代码 正常 业务 逻辑 嵌入 数据 采集 代码 过程 就是 埋点 过程 对于 用户 行为 分析 来说 不但 采集 客户端 数据 还要 采集 服务端 日志 业务 数据库 以及 第三方 服务器 数据 全面 覆盖 科学 数据 采集 埋点 方式 可视化 全埋点 无埋点 使用 这种 方案 必须 产品 嵌入 sdk 等于 一个 统一 埋点 因此 无埋点 叫法 实际上 全埋点 代名词 优势 可视化 展示 宏观 指标 满足 基本 数据分析 需求 通过 展现 pv uv 网站 app 分析 宏观 指标 告诉 运营 人员 每个 控件 点击 多少 哪些 控件 值得 更进一步 分析 助于 企业 了解 用户 行为 进一步 数据分析 指明方向 技术 门槛 使用 简单 需要 嵌入 sdk 极大 程度 避免 需求 变更 埋点 错误 原因 导致 重新 埋点 复杂 工作 用户 友好 性强 可以 直接 应用 手指 或者 鼠标 进行 操作 自动 服务器发送 数据 避免 手工 埋点 失误 劣势 无埋点 只能 采集 用户 交互 数据 适合 标准化 采集 自定义 属性 采集 需要 代码 埋点 辅助 无埋点 兼容性 有限 无埋点 前端 数据 采集 方式 之一 因此 具有 前端 埋点 天然 缺陷 数据 采集 全面 传输 时效性 较差 数据 可靠性 无法 保障 问题 无埋点 技术 原理 依赖 网站 或者 app 后端 技术开发 严谨性 规范性 网络 状态 网络 口径 因素 代码 埋点 代码 埋点 分为 前端 代码 埋点 代码 埋点 前端 代码 埋点 类似 全埋点 前端 嵌入 sdk 方式 不同 对于 一个 关键 行为 我们 需要 调用 sdk 代码 必要 事件 属性 字段 写入 代码 然后 发送到 后台 数据 服务器 代码 埋点 相关 事件 属性 通过 模块 调用 sdk 方式 发送到 后台 服务器 这种 方式 相比 全埋点 来说 适合 精细化 分析 场景 我们 可以 各种 细粒度 数据 采集 下来 方便 后续 深度 分析 需求 其中 代码 埋点 相比 前端 代码 埋点 具有 数据 可靠性 并且 可以 实现 一处 埋点 不用 各个 app web 进行 埋点 操作 全埋点 vs 代码 埋点 如果 仅仅 为了 看看 宏观 数据 没有 精细化 分析 需求 并且 客户端 分析 这种 时候 全埋点 一种 比较 省事 选择 阅读 词典 工具性 app 企业 客户 发展 初期 产品 运营 阶段 产品 功能 较为 基础 明确 业务 数据 交易 数据 通过 uv pv 点击 基本 指标 分析 即可 满足 需求 如果 全埋点 采集 渠道 来源 信息 可以 进行 不同 渠道 来源 对比 广告 企业 通过 全埋点 方式 采集 数据 了解 用户 渠道 来源 判断 不同 渠道 不同 推广 方式 投放 效果 一旦 企业 复杂 分析 需求 必须 进行 代码 埋点 否则 数据 无法 进行 灵活 前端 埋点 vs 后端 埋点 产品 运营 初期 产品 功能 比较简单 可以 采用 前端 埋点 或者 有些 行为 没有 进行 交互 操作 比如 有些 游戏 离线 运行 比较 适合 前端 埋点 为了 保证 核心 数据 准确性 我们 推荐 后端 埋点 当前 后端 可以 实现 数据 采集 优先 考虑 代码 埋点 尤其 行业 中有 特殊 业务 需求 数据 更是 强烈建议 通过 代码 埋点 方式 采集 总的来说 代码 埋点 或者 代码 埋点 全埋点 方案 适合 深度 数据分析 需求 企业 需要 具有 完善 数据管理 埋点 管理 数据管理 精细化 管理 每个 行为 事件 属性 类型定义 埋点 管理 跟踪 每个 埋点 数据量 校验 通过 出现异常 及时发现 系统 还应 提供 debug 模式 精确 跟踪 一条 数据 是不是 预期 计划 进行 处理 实时 导入 监测 功能 可以 通过 用户 id 及其 属性 筛选 实时 采集 数据 精确定位 问题 总之 数据 采集 黑盒 白盒 数据管理 界面 多维 数据模型 数据模型 就是 现实 世界 抽象化 数据 展示 数据模型 满足 抽象 同时 简单 数据 立方体 多维 数据模型 一个 通俗 叫法 主要 维度 指标 部分 组成 比如 地域 操作系统 属于 维度 销售额 注册 用户数 单量 指标 我们 可以 通过 维度 组合 查看 组合 指标 情况 数据 分层 金字塔 模型 决定 构建 udw userdatawarehouse 能够 用户 百度 所有 产品线 行为 统一 一起 这个 地基 剩下 数据 使用 问题 变得 容易 多维 事件 模型 多维 事件 模型 分成 event 实体 user 实体 event 实体 event 描述 一个 用户 某个 时间 某个 地方 某种 方式 完成 某个 具体 事情 一个 完整 event 包含 如下 如下 几个 关键因素 who 参与 这个 事件 用户 when 这个 事件 发生 实际 时间 where 事件 发生 地点 how 用户 从事 这个 事件 方式 what 描述 用户 这个 事件 具体内容 数据 接口 首先 使用 event 这个 事件 名称 用户 内容 进行 初步 分类 event 划分 设计 一定 指导 原则 我们 后文 详细描述 除了 event 这个 至关重要 以外 我们 没有 设置 预置 而是 使用者 根据 每个 产品 以及 每个 事件 实际 情况 分析 需求 举个 例子 记录 事件 扩展 user 实体 每个 user 实体 对应 一个 真实 用户 distinct id 进行 标识 描述 用户 长期 属性 profile 并且 通过 distinct id 这个 用户 从事 行为 event 进行 关联 收集 哪些 作为 userprofile 完全 取决于 产品 形态 分析 需求 简单 来说 就是 能够 拿到 那些 用户 属性 哪些 对于 分析 帮助 作为 profile 进行 收集 事件 分析方法 行为 事件 分析 行为 事件 分析法 用来 研究 行为 事件 发生 企业 组织 价值 影响 以及 影响 程度 企业 借此 追踪 记录 用户 行为 业务 过程 用户注册 浏览 产品 详情页 成功 投资 提现 通过 研究 事件 发生 关联 所有 因素 挖掘 用户 行为 事件 背后 原因 交互 影响 行为 事件 分析 涉及 事件 维度 指标 三个 概念 分析 过程 一般 期望 数据 实时 采集 能够 实时 分析 事件 维度 指标 可以 灵活 自定义 行为 事件 分析 上节 内容 讲到 event 实体 可视化 展现 其中 user 实体 属性 通过 userid 贯穿 event 实体 这样 分析 可以 用户 属性 作为 分组 筛选 条件 行为 事件 分析法 具有 强大 筛选 分组 聚合 能力 逻辑 清晰 使用 简单 广泛应用 行为 事件 分析法 一般 经过 事件 定义 选择 多维度 分析 解释 结论 环节 事件 定义 选择 事件 描述 一个 用户 某个 时间 某个 地方 某种 方式 完成 某个 具体 事情 who when where what how 定义 一个 事件 关键因素 多维度 分析 高效 行为 事件 分析 支持 任意 分析 精细化 条件 筛选 行为 事件 分析 合理配置 追踪 事件 属性 可以 激发 事件 分析 强大 潜能 企业 回答 关于 变化趋势 维度 对比 各种 细分 问题 同时 可以 通过 添加 筛选 条件 精细化 查看 符合 某些 具体条件 事件 数据 解释 结论 环节 分析 结果 进行 合理 理论 解释 判断 数据分析 结果 是否 预期 相符 判断 产品 细节 优化 是否 提升 触发 用户数 如果 相悖 应该 针对 不足 部分 进行 分析 实证 漏斗 分析 现代 营销 观念 认为 营销 管理 重在 过程 控制 过程 控制 结果 漏斗 分析模型 企业 实现 精细化 运营 重要 分析模型 精细化 程度 影响 营销 管理 成败 粗陋 漏斗 分析模型 因为 过程 管理 透明 造成 结果 失控 漏斗 分析 一套 流程 分析 能够 科学 反映 用户 行为 状态 以及 起点 终点 阶段 用户 转化率 情况 重要 分析模型 对于 业务流程 相对 规范 周期 较长 环节 流程 分析 漏斗 分析 能够 直观 发现 说明 问题所在 值得 强调 漏斗 分析模型 并非 只是 简单 转化率 呈现 科学 漏斗 分析模型 能够 实现 以下 价值 企业 可以 监控 用户 各个 层级 转化 情况 聚焦 用户 选购 流程 有效 转化 路径 同时 找到 优化 短板 提升 用户 体验 降低 流失 运营 人员 重要 目标 通过 不同 层级 转化 情况 迅速 定位 流失 环节 针对性 持续 分析 找到 优化 提升 用户 留存 多维度 切分 呈现 用户 转化 情况 瓶颈 无处 遁形 科学 漏斗 分析 能够 展现 转化率 趋势 曲线 帮助 企业 精细 捕捉 用户 行为 变化 提升 转化 分析 精度 效率 选购 流程 异常 定位 策略 调整 效果 验证 科学 指导意义 不同 属性 用户 群体 漏斗 比较 差异 角度 窥视 优化 思路 漏斗 对比 分析 科学 漏斗 分析 重要一环 运营 人员 可以 通过观察 不同 属性 用户 群体 如新 注册 用户 老客户 不同 渠道 来源 客户 环节 转化率 流程 步骤 转化率 差异 对比 了解 转化率 最高 用户 群体 针对 转化率 异常 环节 进行 调整 留存 分析 随着 市场 饱和度 上升 绝大多数 企业 亟待解决 如何 增加 客户 黏性 延长 一个 客户 生命周期 价值 问题 因此 留存 分析 这一 分析模型 备受 青睐 留存 分析 一种 用来 分析 用户 参与 情况 活跃 程度 分析模型 考察 进行 初始 行为 用户 多少 人会 进行 后续 行为 这是 用来 衡量 产品 用户 价值 高低 重要 方法 留存 分析模型 特点 价值 留存 判断 产品 价值 重要 标准 揭示 产品 保留 用户 能力 留存 反映 一种 转化率 初期 稳定 用户 转化 活跃 用户 稳定 用户 忠诚 用户 过程 随着 统计数字 变化 运营 人员 看到 不同 时期 用户 变化 情况 从而 判断 产品 客户 吸引力 宏观 把握 用户 生命周期 长度 定位 产品 改善 通过 留存 分析 我们 可以 查看 功能 上线 之后 不同 群体 留存 是否 带来 不同 效果 判断 产品 功能 活动 是否 提高 用户 留存 结合 版本 更新 市场推广 诸多 因素 去除 使用 频率 功能 实现 快速 迭代 验证 制定 相应 策略 分布 分析 分布 分析 用户 特定 指标 频次 总额 归类 展现 可以 展现出 单用户 产品 依赖 程度 分析 客户 不同 地区 不同 时段 购买 不同 类型 产品数量 购买 频次 帮助 运营 人员 了解 当前 客户 状态 以及 客户 运转 情况 科学 分布 分析模型 支持 时间 次数 事件 指标 进行 用户 条件 筛选 数据 统计 不同 角色 人员 统计 用户 一天 多少 自然 时间段 小时 进行 某项 操作 进行 某项 操作 次数 进行 事件 指标 分布 分析 价值 挖掘 用户 分布 规律 优化 产品 策略 同一 指标 有关 数据 统计 分析 帮助 企业 从中 挖掘 用户 访问 规律 企业 可以 规律 实际 产品 策略 相结合 进一步 修正 重新制定 产品 策略 运营 持续 产品 生命力 增加 客户 回访 彻底改变 之前 依靠 随机抽样 回访 调查 方式 电话 回访 分布 分析 多角度 分析 辅助 企业 判断 单用户 产品 依赖 程度 以及 产品 用户 价值 黏性 快速 识别 核心 用户 群体 资源配置 有的放矢 核心 用户 群体 企业 价值 贡献 最大 用户 群体 企业 最大 利润 来源 不同 用户 群体 产品 需求 一样 用户 群体 进行 差异性 辨识 可以 了解 用户 群体 产品 依赖 动力 分布 分析 通过 不同 维度 筛选 核心 用户 群体 此基础 更好 配置 优质 资源 最小 成本 实现 企业 利润 最大化 点击 分析 点击 图是 点击 分析方法 效果 呈现 点击 分析 具有 分析 过程 高效 灵活 易用 效果 直观 特点 点击 分析 采用 可视化 设计 思想 架构 简洁 直观 操作 方式 呈现 访客 热衷 区域 帮助 运营 人员 管理者 评估 网页 设计 科学性 点击 分析 价值 精准 评估 用户 网站 交互 背后 深层 关系 实现 网页 跳转 点击 分析 抽丝剥茧 完成 网页 深层次 点击 分析 其他 分析模型 配合 全面 视角 探索 数据 价值 能够 深度 感知 用户 体验 实现 科学决策 用户 路径 用户 访问 app 网站 如同 参观 画展 一位 观众 根据 自身 喜好 形成 特有 参观 顺序 观众 沿着 最优 访问 路径 前进 策展者 需要 结合 观众 需求 进行 布局调整 一定 程度 用户 路径分析 布局调整 提供 科学 指导 用户 行为 路径分析 顾名思义 用户 app 网站 访问 行为 路径 为了 衡量 网站 优化 效果 营销 推广 效果 以及 了解 用户 行为 偏好 我们 时常 访问 路径 转换 数据 进行 分析 电商 为例 买家 登录 支付 成功 经过 首页 浏览 搜索 商品 加入 购物车 提交 订单 支付 订单 过程 用户 真实 选购 过程 一个 交缠 反复 过程 例如 提交 订单 用户 可能 返回 首页 继续 搜索 商品 可能 取消 订单 一个 路径 背后 不同 动机 其他 分析模型 配合 进行 深入分析 找到 快速 用户 动机 从而 引领 用户 走向 最优 路径 或者 期望 路径 用户 路径分析 价值 用户 路径 分析 结果 通常 以桑 基图 形式 展现 目标 事件 起点 终点 查看 后续 前置 路径 可以 详细 查看 某个 节点 事件 流向 总的来说 科学 用户 路径分析 能够 带来 以下 价值 可视化 用户 全面 了解 用户 整体 行为 路径 通过 用户 路径分析 可以 一个 事件 上下游 进行 可视化 展示 用户 即可 查看 当前 节点 事件 相关 信息 包括 事件 分组 属性 后续 事件 统计 流失 后续 事件 列表 运营 人员 通过 用户 整体 行为 路径 找到 不同 行为 之间 关系 挖掘 规律 找到 瓶颈 定位 影响 转化 主次 因素 产品设计 优化 改进 有的放矢 路径分析 产品设计 优化 改进 很大 帮助 了解 用户 登录 购买 整体 行为 路径 路径 根据 用户 路径 各个环节 转化率 发现 用户 行为 规律 偏好 可以 用于 监测 定位 用户 路径 走向 存在 问题 判断 影响 转化 主要 因素 次要 因素 发现 某些 冷僻 功能 用户 因为 群体 特征 不同 行为 很大 差别 因此 可以 根据 历史数据 用户 进行 划分 进而 再次 观察 群体 具体 行为 就是 用户 分群 原理 用户 分群 定义 用户 分群 用户 信息 标签 通过 用户 历史 行为 路径 行为 特征 偏好 属性 我们 具有 相同 属性 用户 划分 一个 群体 进行 后续 分析 用户 分析 分类 价值 用户 通常 分为 普通 分群 预测 普通 根据 用户 属性 特征 行为 特征 用户 群体 进行 分类 预测 根据 用户 以往 行为 属性 特征 运用 机器 学习 算法 预测 他们 将来 发生 某些 事件 概率 用户 具有 以下 价值 帮助 企业 打破 数据 孤岛 真实 了解 用户 用户 画像 用户 分群 前提 特定 属性 用户 群体 进行 持续 深入 用户 行为 洞察 用户 群体 画像 逐渐 清晰 这些 有助于 企业 了解 某个 指标 数字 背后 用户 群体 具备 哪些 特征 他们 行为 特点 哪些 偏好 什么 潜在 需求 行为 喜好 什么 这是 后续 用户 群体 针对性 分析 前提 定位 营销 目标群体 帮助 企业 实现 精准 高效 营销 清晰 勾勒 群体 特定 研究 范围 行为 全貌 定义 目标 人群 运营 人员 信息 推送 前提 运营 人员 根据 需求 特定 目标 人群 完成 精准 信息 推送 工作 召回 流失 用户 刺激 用户 复购 完成 特定 人群 精准 信息 推送 工作 之后 进一步 分析 实时 全方位 查看 营销 效果 帮助 企业 用户 实现 精准 高效 信息 互通 属性 分析属性 分析 根据 用户 自身 属性 用户 进行 分类 统计分析 比如 查看 用户数量 注册 时间 变化趋势 查看 用户 省份 分布 情况 用户 属性 涉及 用户 信息 姓名 年龄 家庭 婚姻状况 性别 最高 教育 程度 自然 信息 产品 相关 属性 用户 常驻 省市 用户 等级 用户 首次 访问 渠道 来源 属性 分析模型 价值 属性 分析 主要 价值 体现 丰富 用户 画像 维度 用户 行为 洞察 粒度 细致 科学 属性 分析方法 对于 所有 类型 属性 可以 重数 作为 分析 指标 数值 类型 属性 可以 总和 均值 最大值 最小值 作为 分析 指标 添加 多个 维度 实际上 以上 分析模型 应该 一个 综合体 它们 之间 存在 无法 割裂 关系 分析模型 实现 科学 互动 配合 能够 科学 揭示 用户 个人 群体行为 潜在 规律 据此 做出 理论 推导 不断 工作 实践 优化 商业 决策 产品 智能 指标体系 构建 对于 不同 产品 关注 指标 应该 这么 千篇一律 还是 根据 产品 特性 灵活 定义 这里 要说 我们 所说 指标 并非 企业 管理 环境 绩效 指标 而是 业务 运营 相关 各种 指标 指标体系 分散 各个 业务流程 不同 部门 计算 分析 企业 如何 开展 管理 规划 指标体系 已成 企业 掌控 数据 关键 第一 关键 指标 法在 企业 发展 每个 阶段 一个 当前 阶段 高于一切 需要 集中 全部 精力 注意 一个 数据 这个 数据 就是 第一 关键 指标 当然 随着 业务 发展 这个 指标 发生变化 第一 关键 指标 外延 指标 比如 一个 成熟 电商 平台 第一 关键 指标 一定 销售额 销售额 能够 衍生 访问量 转化率 单价 指标 企业 运营 人员 产品 经理 需要 通过 衍生 指标 优化 促进 第一 关键 指标 增长 因此 企业 应该 基于 第一 关键 指标 衍生 指标 衡量 发展 情况 企业 员工 明确 当前 阶段 核心 目标 以此 制定 规划 清晰 任务 第一 关键 指标 绩效 管理 kpi 理念 比较 接近 就是 寻找 当前 阶段 整个 公司 需要 关注 指标 以此 集中 火力 目标 前进 海盗 指标 2007 500startups 创业 孵化器 创始 合伙人 戴夫 麦克 卢尔 davemcclure 针对 创业 公司 应该 关注 指标 提出 一套 模型 piratemetrics 海盗 指标 创业 公司 需要 关注 指标 归结为 方面 分别 acquisition 获取 activation 激活 retention 留存 revenue 营收 referral 引荐 简称 aarrr 第一 关键 指标 定位 企业 当前 发展 阶段 重要 问题 关注 企业 层面 运转 健康 有利于 公司 形成 合力 聚焦 同一 目标 海盗 指标 法为 企业 提供 数据分析 基础 罗盘 以及 指导 创业 企业 发展 探索 方向 数据 驱动 商业 决策 数据 验证 实践 科学依据 数据 驱动 先进 生产力 数据 驱动 落地 企业 最为 有效 方式 是从 推动 管理者 推动 前提 自身 具备 数据 意识 能够 认识 数据 意义 价值 意识 数据管理 不善 可能 带来 危害 下属 费劲 整理 一批 数据报表 领导 对此 无视 坚持 脑袋 决定 这样 企业 数据 发展 陷入绝境 数据 驱动 商业 决策 实现 以下 三大 价值 透过 现象 本质 提升 企业 决策 准确性 科学性 数据 时代 改变 曾经 依靠 企业 内部 业务 数据 优化 决策 情况 通过 洞察 数据 背后 价值 赋予 企业 更加 全面 准确 商业 洞察力 大幅 提升 企业 商业 决策 水平 降低 企业 经营 风险 数据 说话 降低 企业 沟通 成本 数据 说话 终止 企业 团队 之间 因某 结果 无休止 争论 局面 降低 团队 沟通 成本 缩短 企业 研发 时间 大家 经常 所说 争论 如果 两个 没有 数据 那么 嗓门 通常 获胜 如果 一个 人有 数据 一个 没有 那么 数据 通常 获胜 如果 两个 数据 需要 争论 赋予 企业 全面 准确 商业 洞察力 实现 智能 商业 预测 除了 提升 企业 商业 决策 水平 之外 数据 驱动 商业 决策 赋予 企业 商业 预测 能力 数据分析 一架 望远镜 企业 通过 望远镜 能够 看到 未来 可能 发生 情况 智能 商业 预测 帮助 企业 率先 进一步 挖掘 市场 实现 产品 服务 创新 诡谲多变 市场 环境 取得 先发 优势 数据 驱动 产品 智能 所谓 智能 归结为 这么 一种 模式 首先 我们 数据 然后 数据 套用 某种 算法 模型 最后 结果 数据 反馈 产品 这样 产品 具备 一种 学习 能力 就是 产品 智能 数据 驱动 决策 分析 结果 用于 决策 使用 数据 驱动 产品 智能 更加 强调 数据 处理结果 机器 并且 这种 数据分析 算法 往往 更加 复杂 本身 具有 可以 自我 迭代 特点 一个 典型 数据 平台 架构 实时 订阅 举个 例子 一个 用户 产品 首页 搜索 一个 关键词 鲜花 立即 一条 代表 行为 数据 发送到 接收 后续 一个 针对 用户 近期 搜索 行为 提供 推荐 服务 模块 可以 秒钟 拿到 这个 行为 数据 并且 用户 访问 一个 页面 时候 及时 提供 鲜花 相关 内容 推荐 人工智能 领域 先驱者 arthursamuel 1959 创造 机器 学习 这个 概念 这样 定义 fieldofstudythatgivescomputerstheabilitytolearnwithoutbeingexplicitlyprogrammed 简单 来说 机器 学习 研究 通过 显式 编程 赋予 计算机 学习 能力 一个 领域 这个 概念 可以 看出 以往 普通 计算机程序 一个 最大 不同 就是 机器 学习 不是 一个 完全 设计 程序 而是 一种 特殊 能够 自我 提升 算法 计算机 自己 数据 学习 由此 具备 解决问题 能力 回归 算法 很多 领域 得到 普遍 应用 金融 方面 可以 股市行情 分析 预测 产品 运营 方面 可以 产品 流量 预估 生物 领域 可以 蛋白 结合点 预测 交通 领域 可以 道路 流量 预警 分类 算法 各个领域 得到 广泛 应用 金融 方面 可以 识别 作弊 用户 交通 领域 车牌 识别 一种 分类 应用 产品 运营 领域 可以 用作 流失 客户 预警 提前 找到 那些 可能 流失 客户 聚类 算法 同样 很多 不同 领域 得到 广泛应用 例如 产品 运营 我们 可以 聚类 算法 自动 聚合 用户 行为 轨迹 并且 据此 分析 用户 使用 产品 习惯 用于 改善 产品 交互 设计 图形学 领域 基于 聚类 算法 进行 图像 主题 筛选 一种 常见 应用 甚至 防火墙 领域 对于 那些 加密 流量 可以 通过 聚类 算法 大概 识别 这些 流量 到底 什么 类型 流量 数据 案例 实现 步骤 需求 梳理 区分 业务 业务流程 事件 设计 主要 区分 事件 本身 对应 事件 扩展 数据 接入 前端 采集 采集 企业 埋点 规范 最后 书评 书籍 前半部 分给 惊喜 解答 很多 搭建 数据 平台 困惑 但是 部分 信息量 明显降低 并且 宣传 神策 公司 感觉 作为 一本 知识型 数据 部分 大幅 宣传 合适 整体 得到 并且 帮助 知识 数据 驱动 数据 信息 知识 智慧 理论 数据 驱动 产品 决策 驱动 产品 智能 数据 驱动 包括 数据 接入 传输 建模 存储 统计分析 挖掘 可视化 反馈 数据分析 金字塔 采集 建模 分析 指标 数据 埋点 包括 前端 埋点 后端 埋点 业务 数据库 之前 忽略 埋点 埋点 方式 分为 无埋点 全埋点 代码 埋点 对于 埋点 事件 最好 引入 数据管理 多维 事件 模型 event 模型 引入 who when where what how 理论 模型 分为 行为 模型 event 用户 模型 user 几种 数据分析 方法 漏斗 分析 分布 分析 留存 分析 用户 路径 用户 点击 分析 指标体系 构建 第一 关键 指标 海盗 指标 数据 分析 实据 智能 可以 起来 形成 闭环 书中 强调 多次 数据 驱动 产品 智能 不过 对于 智能 这部分 介绍 浅显 有点 匹配 感觉 可能 是因为 篇幅 可能 是因为 看到 智能 思考 应用 场景 不是 简单 介绍 算法 几个 简单 案例 当然 总体 来说 帮助 很大 推荐 本文 地址 http crazyant net 2194 html 转载 注明 来源
2231,Spark数据倾斜解决方法,spark 数据 倾斜 解决 方法 避免 shuffle reduce join map join 适用 join 时候 一个 表是 小表 情况 直接 使用 collect 获取 小表 所有 数据 然后 brodcast 对大表 进行 map map 直接 提取 broadcast 小表 数据 实现 join 随机数 方案 对于 聚合 操作 可以 步骤 进行 聚合 第一步 原来 key 后面 加上 随机数 比如 10 然后 进行 聚合 比如 sum 操作 第二步 去掉 key 后面 随机数 第三部 再次 聚合 对应 第一步 sum 适用 聚合 场景 hive 预处理 方案 如果 已经 数据 倾斜 hive 预处理 然后 结果 加载 spark 进行 使用 适用 spark 频繁 使用 但是 hive 只会 预计 一次 场景 用于 即席 查询 比较 修改 或者 提升 shuffle 并行度 使用 repatition 进行 比如 原来 每个 节点 处理 10 key 数据 现在 处理 key 数据 虽然 某些 key 仍然 热点 但是 缓解 不少 过滤 发生 倾斜 key 场景 可以 采样 预计 方式 计算 key 数量 分布 然后 过滤 key 数据 即可 分治 空间 浪费 表中 热点 key 数据 单独 提取 出来 key 加上 随机 前缀 然后 对应 热点 key 数据 提取 出来 重复 加上 所有 随机数 key 然后 这俩 rdd 关联 得到 热点 结果 rdd 对于 剩下 数据 普通 进行 join 得到 普通 结果 rdd 然后 热点 rdd 普通 rdd 进行 union 得到 最终 结果 完全 空间 浪费 所有 数据 key 随机 前缀 所有 key 重复 加上 所有 随机 前缀 然后 关联 得到 结果 多种 方法 配合 使用 本文 总结 https www iteblog com archives 1671 html 本文 地址 http crazyant net 2231 html
2261,PyCharm开发PySpark程序的配置和实例,pycharm 开发 pyspark 程序 配置 实例 对于 pycharm 需要 如下 设置 安装 pyspark 它会 自动 安装 py4j2 edit configuration add content root 选择 spark 下载 python pyspark lib pyspark zip py4j zip 两个 代码 实例 from pyspark sql import rowfrom pyspark sql import sparksessionlogfile file users peishuaishuai tmp sparktest txt should be some file on your systemspark sparksession builder appname simpleapp getorcreate input spark read text logfile rdd map lambda str split filter lambda len map lambda row name grade int schemadata spark createdataframe input schemadata createorreplacetempview tb print schemadata count schemadata printschema datas spark sql select name sum grade from tb group by name rdd map lambda join str datas repartition saveastextfile file users peishuaishuai tmp sparktest output spark stop 输入 数据 name111name212name313name414name515name116name217name318name419name520name1121name1222name123name224name325name426name527name1828name1929name2030name2131name132name233name334name435name536name2737name2838name2939name140name241name342name443 输出 print 结果 33root -- grade long nullable true -- name string nullable true 文件 内容 name3132name1929name2127name1222name1121name2030name2838name2737name598name2939name2131name4137name1122name1828pyspark 开发 起来 有点 问题 就是 级联 过多 时候 类型 可能 丢失 导致 代码 没有 提示 这点 不爽 其实 对比 python scala java 觉得 编写 大型 spark 代码 java 因为 它强 类型 代码 提示 很爽 直观
2273,CentOS自己编译安装Python3的命令,centos 自己 编译 安装 python3 命令 yum install zlib devel bzip2 devel openssl devel ncurses devel sqlite devel readline devel tk devel gcc make libffi devel 参照 https blog.51 cto com 13544424 2149473 解决 缺少 ssl 问题 安装 1.1 版本 然后 往下走 configure prefix usr local python3 -- with openssl usr local opensslmake && make install usr local python3 bin python3 pip install -- upgrade pip usr local python3 bin python3 pip install redis
2283,Python3用scan和delete命令批量清理redis数据,python3 scan delete 命令 批量 清理 redis 数据 import redisimport timeredis cache redis redis host port 0000 password xxxx db print begin print redis cache dbsize begin pos 0while true result redis cache scan begin pos xxxxx 100000 return pos datalist result print time strftime -% -% time localtime time time return pos if len datalist print time strftime -% -% time localtime time time delete len datalist redis cache delete datalist if return pos break begin pos return posprint over 几个 知识点 scan 命令 第一个 参从 开始 代表 从头 扫描 scan 命令 返回 pos 元组 第一个 pos 可以 作为 下次 扫描 pos 第二个 就是 扫描 keyscan 命令 第三个 参数 本次 扫描 key 数目 比如 传递 10 万个 但是 返回 list 可能 因为 匹配 redis delete 命令 传递 array 参数 可以 list 传递
2301,tensorflow怎样输入具有多个值的特征,tensorflow 怎样 输入 具有 多个 特征 大部分 特征 单个 比如 性别 年龄 职业 地理位置 时间 地点 分类 点击率 等等 但是 还有 一些 多个 列表 比如 最近 点击 id 列表 个人 偏好 id 列表 物品 分词 列表 等等 对于 这种 特征 怎么 处理 参考 文章 https stackoverflow com questions 48697799 tensorflow feature column for variable list of values 以下 自己 一个 测试 features letter letter feature tf feature column categorical column with vocabulary list letter dtype tf string indicator tf feature column indicator column letter feature tensor input layer features indicator print tensor 输出 tf tensor shape dtype float32 总结 一下 就是 特征 装饰 tf feature column indicator column 可以 参考 文章 tensorflow feature column for variable list of values 地址
2303,Spark使用JAVA编写自定义函数修改DataFrame,spark 使用 java 编写 自定义 函数 修改 dataframe 本文 代码 涉及 几个 知识点 比较 有用 spark java 编写 代码 方式 spark 读取 mysql 数据表 并且 使用 自定义 sql 方式 默认 读取 整个 spark 使用 sql functions 原有 方法 dataframe 新增 变更 spark 使用 udf 自定义 函数 dataframe 新增 变更 spark 直接 读取 mysql private static dataset row querymysqldata sparksession spark properties properties new properties properties put user root properties put password 12345678 properties put driver com mysql jdbc driver 可以 sql 语句 查询 数据 结果 return spark read jdbc jdbc mysql 127.0 0.1 3306 test select id name from tb data tsub properties 整个 函数 使用 spark read jdbc 读取 mysql 数据表 配置 mysql user passpord driver jdbcurl 以及 可以 通过 sql 语句 执行 数据 查询 sql 语句 这里 spark 文档 table name 如果 设置 table name 读取 整个 可以 使用 select id name from tb data tsub 方式 读取 sql 结果 注意 这里 必须 sql 语句 设定 一个 标的 别名 以下 几种 dataframe 添加 新列 修改 原有 方法 方法 使用 functions 函数 一些 局限性 方法 使用 functions 函数 一些 局限性 inputdata withcolumn name length method1 functions length inputdata col name 使用 sql functions 里面 方法 里面 支持 大部分 size length 等等 方法 不过 还是 不够 灵活 因为 支持 就是 支持 方法 自定义 注册 udf 可以 java 代码 处理 可以 先用 spark udf register 注册 方法 然后 使用 functions calludf 进行 调用 其中 自定义 方法 需要 实现 udf1 udf20 接口 分别 代表 传入 不同 参列 方法 自定义 注册 udf 可以 java 代码 处理 spark udf register getlength new udf1 string integer override public integer call string throws exception return length datatypes integertype inputdata inputdata withcolumn name length method2 functions calludf getlength inputdata col name 方法 2.1 可以 udf2 udf20 就是 输入 变成 多个 spark udf register getlength2 new udf2 long string long override public long call long along string throws exception return along length datatypes longtype inputdata inputdata withcolumn name length method3 functions calludf getlength2 inputdata col id inputdata col name inputdata show 20 false 代码 地址 github 地址 tb data mysql 数据 读取 原始 dataframe schema root -- id long nullable true -- name string nullable true 数据 +---+-----------+ id name +---+-----------+ name1 name22 name333 name4444 name55555 name666666 name7777777 +---+-----------+ 最终 计算 之后 数据 输出 +---+-----------+-------------------+-------------------+-------------------+ id name name length method1 name length method2 name length method3 +---+-----------+-------------------+-------------------+-------------------+ name1 name22 name333 10 name4444 12 name55555 14 name666666 10 10 16 name7777777 11 11 18 +---+-----------+-------------------+-------------------+-------------------+
2324,推荐系统：爱奇艺知识推荐系统架构,推荐 系统 爱奇艺 知识 推荐 系统 架构 爱奇艺 知识 频道 当前 已经 包含 精品课程 涵盖 职场 文史 it 互联网 多个 分类 这么 课程 怎么 实现 高效 分发 一个 难题 通过 搜索 触达 人工 运营 ip 导流 方式 确实 可以 分发 一批 课程 然而 这些 课程 普遍 集中 头部 热度 课程 暴露 用户 面前 仍然 冰山 顶部 大量 课程 由于 信息 过载 没有 暴露 机会 挖掘 长尾 课程 防止 过度 马太效应 推荐 系统 责任重大 表现形式 爱奇艺 知识 当前 推荐 系统 有如 几个 表现形式 个性化 运营 根据 画像 用户 按群 推荐 课程 喜欢 个性化 课程 推荐 相关 推荐 课程 页面 相关 推荐 购买 成功 课程 推荐 系统 架构 系统 架构 主要 流程 如下 数据处理 使用 spark hive python mysql 备库 hbase pingback hive 实时 提取 数据 实现 关联 清洗 映射 特征 处理 其中 spark streaming pingback rockermq 实时 提取 用户 行为 实现 10 秒钟 用户 个性化 推荐 列表 更新 模型 计算 使用 spark als 矩阵 分解 计算 结果 可以 用户 推荐 协同 过滤 以及 根据 item vectors 实现 相关 推荐 使用 tensorflow paddle 实现 排序 模型 使用 lr dnn deep wide 实现 ctr 排序 结果 数据 存储 这里 涉及 比较 考虑 主要 是从 数据量 查询 响应 时间 数据结构 支持 方面 考虑 对于 item 本身 实体 数据 item 相似 列表 数据 使用 redis 存储 因为 redis cluster 能够 批量 读取 但是 这里 需要 批量 读取 对于 用户 行为 实时 数据 因为 需要 数据量 存储 并且 需要 丰富 数据结构 支持 选用 redis cluster 对于 用户 画像 数据 自己 提取 用户 标签 数据 数据量 需要 根据 用户 id 提取 所以 选用 scylla 在线 服务 主要 参考 youtube 推荐 系统 架构 整体 步骤 细分 召回 排序 过滤 混排 步骤 其中 召回 排序 已购 步骤 id 参与 计算 最终 返回 时候 查询 实体 业务 数据 模型 排序 服务 使用 grpc brpc http 提供 服务 应用服务 调用 应用服务 同时 需要 支持 ab test 分桶 以及 参数 返回 前端 请求 前端 进行 非常 短暂 缓存 防止 恶意 请求 重要 需要 搞定 pingback 埋点 投递 投递 需要 设定 ab test 参数 以上 就是 爱奇艺 知识 推荐 系统 架构 系统 处于 快速 迭代 升级 之后 事情 这些 当前 系统 qps 高峰 耗时 150ms 左右 时间 耗费 实体 数据 拼装 阶段 后续 进行 优化 相关 推荐 导流 效果 后续 进行 多种 实验 进行 效果 对比 排序 模型 上化 通过 ab 测试 进行 效果 对比 本文 地址 http www crazyant net 2324 html 转载 注明 来源
2336,我为什么从工程转了算法？,为什么 工程 算法 一句 总结 年龄 总想 自己 事情 意义 所以 自己 代码 产品 影响 衡量 影响 发现自己 java 开发 数据业务 处理 产品 影响 甚微 自己 工作 工作 主要 两个 方向 java 后台 业务 开发 什么 需求 什么 开发 增删 改查 消息 发消息 因为 之前 公司 商业 运营 部门 需求 面向 公司 运营 市场 人员 直接 面向 普通用户 系统 访问量 特别 往往 一天 几千个 访问量 不错 导致 出去 面试 时候 别人 系统 qps 多少 真是 不好意思 不到 两位数 业务 数据处理 现在 业务 数据 毕竟 数据 反映 业务 状况 一旦 涉及 数据 只是 mysql 里面 那些 少量 数据 往往 需要 一下 各个 渠道 来源 流量 之类 就要 去查 公司 级别 数据仓库 他们 每天 数据量 每天 几十 上百 tb 不用 hive spark 这些 数据 技术 搞不定 说到底 就是 sql 取数 做个 图表 出来 出去 面试 人家 问大 数据 建模 方法论 怎样 实现 业务 统计 指标 统一 照样 一头 虽然 知道 java 后台 服务 开发 确实 可以 往后 发展 但是 没有 接触 并发 这些 难度 方向 数据业务 处理 虽然 只是 一些 报表 但是 自己 没有 分析 报表 能力 报表 老大 他们 根据 什么 数据 什么 知道 两个 方向 觉得 有种 那么 精准 发展 感觉 如果 别人 自己 职业 发展 方向 java 恐怕 别人 觉得 随着 业务 什么 称作 方向 有点 虚虚 同时 非常 间接 影响 业务 或者说 影响 微小 缺少 那么 意义 数据 相关 学习 关注 数据分析 数据 智能 领域 数据 领域 这么 真正 产品 业务 哪些 影响 上面 整理 图表 理解 数据仓库 数据报表 其实 基础 技术 只是 工具 或者 手段 属于 公司 基础 技术 部分 两层 技术 其实 打造 一把 然而 怎么 两层 没关系 别人 数据 就是 取数 反驳 上层 数据分析 通过 数据分析 能够 发现 产品 问题 发展 趋势 等等 然后 影响 产品 往后 发展 但是 我们 开发人员 其实 这层 没有 关系 因为 分析 目标 决策 我们 码农 没有 决策权 最上层 数据 智能 推荐 搜索 用户 增长 各个 算法 领域 搜索算法 造就 百度 谷歌 推荐 算法 造就 头条 快手 用户 增长 领域 所有 产品 核心 关注 事情 这个 领域 我们 代码 真正 看到 产品 影响 用线 点击率 购买率 真实有效 指标 衡量 所以 数据 智能 一层 想要 觉得 可以 定准 方向 算法 其实 实现 算法 业务 落地 没有 足够 耐心 真的 算法 论文 里面 公式 现在 没法 手推 算法 公式 不能 算是 真正 算法 人员 然而 发现 目标 自己 代码 业务 带来 直接 影响 的话 潜伏 业务 团队 快速 运用 成熟 机器 学习 算法 框架 算法 落地 上线 产生 线上 价值 反而 很多 现在 其实 不是 研究 算法 而是 算法 结合 业务 落地 人才 吴恩达 视频 课程 提到 算法 虽然 基础 但是 搞定 80% 商业 公司 需求 仍然 业务 算法 实现 业务 算法 落地 代码 真正 产生 业务 影响 目标 专门 算法 团队 一是 不了 算法 公式 不了 哈哈 二是 业务 违背 初衷 其实 掌握 算法 技能 本来 就是 工程 将来 必备 要求 恐惧 经常 未知 恐惧 接触 算法 领域 发现 没有 那么 高深 恐怖 不可 接触 各种 机器 学习 深度 学习 框架 比如 sciketlearn tensorflow paddlepaddle 完成 一个 简单 ctr 排序 模型 只要 简单 几十分钟 参照 教程 实现 训练 并且 几乎 所有 所谓 算法 人员 没有 实现 一个 算法 发明 一个 算法 直接 修改 现成 模型 代码 各种 数据 获取 数据处理 特征提取 事情 体现 算法 能力 能力 高低 变成 这个 调参 圣手 第二 就是 这个 人能 算法 结合 业务 落地 数据 智能 一层 因为 顶层 依赖 大量 底层 技能 下层 pingback 业务 数据 数据仓库 数据分析 java 开发 架构 能力 需要 涉及 如果 团队 人少 的话 一样 所有 事情 一层 其实 需要 极强 工程 能力 这方面 专门 算法 恐怕 没有 工程 出身 算法 业务 落地 还是 工程 开发人员 这方面 越来越 侧重 专门 算法 团队 一些 基础设施 提供 算法 平台 恐怕 可能 发展 方向 人工智能 越来越 算法 框架 越来越 简单 学习 成本 门槛 越来越低 越来越 工程 算法 面试 一个 java 程序员 时必 算法 落地 能力 懂得 算法 就是 一个 程序员 必备 技能 不是 技能 关注 这个 公众 一起 学习 哈哈
2343,Flask怎样从其他Python文件导入app.route视图函数,flask 怎样 其他 python 文件 导入 app route 视图 函数 blueprint 这个 东西 实现 文件 flask main pyimport flaskfrom flask pyecharts flask moudle2 import account apiapp flask flask __ name __ app register blueprint account api app route hello def hello return hello app run 引入 一个 module 文件 这个 文件 中写 视图 函数 flask moudle2 pyfrom flask import blueprintaccount api blueprint account api __ name __ account api route account def accountlist return list of accounts 界面 访问 第一个 函数 第二个 函数 返回 正常 一下 官网 蓝图 解释 flask 蓝图 blueprints 概念 一个 应用 应用 制作 应用 组件 支持 通用 模式 蓝图 简化 大型 应用 工作 方式 提供 flask 扩展 应用 注册 操作 核心 方法 一个 blueprint 对象 flask 应用 对象 工作 方式 确实 不是 一个 应用 而是 一个 描述 如何 构建 扩展 应用 蓝图 每个 蓝图 可以 指定 自己 templates static 文件夹 指定 方法 就是 blueprint 参数 地址 http docs jinkan org docs flask blueprints html 参考 https stackoverflow com questions 15231359 split python flask app into multiple files 15231623
2351,推荐系统：怎样实现内容相似推荐,推荐 系统 怎样 实现 内容 相似 推荐 很多 产品 想要 加入 推荐 系统 模块 简单 就是 内容 相似 推荐 虽然 技术 简单 但是 效果 对于 增加 用户 粘性 提升 用户 留存 效果 甚至 很多 产品 后来 加入 很多 推荐 模块 之后 还是 发现 导流 效果 最好 依然 内容 相似 推荐 比如 一片 python 怎样 读取 mysql 之后 相似 推荐 看到 一片 题目 python 操作 mysql 效果 优化 文章 自然 深入 了解 一下 于是 就点 进去 看一看 那么 对于 整个 网站 来说 降低 跳出 增加 用户 留存 一个 用户 体验 实现 一个 内容 相似 推荐 方案 比较简单 大体上 包含 以下 步骤 获取 内容 数据 比如 标题 关键字 分类 甚至 全文 一般 文档 数据 内容 存储 mysql 可以 使用 python java 语言 直接 读取 mysql 导出 文件 txt 格式 或者 直接 shell mysql sql data txt 方式 导出 一般 情况 全文 内容 太散 不会 作为 候选 但是 有些 视频 之类 实体 因为 标题 简介 文字 如果 详情 全文 的话 可以 加入 候选 数据字 内容 数据 中文 分词 如果 python 语言 可以 使用 结巴 分词 地址 https github com fxsjy jieba 或者 可以 直接 使用 百度 中文 分词 百度 nlp 自然语言 处理 技术 还是 厉害 提取 内容 数据 关键词 分词 之后 分词 结果 包含 很多 意义 词语 这些 词语 不能 称之为 关键词 一般 通过 tf idf 方法 计算 每个 词语 权重 一个 文档 所有 词语 tf idf 权重 倒序 排列 topn 作为 关键词 如果 使用 jieba 分词 那么 直接 自带 提取 关键词 支持 当然 可以 自己 计算 tf 就是 计算 一篇 文章 每个 词语 出现 次数 idf 就是 这个 词语 所有 文章 出现 次数 tf 除以 idf 就是 权重 关键词 映射 数字 向量 我们 最终 目标 计算 文档 之间 相似 计算 相似 需要 内容 映射 向量 第一步 就是 每个 词语 映射 向量 映射 方式 几种 使用 one hot 方法 映射 向量 自己 训练 word2vec 密度 向量 使用 业界 训练 word2vec 向量 一般 情况 自己 数据 比较 效果 业界 word2vec 效果 一些 比如 这里 推荐 腾讯 开源 200 维度 全网 word2vec 向量 地址 https ai tencent com ailab nlp embedding html5 计算 文档 粒度 数字 向量 得到 每个 词语 向量 之后 通过 加权 平均 方式 可以 计算 整个 文档 向量 权重 可以 使用 每个 词语 频率 次数 归一化 或者 直接 平均 即可 计算 文档 之间 相似 使用 cosin 算法 能够 计算 文档 向量 之间 相似 cosin 算法 简单 java python 自己 实现 可以 可用 https scikit learn org 或者 http surpriselib com 相似 计算 模块 直接 调用 实现 计算 之后 对于 每个 文档 每个 文档 相似 倒序 排列 比如 top 30 作为 推荐 结果 集合 文档 相似 关系 存入 mysql redis 缓存 步骤 得到 一个 这样 结果 文档 id 相似 文档 id 列表 这样 数据 直接 存入 mysql 或者 redis key 就是 文档 id value 相似 文档 id 列表 即可 页面 展示 一个 内容 时候 提取 相似 推荐 进行 展示 用户 访问 一个 页面 时候 服务 python java 缓存 redis 或者 mysql 根据 展示 页面 文档 id 提取 相似 id 列表 因为 步骤 提前 计算 列表 这里 可能 一些 过滤 下线 事情 然后 根据 id 提取 对应 标题 简介 信息 组装 相似 推荐 列表 返回 前端 即可 总结 以上 就是 离线 计算 相似 推荐 步骤 其实 可以 在线 方式 进行 这个 问题 按照 搜索 架构 实现 即可 新来 一个 文档 分词 计算 关键词 列表 存储 然后 每次 访问 时候 根据 关键词 列表 查询 相同 关键词 列表 文档 可以 实现 相似 内容 推荐 上线 能够 不断 积累 一些 用户 点击 查看 文档 行为 数据 基于 行为 数据 训练 协同 过滤 模型 实现 内容 相似 但是 行为 相似 协同 过滤 推荐
2367,Java和Python使用Grpc访问Tensorflow的Serving代码,java python 使用 grpc 访问 tensorflow serving 代码 发现 网上 大量 代码 mnist 自己 反正 不是 图像处理 所以 这个 例子 怎么 不想 wide deep 这种 包含 各种 特征 模型 需要 iris 是从 文本 训练 模型 所以 非常简单 本文 给出 python java 访问 tensorflow serving 代码 java 版本 使用 grpc 访问 tensorflow serving 代码 package io github qf6101 tensorflowserving import com google protobuf bytestring import io grpc managedchannel import io grpc managedchannelbuilder import io grpc netty negotiationtype import io grpc netty nettychannelbuilder import org tensorflow example import org tensorflow framework datatype import org tensorflow framework tensorproto import org tensorflow framework tensorshapeproto import tensorflow serving model import tensorflow serving predict import tensorflow serving predictionservicegrpc import java util arraylist import java util hashmap import java util list import java util map 参考 https www jianshu com d82107165119 参考 https github com grpc grpc java public class pssirisgrpcclient public static example createexample features builder featuresbuilder features newbuilder map string float datamap new hashmap string float datamap put sepallength 5.1 datamap put sepalwidth 3.3 datamap put petallength 1.7 datamap put petalwidth 0.5 map string feature featuresmap maptofeaturemap datamap featuresbuilder putallfeature featuresmap features features featuresbuilder build example builder examplebuilder example newbuilder examplebuilder setfeatures features return examplebuilder build private static map string feature maptofeaturemap map string float datamap map string feature resultmap new hashmap string feature for string key datamap keyset data1 sepallength 5.1 sepalwidth 3.3 petallength 1.7 petalwidth 0.5 floatlist floatlist floatlist newbuilder addvalue datamap get key build feature feature feature newbuilder setfloatlist floatlist build resultmap put key feature return resultmap public static void main string args string host 127.0 0.1 int port 8888 managedchannel channel managedchannelbuilder foraddress host port channels are secure by default via ssl tls for the example we disable tls to avoid needing certificates useplaintext build predictionservicegrpc predictionserviceblockingstub blockingstub predictionservicegrpc newblockingstub channel com google protobuf int64value version com google protobuf int64value newbuilder setvalue build model modelspec modelspec model modelspec newbuilder setname iris setversion version setsignaturename classification build list bytestring examplelist new arraylist bytestring examplelist add createexample tobytestring tensorshapeproto dim featuredim tensorshapeproto dim newbuilder setsize examplelist size build tensorshapeproto shapeproto tensorshapeproto newbuilder adddim featuredim build org tensorflow framework tensorproto tensorproto tensorproto newbuilder addallstringval examplelist setdtype datatype dt string settensorshape shapeproto build predict predictrequest request predict predictrequest newbuilder setmodelspec modelspec putinputs inputs tensorproto build tensorflow serving predict predictresponse response blockingstub predict request system out println response channel shutdown 需要 增加 如下 maven 依赖 -- https mvnrepository com artifact org tensorflow tensorflow -- dependency groupid org tensorflow groupid artifactid tensorflow artifactid version 1.12 version dependency -- https mvnrepository com artifact io grpc grpc netty -- dependency groupid io grpc groupid artifactid grpc netty artifactid version 1.20 version dependency -- https mvnrepository com artifact io grpc grpc protobuf -- dependency groupid io grpc groupid artifactid grpc protobuf artifactid version 1.20 version dependency -- https mvnrepository com artifact io grpc grpc stub -- dependency groupid io grpc groupid artifactid grpc stub artifactid version 1.20 version dependency 输出 结果 outputs key scores value dtype dt float tensor shape dim size dim size float val 0.9997806 float val 2.1938368 float val 1.382611 outputs key classes value dtype dt string tensor shape dim size dim size string val string val string val python 版本 使用 grpc 访问 tensorflow serving 代码 创建 grpc 连接 import pandas as pdfrom grpc beta import implementationsimport tensorflow as tffrom tensorflow serving apis import prediction service pb2 classification pb2 channel implementations insecure channel 127.0 0.1 8500 8888channel implementations insecure channel 127.0 0.1 8888 stub prediction service pb2 beta create predictionservice stub channel def create feature return tf train feature float list tf train floatlist value data1 sepallength 5.1 sepalwidth 3.3 petallength 1.7 petalwidth 0.5 features1 create feature for in data1 items example1 tf train example features tf train features feature features1 data2 sepallength 1.1 sepalwidth 1.3 petallength 1.7 petalwidth 0.5 features2 create feature for in data2 items example2 tf train example features tf train features feature features2 获取 测试数据 转换成 example 实例 examples example1 example2 准备 rpc 请求 指定 模型 名称 request classification pb2 classificationrequest request model spec name iris request input example list examples extend examples 获取 结果 response stub classify request 10.0 print response python 代码 看起来 简单 不少 但是 我们 服务 java 所以 不好 集成 只能 一些 离线 批量 预测 输出 如下 result classifications classes label score 0.9997805953025818 classes label score 0.00021938368445262313 classes label score 1.382611025668723 09 classifications classes label score 0.0736534595489502 classes label score 0.8393719792366028 classes label score 0.08697459846735 model spec name iris version value signature name serving default 个人 其实 非常 喜欢 http json 接口 完全 不用 这么 grpc 这些 麻烦 东西 尤其 java grpc 遇到 好多 问题 崩溃 不过 号称 grpc http 性能 不少 线上 只能 grpc
2404,听樊登的《非暴力沟通》,樊登 非暴力 沟通 最近 爱奇艺 知识 课程 樊登教 快乐 事业有成 第一节 樊登 非暴力 沟通 完后 觉得 自己 一些 感悟 自己 感悟 我们 总是 喜欢 评价 评判 别人 不论是 别人 主动 寻求 帮助 或者 觉得 自己 前辈 想要 指导 一下 对方 我们 总是 喜欢 评价 评判 别人 或者 别人 建议 然而 每个 世界观 不同 什么 资格 评价 别人 如果 对方 寻求 安慰 倾诉 真正 应该 应该 体会 对方 感受 一句 如果 要求 评价 绝对 不能 所以 评价 人类 智力 最高 形式 表达 事实 这句 视频 中樊登 惊讶 不过 仔细 体会 觉得 非常 道理 因为 我们 活在 自己 世界 所以 世界 总是 自己 人生观 这时候 别人 交互 其实 说出 事实 往往 不是 真正 事实 那么 难以 理解 别人 感受 对于 一件 事情 仔细 体会 其中 事实 然后 事实 表达出来 其实 很难 一旦 这样 阐述 正确 别人 愤怒 质疑 等等 任何 情绪 起码 事实 表述 不会 爆发 并且 因为 同意 说法 情绪 有所 安抚 喜欢 非暴力 沟通 要素 这四 要素 精辟 观察 事实 表达 感受 表达 需要 表达 请求 尤其 用于 孩子 沟通 不能 愣头愣脑 评价 孩子 建议 孩子 首先 知道 孩子 为什么 这样 当前 处于 什么 感受 然后 表达 自己 想法 需求 这里 想法 不要 评价 不论是 任何人 评价 带来 伤害 反弹 毕竟 什么 资格 什么 觉得 自己 人家 厉害 评价 视频 重点 摘抄 暴力 来源 道德 批判 一味 比较 回避 责任 强人所难 非暴力 沟通 要素 观察 事实 评论 感受 表达 感受 不是 想法 需要 说出 引发 感受 需要 请求 说出 具体 要求 倾听 全身心 倾听 给予 必要 反馈 愤怒 感激 表达 愤怒 重获 生活 热情 表达 感激 感兴趣 朋友 可以 评论 或者 好友 交流
2419,Flask使用Pyecharts在单个页面展示多个图表,flask 使用 pyecharts 单个 页面 展示 多个 图表 flask 页面 展示 echarts 主要 两种 方法 方法 原生 echarts 方法 自己 前端 引入 echarts js 文件 自己 创建 div 自己 初始化 echarts 对象 自己 官网 复制 并且 配置 图表 自己 echarts 对象 设置 配置 实现 绘制 这种 方法 缺点 配置 js 形式 比较 繁琐 对于 开发人员 来说 有点 过于 参与 前端 js 部分 配置 开发 这种 方式 参照 echarts 官网 方式 其实 flask 没有 多大 关系 php java 不同 语言 一样 地址 方法 使用 pyechartspyecharts 主要 一件 事情 js 配置 option 完全 抽离 使用 python 代码 配置 js 数据结构 使用 python 代码 结构 实现 开发 需要 配置 数据 搞定 图表 真的 matplotlib 当然 echarts 强大 使得 pyecharts 强大 但是 这里 真的 pyecharts 因为 包含 多种 输出 图表 结果 方式 没有 一种 能够 flask 完美 配合 render 方法 默认 当前目录 生成 render html 文件 这是 什么 什么 场景 用到 这种 方式 竟然 默认 方式 真是 怪异 render 方法 传入 路径 参数 传入 路径 参数 bar render mycharts html 这种 方法 一点 可以 设定 文件 路径 但是 毛要 输出 一个 html 另外 一点 一个 网页 难道 这个 网页 除了 这个 图表 没有 其他 数据 展示 只有 一个 大大的 echarts 图表 render notebook 方法 这个 方法 能用 notebook 这个 不吐槽 因为 如果 使用 notebook 这个 方法 但是 我要 用于 flask 网页 展示 render embed 方法 来自 pyecharts flask 一章 markup render embed 估计 作者 根本 没写 flask 代码 不然 flask 网页 只能 展示 一个 echarts 图表 其他 数据 展示 怎么 这个 方法 设置 试图 render embed 结果 传递 flask 模板 结果 发现 这个 函数 返回 一个 整个 html chart dump options 方法 这个 方法 唯一 一个 觉得 flask 配合 不错 方法 能够 实现 一个 flask 网页 绘制 很多 图表 然而 依然 需要 自己 引入 echarts js 文件 自己 设定 div 自己 初始化 echarts 对象 自己 echarts 对象 设置 图表 配置 唯一 简化 就是 图表 配置 来自 python 服务端 最后 给出 使用 chart dump options 方法 一个 flask 网页 配置 多个 图表 方法 代码 python 代码 app route show pyecharts def show pyecharts bar bar add xaxis 衬衫 羊毛衫 雪纺衫 裤子 高跟鞋 袜子 add yaxis 商家 20 36 10 75 90 print bar render embed print bar dump options return render template show pyecharts html bar data bar dump options flask 模板 代码 doctype html html lang en head meta charset utf title title title script src static echarts min js script head body h1 柱状图 h1 div -- echarts 准备 一个 具备 大小 宽高 dom -- div id main style width 600px height 400px div script type text javascript 基于 准备 dom 初始化 echarts 实例 var mychart echarts init document getelementbyid main 使用 指定 配置 数据 显示 图表 mychart setoption bar data safe script -- echarts 准备 一个 具备 大小 宽高 dom -- div id main2 style width 600px height 400px div script type text javascript 基于 准备 dom 初始化 echarts 实例 var mychart2 echarts init document getelementbyid main2 指定 图表 配置 数据 var option2 bar data safe 使用 指定 配置 数据 显示 图表 mychart2 setoption option2 script div body html 展示 输出 方法 视频 演示 教程 收录 自己 录制 付费 课程 python flask 开发 web 程序 地址 http www iqiyi com 19rrh35u11 html
2434,Pandas中对轴axis=0和axis=1的理解,pandas axis axis 理解 学习 numpy pandas axis axis 或者 axis index axis 或者 axis columns 甚至 经常 觉得 是不是 写错 有点 直觉 来自 简书 一篇 文章 地址 张图 解释 文章 底部 引用 一下 篇文章 的话 理解 实际上 axis 沿着 行求 所有 平均值 代表 横轴 axis 就是 沿着 列求 所有 平均值 代表 纵轴 理解 起来 还是 很绕 个人 理解 如果 对比 excel mysql 数据表 理解 容易 我们 正常 使用 excel 或者 mysql 时候 默认 一行 代表 一条 数据 每个 列是 不同 信息 我们 读取 时候 一行 一行 读取 如果 要算 max min sum 函数 其实 一行 一行 计算 全局 min max sum 但是 出来 其实 每个 数据 min max sum 其实 就是 axis axis index 意思 一行 一行 计算 但是 出来 其实 每列 结果 相对 我们 excel mysql 很少 实现 跨列 计算 除非 每列 一样 数字信息 举个 例子 一个 数据表 一行 一个 主键 日期 一列 对应 每个 页面 pv 那么 可以 计算 每个 日期 pv 总数 平均数 这时候 就是 跨列 计算 就是 常见 axis 或者 axis columns 虽然 跨列 计算 但是 出来 结果 其实 标签 日期 数据 结果 axis 虽然 一行 一行 计算 其实 出来 每列 结果 换句话说 aixs 计算 时候 跨行 每行 每行 那么 出来 当然 每列 结果 一把 梳子 往下 得到 就是 条状 结果 每个 竖条 标签 当然 就是 columns 标签 axis 虽然 一列 一列 计算 其实 出来 每行 结果 换句话说 aixs 计算 时候 跨列 每列 每列 那么 出来 当然 每行 结果 一把 梳子 往右 得到 就是 条状 结果 每个 横条 标签 当然 index 标签 以上 当然 自己 理解 具体 自己 琢磨 可以 弄清楚
2447,Spark使用word2vec训练item2vec实现内容相关推荐,spark 使用 word2vec 训练 item2vec 实现 内容 相关 推荐 之前 使用 spark als 训练 协同 过滤 然后 导出 itemvectors 相似 计算 后来 学到 可以 word2vec 实现 item2vec 训练 效果 貌似 更好 一下 果然 不错 spark 版本 2.3 开发 语言 java 几大 步骤 读取 查看 点击 播放 行为 数据 我用 播放 数据 数据 整理 userid itemid playcnt 形式 这个 数据 可能 聚合 得到 过滤 playcnt 小于 数据 这些 过滤 觉得 这个 数据 没有 贡献 按照 userid 聚合 得到 userid list itemid 形式 训练 word2vec 导出 model vectors 里面 包括 word 对应 向量 vector 其中 word 其实 就是 itemidcrossjoin 计算 相似 相似 top 结果 存入 mysql 后续 可以 加载 redis 实现 实时 相似 推荐 代码 实现 读取 播放 数据 dataset row playdatas spark sql select user id item id play cnt from hive play table group by user id item id 数据 userid 聚合 playdatas playdatas 删除 播放 以下 数据 filter play cnt userid 聚合 groupby user id agg collect list item id as item ids 至少 操作 元素 where size col item ids geq 训练 word2vec word2vec word2vec new word2vec setinputcol item ids setoutputcol word2vec result setvectorsize 50 setmincount setmaxiter 50 setseed 123 word2vecmodel word2vecmodel word2vec fit playdatas 实现 df cross join dataset row vectorsa word2vecmodel getvectors select col word as itemida col vector as vectora dataset row vectorsb word2vecmodel getvectors select col word as itemidb col vector as vectorb self cross joindataset row crossdatas vectorsa crossjoin vectorsb 注册 余弦 相似 计算 函数 spark udf register vectorcosinsim new udf2 vector vector double override public double call vector vectora vector vectorb throws exception return similarityutils cosinesimilarity vectora vectorb datatypes doubletype 其中 调用 余弦 相似 计算 函数 使用 java 实现 public static double cosinesimilarity vector featuresleft vector featuresright double dataleft featuresleft toarray list float lista new arraylist if dataleft length for double dataleft lista add float double dataright featuresright toarray list float listb new arraylist if dataright length for double dataright listb add float return cosinesimilarity lista listb 实现 相似 计算 过滤 自身 自身 计算 crossdatas crossdatas withcolumn cosinesimilarity calludf vectorcosinsim col vectora col vectorb select itemida itemidb cosinesimilarity filter col itemida notequal col itemidb 使用 spark window 提取 每个 group topn 按照 相似 倒序 排列 top 300windowspec windowspec window partitionby itemida orderby col cosinesimilarity desc crossdatas crossdatas withcolumn simrank rank over windowspec where col simrank leq 200 数据 聚合 每个 item 推荐 列表 形式 crossdatas crossdatas groupby itemida agg collect list cosinesimilarity as columnsims collect list itemidb as itemids select col itemida as item id cast datatypes longtype col columnsims as column sims cast datatypes stringtype col itemids as item ids cast datatypes stringtype 数据 覆盖 写入 mysql crossdatas write mode savemode overwrite jdbc mysqlconfig online mysql master url item2vec sims mysqlconfig getonlineproperties 数据库 我们 根据 item id 提取 item ids 可以 用于 直接 推荐 其中 column sims 记录 对应 相似 权重 如果 需要 加权 的话 可以 直接 提取 欢迎 大家 关注 爱奇艺 学习 pyton 数据 人工智能 技术 地址 本文 地址 http www crazyant net 2447 html 转载 注明 来源
2454,推荐系统：实现文章相似推荐的简单实例,推荐 系统 实现 文章 相似 推荐 简单 实例 一篇 文章 实现 文章 内容 相似 计算 实现 相似 推荐 算法 比较简单 非常适合 这种 初学 入门 来自 一篇 英文 文章 地址 文章 标题 how to build content based movie recommender system with natural language processing 文章 代码 地址 文章 实现 相似 推荐 步骤 csv 加载 pandas pd2 提取 其中 标题 题材 分类 导演 演员 情节 描述 单词 变小 人名 空格 合并 英文 需要 这样 题材 分类 导演 演员 几个 特征 结构化 需要 处理 标题 情节 描述 这类 长段 文本 使用 nltk 关键词 提取 如果 中文 可以 jieba 词库 关键词 提取 功能 第四 步骤 分类 导演 演员 关键词 列表 合并 一个 列表 这一 处理 其实 暗含 分类 导演 演员 三个 特征 关键词 一样 重要 没有 加权 处理 使用 countvectorizer 每个 词语 计数 得到 每个 文章 向量 使用 sklearn cosin 笛卡尔 相似 计算 计算结果 一个二维 矩阵 按行 查询 一个 文章 推荐 结果 相似 度值 排序 得到 相似 文章 里面 学到 不少 知识 运用 流程 pandas 运行 尤其 for each row 单个 各种 map 计算 计算 相似 度时 使用 多个 特征 包括 title genre director actors plot 统一 一个 bag of words 参与 计算 使用 from sklearn metrics pairwise import cosine similarity 用于 相似 计算 使用 from sklearn feature extraction text import countvectorizer 用于 单词 计数 使用 from rake nltk import rake 用于 关键词 提取 代码 实现 关键 部分 作者 用到 一些 import pandas as pdfrom rake nltk import rakeimport numpy as npfrom sklearn metrics pairwise import cosine similarityfrom sklearn feature extraction text import countvectorizerpandas dataframe 直接 替换 一列 语法 df director df director map lambda split pd 按行 以此 处理 某个 方法 for index row in df iterrows row actors lower replace for in row actors row director join row director lower pd df 删除 一列 方法 df drop columns plot inplace true pd df columns 提取 一列 作为 index 方法 df set index title inplace true 作者 使用 所有 放在 一个 词包 用于 相似 计算 想法 这些 特征 其实 应该 不同 权重 df bag of words columns df columnsfor index row in df iterrows words for col in columns if col director words words join row col else words words row col row bag of words words df drop columns col for col in df columns if col bag of words inplace true sklearn 使用 计数 调用 count countvectorizer count matrix count fit transform df bag of words sklearn 实现 矩阵 相似 计算 方法 generating the cosine similarity matrixcosine sim cosine similarity count matrix count matrix 怎样 实现 不同 特征 融合 相似 计算 这个 问题 纠结 查询 一些 文章 大都 人工 指定 加权 权重 或者 使用 模型 拟合 权重 没有 多么 简单 方法 作者 使用 其实 直接 分类 演员 关键词 直接 融合 方法 作者 文章 提到 一句 decided to use countvectorizer rather than tfidfvectorizer for one simple reason need simple frequency counter for each word in my bag of words column tf idf tends to give less importance to the words that are more present in the entire corpus our whole column in this case which is not what we want for this application because every word is important to detect similarity 对于 标题 介绍 这种 文本 内容 我们 可以 tf idf 提取 关键词 物理 含义 就是 降低 全局 出现 词频 很多 词语 但是 其实 对于 作者 演员 题材 特征 他们 并不需要 降低 全局 词频 使用 词频 计数 即可 哪些 可以 提升 地方 作者 方法 确实 可以 实现 相似 推荐 不过 感觉 一些 可以 提升 地方 标题 简介 提取 关键词 可以 查询 业界 word2vec 向量 扩展 这样 实现 恰恰 伦巴 这类 词语 相似 度量 直接 关键词 查询 得不到 这样 信息 分类 导演 演员 三个 特征 需要 描述 得到 关键词 区分 可以 加权 方法 进行 按照 产品 需求 加重 分类 导演 相似 权重 降低 演员 关键词 权重 如果 需要 可以 点击率 出发 模型 计算 这些 权重 本文 地址 http www crazyant net 2454 html 转载 注明 来源
2469,Spark使用Java开发遇到的那些类型错误,spark 使用 java 开发 遇到 那些 类型 错误 spark 使用 java 开发 其实 比较 方便 java8 lambda 表达式 使得 编写 体验 并不比 scala 很多 但是 因为 spark 本身 使用 scala 实现 导致 使用 java 开发 时候 遇到 不少 类型 匹配 问题 本文 列举 自己 工作 开发 遇到 一些 问题 大家 参考 wrappedarray vector 报错 信息 caused by java lang classcastexception scala collection mutable wrappedarray ofref cannot be cast to org apache spark ml linalg vector 使用 dataframe 打印 schema 时候 这样 输出 -- tag weights array nullable true -- element double containsnull true -- word sims array nullable true -- element double containsnull true 这时候 如果 java vector 接收 就会报 这个 错误 java 代码 spark udf register computeweightsim new udf2 vector vector double override public double call vector tag weights vector word sims throws exception 解决办法 使用 wrappedarray long 接收 scala 类型 可以 iterator 遍历 scala collection iterator long it1 view qipuids iterator scala collection iterator long it2 view cnts iterator map long long viewmap new hashmap while it1 hasnext && it2 hasnext viewmap put it1 next it2 next 或者 可以 zip 两个 iterator 进行 计算 new udf2 wrappedarray double wrappedarray double double 计算 加权 权重 param tag weights 加权 param word sims 计算结果 目标 return 加权 权重 throws exception override public double call wrappedarray double tag weights wrappedarray double word sims throws exception scala collection iterator double tag weightsiter tag weights iterator scala collection iterator double word simsiter word sims iterator scala collection iterator tuple2 double double zipiterator tag weightsiter zip word simsiter double totalweight 0.0 double fenziweight 0.0 while zipiterator hasnext tuple2 double double itertuple zipiterator next totalweight itertuple ._ fenziweight itertuple ._ itertuple ._ if totalweight 0.0 return 0.0 else return fenziweight totalweight 详细 内容 scala 文档 https docs scala lang org overviews collections iterators html
2499,Pandas系列-读取csv/excel/mysql数据,pandas 系列 读取 csv excel mysql 数据 代码 演示 pandas 读取 文本文件 读取 csv 文件 读取 txt 文件 pandas 读取 xlsx 格式 excel 文件 pandas 读取 mysql 数据表 import pandas as pd1 读取 文本文件 1.1 读取 csv 使用 默认 标题 逗号 分隔符 fpath datas ml latest small ratings csv 使用 pd read csv 读取数据 ratings pd read csv fpath 查看 几行 数据 ratings head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right useridmovieidratingtimestamp0114.09649827031134 09649812472164.096498222431475 096498381541505.0964982931 查看 数据 形状 返回 列数 ratings shape 100836 查看 列名 列表 ratings columnsindex userid movieid rating timestamp dtype object 查看 索引 ratings indexrangeindex start stop 100836 step 查看 每列 数据类型 ratings dtypesuserid int64movieid int64rating float64timestamp int64dtype object1.2 读取 txt 文件 自己 指定 分隔符 列名 fpath datas crazyant access pvuv txt pvuv pd read csv fpath sep header none names pdate pv uv pvuv dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right pdatepvuv02019 09 101399212019 09 0918515322019 09 081235932019 09 07654042019 09 061579852019 09 0520515162019 09 0419616772019 09 0321617682019 09 0222714892019 09 01105612 读取 excel 文件 fpath datas crazyant access pvuv xlsx pvuv pd read excel fpath pvuv dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right 日期 pvuv02019 09 101399212019 09 0918515322019 09 081235932019 09 07654042019 09 061579852019 09 0520515162019 09 0419616772019 09 0321617682019 09 0222714892019 09 01105613 读取 mysql 数据库 import pymysqlconn pymysql connect host 127.0 0.1 user root password 12345678 database test charset utf8 mysql page pd read sql select from crazyant pvuv con conn mysql page dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right pdatepvuv02019 09 101399212019 09 0918515322019 09 081235932019 09 07654042019 09 061579852019 09 0520515162019 09 0419616772019 09 0321617682019 09 0222714892019 09 0110561 本文 代码 地址 https github com peiss ant learn pandas 本文 视频 地址 微信 公众 蚂蚁 python
2502,Pandas系列-DataFrame和Series数据结构,pandas 系列 dataframe series 数据结构 代码 演示 pandas 读取 文本文件 读取 csv 文件 读取 txt 文件 pandas 读取 xlsx 格式 excel 文件 pandas 读取 mysql 数据表 import pandas as pd1 读取 文本文件 1.1 读取 csv 使用 默认 标题 逗号 分隔符 fpath datas ml latest small ratings csv 使用 pd read csv 读取数据 ratings pd read csv fpath 查看 几行 数据 ratings head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right useridmovieidratingtimestamp0114.09649827031134 09649812472164.096498222431475 096498381541505.0964982931 查看 数据 形状 返回 列数 ratings shape 100836 查看 列名 列表 ratings columnsindex userid movieid rating timestamp dtype object 查看 索引 ratings indexrangeindex start stop 100836 step 查看 每列 数据类型 ratings dtypesuserid int64movieid int64rating float64timestamp int64dtype object1.2 读取 txt 文件 自己 指定 分隔符 列名 fpath datas crazyant access pvuv txt pvuv pd read csv fpath sep header none names pdate pv uv pvuv dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right pdatepvuv02019 09 101399212019 09 0918515322019 09 081235932019 09 07654042019 09 061579852019 09 0520515162019 09 0419616772019 09 0321617682019 09 0222714892019 09 01105612 读取 excel 文件 fpath datas crazyant access pvuv xlsx pvuv pd read excel fpath pvuv dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right 日期 pvuv02019 09 101399212019 09 0918515322019 09 081235932019 09 07654042019 09 061579852019 09 0520515162019 09 0419616772019 09 0321617682019 09 0222714892019 09 01105613 读取 mysql 数据库 import pymysqlconn pymysql connect host 127.0 0.1 user root password 12345678 database test charset utf8 mysql page pd read sql select from crazyant pvuv con conn mysql page dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right pdatepvuv02019 09 101399212019 09 0918515322019 09 081235932019 09 07654042019 09 061579852019 09 0520515162019 09 0419616772019 09 0321617682019 09 0222714892019 09 0110561 本文 代码 地址 https github com peiss ant learn pandas 本文 视频 地址 微信 公众 蚂蚁 python
2506,Pandas系列-查询数据的5种方法,pandas 系列 查询 数据 方法 今天 没有 漂亮 ppt 只有 干货 pandas 查询 数据 几种 方法 df loc 方法 根据 标签 查询 df iloc 方法 根据 数字 位置 查询 df where 方法 df query 方法 loc 既能 查询 覆盖 写入 强烈推荐 pandas 使用 df loc 查询 数据 方法 使用 单个 label 查询 数据 使用 列表 批量 查询 使用 数值 区间 进行 范围 查询 使用 条件 表达式 查询 调用函数 查询 注意 以上 查询方法 适用 于行 适用 于列 注意 观察 降维 dataframe series 值微信 公众 蚂蚁 python python 原创 免费视频 分享 import pandas as pd0 读取数据 数据 北京 2018 全年 天气预报 数据 爬虫 教程 参见 python 爬虫 系列 视频 课程 df pd read csv datas beijing tianqi beijing tianqi 2018 csv df head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ymdbwenduywendutianqifengxiangfengliaqiaqiinfoaqilevel02018 01 013 多云 东北风 59 212018 01 022 多云 东北风 49 122018 01 032 多云 北风 28 132018 01 040 东北风 28 142018 01 053 多云 西北风 50 设定 索引 日期 方便 日期 筛选 df set index ymd inplace true 时间 序列 后续 课程 本次 字符串 处理 df indexindex 2018 01 01 2018 01 02 2018 01 03 2018 01 04 2018 01 05 2018 01 06 2018 01 07 2018 01 08 2018 01 09 2018 01 10 ... 2018 12 22 2018 12 23 2018 12 24 2018 12 25 2018 12 26 2018 12 27 2018 12 28 2018 12 29 2018 12 30 2018 12 31 dtype object name ymd length 365 df head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right bwenduywendutianqifengxiangfengliaqiaqiinfoaqilevelymd2018 01 013 多云 东北风 59 22018 01 022 多云 东北风 49 12018 01 032 多云 北风 28 12018 01 040 东北风 28 12018 01 053 多云 西北风 50 替换 温度 后缀 df loc bwendu df bwendu str replace astype int32 df loc ywendu df ywendu str replace astype int32 df dtypesbwendu int32ywendu int32tianqi objectfengxiang objectfengli objectaqi int64aqiinfo objectaqilevel int64dtype objectdf head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right bwenduywendutianqifengxiangfengliaqiaqiinfoaqilevelymd2018 01 013 多云 东北风 59 22018 01 022 多云 东北风 49 12018 01 032 多云 北风 28 12018 01 040 东北风 28 12018 01 053 多云 西北风 50 11 使用 单个 label 查询 数据 或者 可以 传入 单个 实现 精确 匹配 得到 单个 df loc 2018 01 03 bwendu 得到 一个 seriesdf loc 2018 01 03 bwendu ywendu bwendu 2ywendu 5name 2018 01 03 dtype object2 使用 列表 批量 查询 得到 seriesdf loc 2018 01 03 2018 01 04 2018 01 05 bwendu ymd2018 01 03 22018 01 04 02018 01 05 3name bwendu dtype int32 得到 dataframedf loc 2018 01 03 2018 01 04 2018 01 05 bwendu ywendu dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right bwenduywenduymd2018 01 032 52018 01 040 82018 01 053 63 使用 数值 区间 进行 范围 查询 注意 区间 包含 开始 包含 结束 index 区间 df loc 2018 01 03 2018 01 05 bwendu ymd2018 01 03 22018 01 04 02018 01 05 3name bwendu dtype int32 index 区间 df loc 2018 01 03 bwendu fengxiang bwendu 2ywendu 5tianqi 多云 fengxiang 北风 name 2018 01 03 dtype object 行和列 区间 查询 df loc 2018 01 03 2018 01 05 bwendu fengxiang dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right bwenduywendutianqifengxiangymd2018 01 032 多云 北风 2018 01 040 东北风 2018 01 053 多云 西北风 使用 条件 表达式 查询 bool 列表 长度 等于 或者 列数 简单 条件 查询 最低温度 低于 10 列表 df loc df ywendu 10 dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right bwenduywendutianqifengxiangfengliaqiaqiinfoaqilevelymd2018 01 23 12 西北风 31 12018 01 24 11 西南风 34 12018 01 25 11 多云 东北风 27 12018 12 26 11 多云 东北风 26 12018 12 27 12 多云 西北风 48 12018 12 28 11 西北风 40 12018 12 29 12 西北风 29 12018 12 30 11 多云 东北风 31 观察 一下 这里 boolean 条件 df ywendu 10ymd2018 01 01 false2018 01 02 false2018 01 03 false2018 01 04 false2018 01 05 false ... 2018 12 27 true2018 12 28 true2018 12 29 true2018 12 30 true2018 12 31 falsename ywendu length 365 dtype bool 复杂 条件 查询 一下 心中 完美 天气 注意 组合 条件 符号 合并 每个 条件 判断 括号 ## 查询 最高 温度 小于 30 并且 最低温度 大于 15 并且 晴天 并且 天气 数据 df loc df bwendu 30 df ywendu 15 df tianqi df aqilevel dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right bwenduywendutianqifengxiangfengliaqiaqiinfoaqilevelymd2018 08 243020 北风 40 12018 09 072716 西北风 22 北京 天气 这么 稀少 再次 观察 这里 boolean 条件 df bwendu 30 df ywendu 15 df tianqi df aqilevel ymd2018 01 01 false2018 01 02 false2018 01 03 false2018 01 04 false2018 01 05 false ... 2018 12 27 false2018 12 28 false2018 12 29 false2018 12 30 false2018 12 31 falselength 365 dtype bool5 调用函数 查询 直接 lambda 表达式 df loc lambda df df bwendu 30 df ywendu 15 dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right bwenduywendutianqifengxiangfengliaqiaqiinfoaqilevelymd2018 04 282717 西南风 125 轻度 污染 32018 04 293016 云南 193 中度 污染 42018 05 042716 多云 西南风 86 22018 05 092917 多云 西南风 79 22018 05 102618 云南 118 轻度 污染 ........................... 2018 09 152615 多云 北风 42 12018 09 172717 多云 北风 37 12018 09 182517 多云 西南风 50 12018 09 192617 云南 52 22018 09 202716 多云 西南风 63 264 rows columns 编写 自己 函数 查询 月份 空气质量 数据 def query my data df return df index str startswith 2018 09 df aqilevel 1df loc query my data dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right bwenduywendutianqifengxiangfengliaqiaqiinfoaqilevelymd2018 09 012719 小雨 南风 50 12018 09 043118 西南风 24 12018 09 053119 多云 西南风 34 12018 09 062718 多云 西北风 37 12018 09 072716 西北风 22 12018 09 082715 多云 北风 28 12018 09 132920 多云 南风 107 轻度 污染 32018 09 142819 小雨 云南 128 轻度 污染 32018 09 152615 多云 北风 42 12018 09 162514 多云 北风 29 12018 09 172717 多云 北风 37 12018 09 182517 多云 西南风 50 12018 09 212514 西北风 50 12018 09 222413 西北风 28 12018 09 232312 西北风 28 12018 09 242311 北风 28 12018 09 252412 云南 44 12018 09 292211 北风 21 12018 09 301913 多云 西北风 22 本文 代码 地址 https github com peiss ant learn pandas 本文 视频 地址 微信 公众 蚂蚁 python
2515,Pandas怎样按条件删除行？,pandas 怎样 条件 删除 来自 https stackoverflow com questions 13851535 delete rows from pandas dataframe based on conditional expression involvingto directly answer this question original title how to delete rows from pandas dataframe based on conditional expression which understand is not necessarily the op problem but could help other users coming across this question one way to do this is to use the drop method df df drop some labels df df drop df index exampleto remove all rows where column score is 50 df df drop df df score 50 index in place version as pointed out in comments df drop df df score 50 index inplace true multiple conditions see boolean indexing the operators are for or for and and for not these must be grouped by using parentheses to remove all rows where column score is 50 and 20df df drop df df score 50 df score 20 index
2517,Pandas怎样根据码表更新ID对应的名称？,pandas 怎样 根据 码表 更新 id 对应 名称 数据库 获取 码表 sql select category id category name from tb category category dict category name category id for in querybysql sql df 使用 apply 添加 一列 iddf loc category id df apply lambda category dict get 分类 axis 这里 axis 那么 每次 遍历 每个 row series 这个 series key 每列 column name
2521,Pandas系列 - 数据统计函数,pandas 系列 数据 统计 函数 汇总 统计 唯一 按值 计数 相关系数 协方差 import pandas as pd0 读取 csv 数据 fpath datas beijing tianqi beijing tianqi 2018 csv df pd read csv fpath df head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ymdbwenduywendutianqifengxiangfengliaqiaqiinfoaqilevel02018 01 013 多云 东北风 59 212018 01 022 多云 东北风 49 122018 01 032 多云 北风 28 替换 温度 后缀 df loc bwendu df bwendu str replace astype int32 df loc ywendu df ywendu str replace astype int32 df head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ymdbwenduywendutianqifengxiangfengliaqiaqiinfoaqilevel02018 01 013 多云 东北风 59 212018 01 022 多云 东北风 49 122018 01 032 多云 北风 28 11 汇总 统计 一下子 提取 所有 数字 统计 结果 df describe dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right bwenduywenduaqiaqilevelcount365.000000365 000000365.000000365 000000mean18.6657538 35890482.1835622 090411std11.85804611 75505351.9361591 029798min 5.000000 12.00000021 0000001.00000025% 8.000000 3.00000046 0000001.00000050% 21.0000008 00000069.0000002 00000075% 29.00000019 000000104.0000003 000000max38.00000027 000000387.0000006 000000 ## 查看 单个 series 数据 df bwendu mean 18.665753424657535 高温 df bwendu max 38 最低温 df bwendu min 52 唯一 按值 计数 2.1 唯一性 一般 用于 数值 而是 枚举 分类 df fengxiang unique array 东北风 北风 西北风 西南风 南风 东南风 东风 西风 dtype object df tianqi unique array 多云 多云 多云 多云 多云 小雪 小雪 多云 小雨 小雨 雨夹雪 多云 小雨 小雨 多云 大雨 小雨 小雨 小雨 多云 雷阵雨 雷阵雨 多云 雷阵雨 雷阵雨 雷阵雨 大雨 中雨 雷阵雨 小雨 大雨 暴雨 雷阵雨 雷阵雨 中雨 小雨 雷阵雨 雷阵雨 中雨 小雨 小雨 中雨 多云 dtype object df fengli unique array dtype object 2.2 按值 计数 df fengxiang value counts 南风 92 西南风 64 北风 54 西北风 51 东南风 46 东北风 38 东风 14 西风 6name fengxiang dtype int64df tianqi value counts 101 多云 95 多云 40 多云 34 多云 雷阵雨 14 多云 10 多云 小雨 多云 雷阵雨 雷阵雨 多云 小雨 多云 小雨 雷阵雨 中雨 中雨 小雨 中雨 雷阵雨 小雨 小雪 小雪 多云 大雨 小雨 小雨 雷阵雨 小雨 中雨 小雨 雨夹雪 多云 雷阵雨 暴雨 雷阵雨 小雨 雷阵雨 大雨 雷阵雨 小雨 大雨 1name tianqi dtype int64df fengli value counts 2363 681 214 202 133 7name fengli dtype int643 相关系数 协方差 用途 超级 厉害 两只 股票 是不是 同涨 同跌 程度 多大 相关 还是 负相关 产品 销量 波动 哪些因素 相关 负相关 程度 来自 知乎 对于 两个 变量 协方差 衡量 反向 程度 如果 协方差 说明 同向 变化 协方差 越大 说明 程度 越高 如果 协方差 说明 反向运动 协方差 越小 说明 反向 程度 越高 相关系数 衡量 相似 程度 他们 相关系数 说明 两个 变量 变化 正向 相似 最大 相关系数 说明 两个 变量 变化 反向 相似 最大 协方差 矩阵 df cov dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right bwenduywenduaqiaqilevelbwendu140.613247135 52963347.4626220 879204ywendu135.529633138 18127416.1866850 264165aqi47.46262216 1866852697.36456450 749842aqilevel0.8792040 26416550.7498421 060485 相关系数 矩阵 df corr dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right bwenduywenduaqiaqilevelbwendu1.0000000 9722920.0770670 071999ywendu0.9722921 0000000.0265130 021822aqi0.0770670 0265131.0000000 948883aqilevel0.0719990 0218220.9488831 000000 单独 查看 空气质量 最高 温度 相关系数 df aqi corr df bwendu 0.07706705916811077 df aqi corr df ywendu 0.02651328267296879 空气质量 温差 相关系数 df aqi corr df bwendu df ywendu 0.21652257576382047 就是 特征 工程 对于 机器 学习 重要性 一个 例子 0.21 0.0210
2523,Pandas系列 - 怎样新增数据列？,pandas 系列 怎样 新增 数据 进行 数据分析 经常 需要 按照 一定 条件 创建 数据 然后 进行 进一步 分析 直接 赋值 df apply 方法 df assign 方法 条件 选择 分组 分别 赋值 微信 公众 蚂蚁 pythonimport pandas as pd0 读取 csv 数据 dataframefpath datas beijing tianqi beijing tianqi 2018 csv df pd read csv fpath df head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ymdbwenduywendutianqifengxiangfengliaqiaqiinfoaqilevel02018 01 013 多云 东北风 59 212018 01 022 多云 东北风 49 122018 01 032 多云 北风 28 132018 01 040 东北风 28 142018 01 053 多云 西北风 50 11 直接 赋值 方法 实例 清理 温度 变成 数字 类型 替换 温度 后缀 df loc bwendu df bwendu str replace astype int32 df loc ywendu df ywendu str replace astype int32 df head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ymdbwenduywendutianqifengxiangfengliaqiaqiinfoaqilevel02018 01 013 多云 东北风 59 212018 01 022 多云 东北风 49 122018 01 032 多云 北风 28 132018 01 040 东北风 28 142018 01 053 多云 西北风 50 实例 计算 温差 注意 df bwendu 其实 一个 series 后面 减法 返回 seriesdf loc wencha df bwendu df ywendu df head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ymdbwenduywendutianqifengxiangfengliaqiaqiinfoaqilevelwencha02018 01 013 多云 东北风 59 2912018 01 022 多云 东北风 49 1722018 01 032 多云 北风 28 1732018 01 040 东北风 28 1842018 01 053 多云 西北风 50 192 df apply 方法 apply function along an axis of the dataframe objects passed to the function are series objects whose index is either the dataframe index axis or the dataframe columns axis 实例 添加 一列 温度 类型 如果 最高 温度 大于 33 就是 高温 低于 10 低温 否则 常温 def get wendu type if bwendu 33 return 高温 if ywendu 10 return 低温 return 常温 注意 需要 设置 axis 这是 series index columnsdf loc wendu type df apply get wendu type axis 查看 温度 类型 计数 df wendu type value counts 常温 328 高温 29 低温 8name wendu type dtype int643 df assign 方法 assign new columns to dataframe returns new object with all original columns in addition to new ones 实例 温度 摄氏度 变成 华氏度 可以 同时 添加 多个 df assign ywendu huashi lambda ywendu 32 摄氏度 华氏度 bwendu huashi lambda bwendu 32 dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ymdbwenduywendutianqifengxiangfengliaqiaqiinfoaqilevelwenchawendu typeywendu huashibwendu huashi02018 01 013 多云 东北风 59 29 常温 21.237 412018 01 022 多云 东北风 49 17 常温 23.035 622018 01 032 多云 北风 28 17 常温 23.035 632018 01 040 东北风 28 18 常温 17.632 042018 01 053 多云 西北风 50 19 常温 21.237 .......................................... 3602018 12 27 12 多云 西北风 48 17 低温 10.423 03612018 12 28 11 西北风 40 18 低温 12.226 63622018 12 29 12 西北风 29 19 低温 10.426 63632018 12 30 11 多云 东北风 31 19 低温 12.228 43642018 12 31 10 多云 东北风 56 28 常温 14.028 4365 rows 13 columns4 条件 选择 分组 分别 赋值 条件 选择 数据 然后 这部分 数据 赋值 新列 实例 高低 温差 大于 10 认为 温差 创建 空列 这是 第一种 创建 新列 方法 df wencha type df loc df bwendu df ywendu 10 wencha type 温差 df loc df bwendu df ywendu 10 wencha type 温差 正常 df wencha type value counts 温差 正常 187 温差 178name wencha type dtype int64
2525,3分钟Python爬取9000张表情包图片,分钟 python 爬取 9000 表情 图片 先看 成果 视频 演示 步骤 使用 requests 爬取 200 网页 使用 beautifulsoup 实现 图片 标题 地址 解析 图片下载 本地 目录 个库 详细 用法 其他 视频 课程 import requestsfrom bs4 import beautifulsoupimport re1 下载 200 页面 htmldef download all htmls 下载 所有 列表 页面 html 用于 后续 分析 htmls for idx in range 200 url https fabiaoqing com biaoqing lists page idx html print craw html url requests get url if status code 200 raise exception error htmls append text print success return htmls 执行 爬取 htmls download all htmls craw html https fabiaoqing com biaoqing lists page htmlcraw html https fabiaoqing com biaoqing lists page htmlcraw html https fabiaoqing com biaoqing lists page htmlcraw html https fabiaoqing com biaoqing lists page htmlcraw html https fabiaoqing com biaoqing lists page 188 htmlcraw html https fabiaoqing com biaoqing lists page 189 htmlcraw html https fabiaoqing com biaoqing lists page 190 htmlcraw html https fabiaoqing com biaoqing lists page 191 htmlcraw html https fabiaoqing com biaoqing lists page 192 htmlcraw html https fabiaoqing com biaoqing lists page 193 htmlcraw html https fabiaoqing com biaoqing lists page 194 htmlcraw html https fabiaoqing com biaoqing lists page 195 htmlcraw html https fabiaoqing com biaoqing lists page 196 htmlcraw html https fabiaoqing com biaoqing lists page 197 htmlcraw html https fabiaoqing com biaoqing lists page 198 htmlcraw html https fabiaoqing com biaoqing lists page 199 htmlcraw html https fabiaoqing com biaoqing lists page 200 htmlsuccesshtmls 1000 html head meta charset utf meta name viewport content width device width initial scale 1.0 maximum scale 1.0 user scalable no meta http equiv ua compatible content ie edge meta http equiv content type content text html charset utf title 热门 表情 发表 表情 大全 fabiaoqing com title meta name keywords content 热门 表情 表情 聊天 表情 微信 表情 qq 表情 发表 表情 大全 表情 下载 表情 下载 表情 大战 表情 表情 集中营 斗图 meta name description content 全网 热门 表情 发表 最大 最全 表情 网站 分享 最新 最热 表情 聊天 表情 微信 表情 qq 表情 馆长 表情 蘑菇 表情 包等 各类 表情 meta name referrer content no referrer link rel stylesheet type text css href lib baomitu com semantic ui 2.2 semantic min css link rel stylesheet type text css href public css fbq css 2018 script data ad client ca pub 5486123269162001 async src https pagead2 googlesyndication com pagead js adsbygoogle js script script async src pagead2 googlesyndication com pagead js adsbygoogle 解析 html 得到 所有 图片 标题 url 地址 def parse single html html 解析 单个 html 得到 数据 return list img title img url soup beautifulsoup html html parser img divs soup find all div class tagbqppdiv datas for img div in img divs img node img div find img if not img node continue datas append img node title img node data original return datasimport pprintpprint pprint parse single html htmls 10 阿弥陀佛 施主 放下 立地成佛 http ww2 sinaimg cn bmiddle 9150e4e5gy1g6qlfb10avj20d70f7gmf jpg 看见 草莓 果酱 ox 白眼 gif 动图 表情 http wx1 sinaimg cn bmiddle 006apofyly1g68tiftpbmg30bh0bh4o5 gif http wx3 sinaimg cn bmiddle 006qir4ogy1g54eoes2q2j309q09cdgh jpg 人生 只要 这样 混日子 幸福 http ww4 sinaimg cn bmiddle 9150e4e5gy1g6qm7x6fiuj20mw0mmt9y jpg 草莓 果酱 ox 动图 表情 http wx1 sinaimg cn bmiddle ceeb653ely1g64664qyc0g20bf0br4jn gif 放屁 沙雕 羊驼 动图 表情 http wx1 sinaimg cn bmiddle 78b88159gy1g69cze2hkkg20bp0bpx0y gif 群里 转转 熊猫 旋转 gif 动图 http wx1 sinaimg cn bmiddle ceeb653ely1g68tzab8xng207608wwou gif 我爱你 草莓 果酱 oxgif 动图 表情 http wx2 sinaimg cn bmiddle 006apofyly1g68uwg8djlg30b60b6e57 gif 锁屏 带薪 拉屎 http wx3 sinaimg cn bmiddle ceeb653ely1g654hwdsjkg20dc0avgm4 gif 我要 可爱 草莓 果酱 ox 表情 http wx2 sinaimg cn bmiddle bf976b12gy1g68hx2gtleg208c08bk8q gif 执行 所有 html 页面 解析 all imgs for html in htmls all imgs extend parse single html html all imgs 10 阿弥陀佛 施主 放下 立地成佛 http ww2 sinaimg cn bmiddle 9150e4e5gy1g6qlfb10avj20d70f7gmf jpg 看见 草莓 果酱 ox 白眼 gif 动图 表情 http wx1 sinaimg cn bmiddle 006apofyly1g68tiftpbmg30bh0bh4o5 gif http wx3 sinaimg cn bmiddle 006qir4ogy1g54eoes2q2j309q09cdgh jpg 人生 只要 这样 混日子 幸福 http ww4 sinaimg cn bmiddle 9150e4e5gy1g6qm7x6fiuj20mw0mmt9y jpg 草莓 果酱 ox 动图 表情 http wx1 sinaimg cn bmiddle ceeb653ely1g64664qyc0g20bf0br4jn gif 放屁 沙雕 羊驼 动图 表情 http wx1 sinaimg cn bmiddle 78b88159gy1g69cze2hkkg20bp0bpx0y gif 群里 转转 熊猫 旋转 gif 动图 http wx1 sinaimg cn bmiddle ceeb653ely1g68tzab8xng207608wwou gif 我爱你 草莓 果酱 oxgif 动图 表情 http wx2 sinaimg cn bmiddle 006apofyly1g68uwg8djlg30b60b6e57 gif 锁屏 带薪 拉屎 http wx3 sinaimg cn bmiddle ceeb653ely1g654hwdsjkg20dc0avgm4 gif 我要 可爱 草莓 果酱 ox 表情 http wx2 sinaimg cn bmiddle bf976b12gy1g68hx2gtleg208c08bk8q gif len all imgs 89993 下载 图片 本地 目录 for idx title img url in enumerate all imgs 移除 标点符号 保留 中文 小写字母 阿拉伯数字 reg 9a za u4e00 u9fa5 title re sub reg title 发现 超长 图片 标题 截断 if len title 10 title title 10 得到 jpg 还是 gif 后缀 post fix img url filename output title post fix print idx filename img data requests get img url with open filename wb as write img data content print success output 阿弥陀佛 施主 放下 jpg1 output 看见 草莓 果酱 gif2 output jpg3 output 人生 只要 这样 jpg4 output 草莓 果酱 ox 动图 表情 gif5 output 放屁 沙雕 羊驼 动图 gif6 output 群里 转转 熊猫 旋转 gif7 output 我爱你 草莓 果酱 oxg gif8 output 锁屏 带薪 拉屎 gif9 output 我要 可爱 草莓 果酱 gif10 output 尼玛 jpg11 output 今天 表现 10 gif12 output 烦人 找个 理由 gif13 output 草莓 果酱 ox 表情 jpg14 output 哥哥 乔碧萝表 gif15 output 锁屏 带薪 拉屎 gif16 output 简直 难上加难 麻将 jpg 本文 配套 视频 讲解 关注 公众 蚂蚁 python 观看
2528,Pandas的SettingWithCopyWarning报警怎么回事？,pandas settingwithcopywarning 报警 怎么回事 本文 实例 演示 报警 复现 原因 解决方案 读取数据 import pandas as pdfpath datas beijing tianqi beijing tianqi 2018 csv df pd read csv fpath df head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ymdbwenduywendutianqifengxiangfengliaqiaqiinfoaqilevel02018 01 013 多云 东北风 59 212018 01 022 多云 东北风 49 122018 01 032 多云 北风 28 132018 01 040 东北风 28 142018 01 053 多云 西北风 50 替换 温度 后缀 df loc bwendu df bwendu str replace astype int32 df loc ywendu df ywendu str replace astype int32 df head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ymdbwenduywendutianqifengxiangfengliaqiaqiinfoaqilevel02018 01 013 多云 东北风 59 212018 01 022 多云 东北风 49 122018 01 032 多云 北风 28 132018 01 040 东北风 28 142018 01 053 多云 西北风 50 11 复现 选出 月份 数据 用于 分析 condition df ymd str startswith 2018 03 设置 温差 df condition wen cha df bwendu df ywendu appdata python37 lib site packages ipykernel launcher py settingwithcopywarning value is trying to be set on copy of slice from dataframe try using loc row indexer col indexer value insteadsee the caveats in the documentation http pandas pydata org pandas docs stable user guide indexing html returning view versus copy 查看 是否 修改 成功 df condition head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ymdbwenduywendutianqifengxiangfengliaqiaqiinfoaqilevel592018 03 018 多云 西南风 46 1602018 03 029 多云 北风 95 2612018 03 03133 多云 北风 214 重度 污染 5622018 03 047 多云 东南风 144 轻度 污染 3632018 03 058 南风 94 22 原因 发出 警告 代码 df condition wen cha df bwendu df ywendu 相当于 df get condition set wen cha 第一 步骤 get 发出 报警 链式 操作 其实 两个 步骤 get set get 得到 dataframe 可能 view 可能 copy pandas 发出 警告 官网 文档 https pandas pydata org pandas docs stable user guide indexing html returning view versus copy 核心 要诀 pandas dataframe 修改 操作 允许 dataframe 进行 一步到位 解决 方法 get set 两步 操作 改成 set 一步 操作 df loc condition wen cha df bwendu df ywendu df condition head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ymdbwenduywendutianqifengxiangfengliaqiaqiinfoaqilevelwen cha592018 03 018 多云 西南风 46 111.0602018 03 029 多云 北风 95 210.0612018 03 03133 多云 北风 214 重度 污染 510.0622018 03 047 多云 东南风 144 轻度 污染 39.0632018 03 058 南风 94 211.04 解决 方法 如果 需要 筛选 数据 后续 处理 分析 使用 copy 复制 dataframedf month3 df condition copy df month3 head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ymdbwenduywendutianqifengxiangfengliaqiaqiinfoaqilevelwen cha592018 03 018 多云 西南风 46 111.0602018 03 029 多云 北风 95 210.0612018 03 03133 多云 北风 214 重度 污染 510.0622018 03 047 多云 东南风 144 轻度 污染 39.0632018 03 058 南风 94 211.0 df month3 wen cha df bwendu df ywendu df month3 head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ymdbwenduywendutianqifengxiangfengliaqiaqiinfoaqilevelwen cha592018 03 018 多云 西南风 46 111602018 03 029 多云 北风 95 210612018 03 03133 多云 北风 214 重度 污染 510622018 03 047 多云 东南风 144 轻度 污染 39632018 03 058 南风 94 211 总之 pandas 允许 筛选 dataframe 进行 修改 写入 要么 使用 loc 实现 一个 步骤 直接 修改 dataframe 要么 复制 一个 dataframe 一个 步骤 执行 修改 文章 配套 视频 讲解 关注 公众 蚂蚁 python 获取
2532,Pandas对缺失值的处理,pandas 缺失 处理 pandas 使用 这些 函数 处理 缺失 isnull notnull 检测 是否是 空值 用于 df series dropna 丢弃 删除 缺失 axis 删除 还是 or index or columns default how 如果 等于 any 任何 值为 删除 如果 等于 all 所有 空才 删除 inplace 如果 true 修改 当前 df 否则 返回 df fillna 填充 空值 value 用于 填充 可以 单个 或者 字典 key 列名 value method 等于 ffill 使用 一个 不为 填充 forword fill 等于 bfill 使用 一个 不为 填充 backword fill axis 按行 还是 填充 or index or columns inplace 如果 true 修改 当前 df 否则 返回 dfimport pandas as pd 实例 特殊 excel 读取 清洗 处理 步骤 读取 excel 时候 忽略 几个 空行 studf pd read excel datas student excel student excel xlsx skiprows studf dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right unnamed 姓名 科目 分数 0nan 小明 语文 85.01 nannan 数学 80.02 nannan 英语 90.03 nannannannan4nan 小王 语文 85.05 nannan 数学 nan6nannan 英语 90.07 nannannannan8nan 小刚 语文 85.09 nannan 数学 80.010 nannan 英语 90.0 步骤 检测 空值 studf isnull dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right unnamed 姓名 科目 分数 0truefalsefalsefalse1truetruefalsefalse2truetruefalsefalse3truetruetruetrue4truefalsefalsefalse5truetruefalsetrue6truetruefalsefalse7truetruetruetrue8truefalsefalsefalse9truetruefalsefalse10truetruefalsefalsestudf 分数 isnull false1 false2 false3 true4 false5 true6 false7 true8 false9 false10 falsename 分数 dtype boolstudf 分数 notnull true1 true2 true3 false4 true5 false6 true7 false8 true9 true10 truename 分数 dtype bool 筛选 没有 分数 所有 studf loc studf 分数 notnull dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right unnamed 姓名 科目 分数 0nan 小明 语文 85.01 nannan 数学 80.02 nannan 英语 90.04 nan 小王 语文 85.06 nannan 英语 90.08 nan 小刚 语文 85.09 nannan 数学 80.010 nannan 英语 90.0 步骤 删除 全是 空值 studf dropna axis columns how all inplace true studf dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right 姓名 科目 分数 小明 语文 85.01 nan 数学 80.02 nan 英语 90.03 nannannan4 小王 语文 85.05 nan 数学 nan6nan 英语 90.07 nannannan8 小刚 语文 85.09 nan 数学 80.010 nan 英语 90.0 步骤 删除 全是 空值 studf dropna axis index how all inplace true studf dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right 姓名 科目 分数 小明 语文 85.01 nan 数学 80.02 nan 英语 90.04 小王 语文 85.05 nan 数学 nan6nan 英语 90.08 小刚 语文 85.09 nan 数学 80.010 nan 英语 90.0 步骤 分数 列为 填充 studf fillna 分数 dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right 姓名 科目 分数 小明 语文 85.01 nan 数学 80.02 nan 英语 90.04 小王 语文 85.05 nan 数学 0.06 nan 英语 90.08 小刚 语文 85.09 nan 数学 80.010 nan 英语 90.0 等同于 studf loc 分数 studf 分数 fillna studf dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right 姓名 科目 分数 小明 语文 85.01 nan 数学 80.02 nan 英语 90.04 小王 语文 85.05 nan 数学 0.06 nan 英语 90.08 小刚 语文 85.09 nan 数学 80.010 nan 英语 90.0 步骤 姓名 缺失 填充 使用 前面 有效值 填充 ffill forward fillstudf loc 姓名 studf 姓名 fillna method ffill studf dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right 姓名 科目 分数 小明 语文 85.01 小明 数学 80.02 小明 英语 90.04 小王 语文 85.05 小王 数学 0.06 小王 英语 90.08 小刚 语文 85.09 小刚 数学 80.010 小刚 英语 90.0 步骤 清洗 excel 保存 studf to excel datas student excel student excel clean xlsx index false 文章 配套 视频 讲解 关注 公众 蚂蚁 python 获取
2534,CTR预估：(标签-权重)列表类特征怎么输入到模型？,ctr 预估 标签 权重 列表 特征 怎么 输入 模型 问题 一个 ctr 预估 模型 通过 之前 数据挖掘 得到 用户 标签 偏好 数据 标签 0.8 标签 0.65 标签 0.32 标签 0.05 列表 一个 元素 包含 两个 分量 分别 标签 偏好 权重 问题 这样 一个 特征 怎样 输入 模型 知道 对于 标签 标签 标签 这样 分类 特征 可以 one hot 编码 然而 知道 这里 权重 怎么 使用 想到 方法 先给 标签 标签 标签 one hot 编码 然后 自己 找到 每个 数字 位置 数字 替换成 权重 所有 标签 映射 一个 数组 找到 标签 数组 下标 设置 权重 其他 两种 方法 更好 或者 其他 方法 这个 问题 其他 场景 用户 历史 行为 比如 播放 id 列表 统计 得到 播放 itemid 频次 列表 怎么 作为 特征 输入 模型 方法 可以 直接 权重 作为 那一 维度 特征 就是 比如 favori entity 延禧 攻略 这个 特征 特征值 就是 weight2 可以 看成 特殊 one hot one hot 里面 weight 代替 作为 一个 连续 特征 一种 做法 打平 单独 维度 特征 如果 tensorflow 问题 答案 这个 文章 https zhuanlan zhihu com 41663141 超级 详细 单个 特征 分类 怎么 处理 比如 cat cat cat cat 如果 加权 cat 列表 怎么办 比如 用户 tag 偏好 列表 it 音乐 0.6 对于 第一个 问题 cat vocu list 加上 indicator column 第二个 weighted categorical column
2536,Pandas怎样对数据进行排序？,pandas 怎样 数据 进行 排序 series 排序 series sort values ascending true inplace false 参数 说明 ascending 默认 true 升序 排序 false 降序 排序 inplace 是否 修改 原始 seriesdataframe 排序 dataframe sort values by ascending true inplace false 参数 说明 by 字符串 或者 list 字符串 单列 排序 或者 多列 排序 ascending bool 或者 list 升序 还是 降序 如果 list 对应 by 多列 inplace 是否 修改 原始 dataframeimport pandas as pd0 读取数据 fpath datas beijing tianqi beijing tianqi 2018 csv df pd read csv fpath 替换 温度 后缀 df loc bwendu df bwendu str replace astype int32 df loc ywendu df ywendu str replace astype int32 df head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ymdbwenduywendutianqifengxiangfengliaqiaqiinfoaqilevel02018 01 013 多云 东北风 59 212018 01 022 多云 东北风 49 122018 01 032 多云 北风 28 132018 01 040 东北风 28 142018 01 053 多云 西北风 50 11 series 排序 df aqi sort values 271 21281 21249 22272 22301 22 ... 317 26671 28791 28772 29386 387name aqi length 365 dtype int64df aqi sort values ascending false 86 38772 29391 28771 287317 266 ... 301 22272 22249 22281 21271 21name aqi length 365 dtype int64df tianqi sort values 225 中雨 小雨 230 中雨 小雨 197 中雨 雷阵雨 196 中雨 雷阵雨 112 多云 ... 191 雷阵雨 大雨 219 雷阵雨 335 多云 353 348 name tianqi length 365 dtype object2 dataframe 排序 2.1 单列 排序 df sort values by aqi dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ymdbwenduywendutianqifengxiangfengliaqiaqiinfoaqilevel2712018 09 292211 北风 21 12812018 10 09154 多云 西北风 21 12492018 09 072716 西北风 22 12722018 09 301913 多云 西北风 22 13012018 10 29153 北风 22 .............................. 3172018 11 14135 云南 266 重度 污染 5712018 03 13175 云南 287 重度 污染 5912018 04 022611 多云 北风 287 重度 污染 5722018 03 14156 多云 东北风 293 重度 污染 5862018 03 28259 多云 东风 387 严重 污染 6365 rows columnsdf sort values by aqi ascending false dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ymdbwenduywendutianqifengxiangfengliaqiaqiinfoaqilevel862018 03 28259 多云 东风 387 严重 污染 6722018 03 14156 多云 东北风 293 重度 污染 5712018 03 13175 云南 287 重度 污染 5912018 04 022611 多云 北风 287 重度 污染 53172018 11 14135 云南 266 重度 污染 .............................. 2492018 09 072716 西北风 22 13012018 10 29153 北风 22 12722018 09 301913 多云 西北风 22 12712018 09 292211 北风 21 12812018 10 09154 多云 西北风 21 1365 rows columns2.2 多列 排序 空气质量 等级 最高 温度 排序 默认 升序 df sort values by aqilevel bwendu dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ymdbwenduywendutianqifengxiangfengliaqiaqiinfoaqilevel3602018 12 27 12 多云 西北风 48 1222018 01 23 12 西北风 31 1232018 01 24 11 西南风 34 13402018 12 07 10 西北风 33 1212018 01 22 10 小雪 多云 东风 47 .............................. 712018 03 13175 云南 287 重度 污染 5902018 04 012511 云南 218 重度 污染 5912018 04 022611 多云 北风 287 重度 污染 5852018 03 272711 南风 243 重度 污染 5862018 03 28259 多云 东风 387 严重 污染 6365 rows columns 两个 字段 降序 df sort values by aqilevel bwendu ascending false dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ymdbwenduywendutianqifengxiangfengliaqiaqiinfoaqilevel862018 03 28259 多云 东风 387 严重 污染 6852018 03 272711 南风 243 重度 污染 5912018 04 022611 多云 北风 287 重度 污染 5902018 04 012511 云南 218 重度 污染 5712018 03 13175 云南 287 重度 污染 .............................. 3622018 12 29 12 西北风 29 1222018 01 23 12 西北风 31 1232018 01 24 11 西南风 34 13402018 12 07 10 西北风 33 13602018 12 27 12 多云 西北风 48 1365 rows columns 分别 指定 升序 降序 df sort values by aqilevel bwendu ascending true false dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ymdbwenduywendutianqifengxiangfengliaqiaqiinfoaqilevel1782018 06 283524 多云 北风 33 11492018 05 303318 西风 46 12062018 07 263325 多云 雷阵雨 东北风 40 11582018 06 083219 多云 雷阵雨 西南风 43 12052018 07 253225 多云 北风 28 .............................. 3172018 11 14135 云南 266 重度 污染 53292018 11 26100 多云 东南风 245 重度 污染 53352018 12 0292 多云 东北风 234 重度 污染 5572018 02 2770 东风 220 重度 污染 5862018 03 28259 多云 东风 387 严重 污染 6365 rows columns 文章 配套 视频 讲解 关注 公众 蚂蚁 python 查看 视频 获取 源码
2541,Pandas怎样处理字符串？,pandas 怎样 处理 字符串 前面 我们 已经 使用 字符串 处理函数 df bwendu str replace astype int32 pandas 字符串 处理 使用 方法 获取 series str 属性 然后 属性 调用函数 只能 字符串 使用 不能 数字 使用 dataframe 没有 str 属性 处理 方法 series str 不是 python 原生 字符串 而是 自己 一套 方法 不过 大部分 原生 str 相似 series str 字符串 方法 列表 参考 文档 https pandas pydata org pandas docs stable reference series html string handling 本节 演示 内容 获取 series str 属性 然后 使用 各种 字符串 处理函数 使用 str startswith contains bool series 可以 条件 查询 需要 多次 str 处理 链式 操作 使用 正则表达式 处理 读取 北京 2018 天气 数据 import pandas as pdfpath datas beijing tianqi beijing tianqi 2018 csv df pd read csv fpath df head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ymdbwenduywendutianqifengxiangfengliaqiaqiinfoaqilevel02018 01 013 多云 东北风 59 212018 01 022 多云 东北风 49 122018 01 032 多云 北风 28 132018 01 040 东北风 28 142018 01 053 多云 西北风 50 1df dtypesymd objectbwendu objectywendu objecttianqi objectfengxiang objectfengli objectaqi int64aqiinfo objectaqilevel int64dtype object1 获取 series str 属性 使用 各种 字符串 处理函数 df bwendu str pandas core strings stringmethods at 0x1af21871808 字符串 替换 函数 df bwendu str replace 31 22 23 04 .. 360 5361 3362 3363 2364 2name bwendu length 365 dtype object 判断 是不是 数字 df bwendu str isnumeric false1 false2 false3 false4 false ... 360 false361 false362 false363 false364 falsename bwendu length 365 dtype booldf aqi str len --------------------------------------------------------------------------- attributeerror traceback most recent call last ipython input 12cdcbdb6f81 in module ---- df aqi str len appdata python37 lib site packages pandas core generic py in __ getattr __ self name 5173 or name in self ._ accessors 5174 5175 return object .__ getattribute __ self name 5176 else 5177 if self ._ info axis ._ can hold identifiers and holds name name appdata python37 lib site packages pandas core accessor py in __ get __ self obj cls 173 we re accessing the attribute of the class dataset geo 174 return self ._ accessor -- 175 accessor obj self ._ accessor obj 176 replace the property with the accessor object inspired by 177 http www pydanny com cached property htmld appdata python37 lib site packages pandas core strings py in __ init __ self data 1915 1916 def __ init __ self data 1917 self ._ inferred dtype self ._ validate data 1918 self ._ is categorical is categorical dtype data 1919 appdata python37 lib site packages pandas core strings py in validate data 1965 1966 if inferred dtype not in allowed types 1967 raise attributeerror can only use str accessor with string values 1968 return inferred dtype 1969 attributeerror can only use str accessor with string values 使用 str startswith contains 得到 bool series 可以 条件 查询 condition df ymd str startswith 2018 03 condition0 false1 false2 false3 false4 false ... 360 false361 false362 false363 false364 falsename ymd length 365 dtype booldf condition head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ymdbwenduywendutianqifengxiangfengliaqiaqiinfoaqilevel592018 03 018 多云 西南风 46 1602018 03 029 多云 北风 95 2612018 03 0313 多云 北风 214 重度 污染 5622018 03 047 多云 东南风 144 轻度 污染 3632018 03 058 南风 94 23 需要 多次 str 处理 链式 操作 怎样 提取 201803 这样 数字 月份 日期 2018 03 31 替换成 20180331 形式 提取 月份 字符串 201803df ymd str replace 201801011 201801022 201801033 201801044 20180105 ... 360 20181227361 20181228362 20181229363 20181230364 20181231name ymd length 365 dtype object 每次 调用函数 返回 一个 seriesdf ymd str replace slice --------------------------------------------------------------------------- attributeerror traceback most recent call last ipython input 13 ae278fb12255 in module 每次 调用函数 返回 一个 series ---- df ymd str replace slice appdata python37 lib site packages pandas core generic py in __ getattr __ self name 5177 if self ._ info axis ._ can hold identifiers and holds name name 5178 return self name 5179 return object .__ getattribute __ self name 5180 5181 def __ setattr __ self name value attributeerror series object has no attribute slice df ymd str replace str slice 2018011 2018012 2018013 2018014 201801 ... 360 201812361 201812362 201812363 201812364 201812name ymd length 365 dtype object slice 就是 切片 语法 可以 直接 df ymd str replace str 2018011 2018012 2018013 2018014 201801 ... 360 201812361 201812362 201812363 201812364 201812name ymd length 365 dtype object4 使用 正则表达式 处理 添加 新列 def get nianyueri year month day ymd split return year month day df 中文 日期 df apply get nianyueri axis df 中文 日期 2018 01 01 2018 01 02 2018 01 03 2018 01 04 2018 01 05 ... 360 2018 12 27 361 2018 12 28 362 2018 12 29 363 2018 12 30 364 2018 12 31 name 中文 日期 length 365 dtype object 问题 怎样 2018 12 31 三个 中文 字符 去除 方法 链式 replacedf 中文 日期 str replace str replace str replace 201801011 201801022 201801033 201801044 20180105 ... 360 20181227361 20181228362 20181229363 20181230364 20181231name 中文 日期 length 365 dtype objectseries str 默认 开启 正则表达式 模式 方法 正则表达式 替换 df 中文 日期 str replace 年月日 201801011 201801022 201801033 201801044 20180105 ... 360 20181227361 20181228362 20181229363 20181230364 20181231name 中文 日期 length 365 dtype object
2546,Pandas的axis参数怎么理解？,pandas axis 参数 怎么 理解 axis 参数 非常 困惑 难以 理解 视频 我会 形象化 方式 讲解 一下 这个 参数 核心 要诀 就是 axis 那个 轴会 消失 axis 或者 index 如果 单行 操作 一行 如果 聚合 操作 跨行 cross rowsaxis 或者 columns 如果 单列 操作 一列 如果 聚合 操作 跨列 cross columns 哪个 axis 就是 这个 axis 要动 起来 类似 for 遍历 其它 axis 保持 不动 import pandas as pdimport numpy as npdf pd dataframe np arange 12 reshape columns df dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right abcd001231456728910111 单列 drop 就是 删除 一列 代表 就是 删除 某列 df drop axis dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right bcd012315672910112 单行 drop 就是 删除 一行 df dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right abcd00123145672891011 代表 就是 删除 某行 df drop axis dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right abcd0012328910113 axis index 执行 mean 聚合 操作 直觉 输出 不是 每行 结果 而是 每列 结果 df dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right abcd00123145672891011 axis or axis indexdf mean axis 4.0 5.0 6.0 7.0 dtype float64 指定 哪个 axis 就是 这个 axis 要动 起来 类似 for 遍历 其它 axis 保持 不动 axis columns 执行 mean 聚合 操作 直觉 输出 不是 每行 结果 而是 每列 结果 df dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right abcd00123145672891011 axis or axis columnsdf mean axis 1.51 5.52 9.5 dtype float64 指定 哪个 axis 就是 这个 axis 要动 起来 类似 for 遍历 其它 axis 保持 不动 再次 举例 加深 理解 def get sum value return df sum value df apply get sum value axis df dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right abcdsum value0012361456722289101138 指定 哪个 axis 就是 这个 axis 要动 起来 类似 for 遍历 其它 axis 保持 本文 地址 http www crazyant net 2546 html 转载 注明 来源
2561,一个数据科学家的修炼路径,一个 数据 科学家 修炼 路径 来自 一个 视频 https www youtube com watch xc c7e5pk0y 数据 科学家 需求 层次 底层 上层 依次 需要 collect 数据 收集 move store 数据传输 存储 explore transofrm 数据 探索 清洗 异常 检测 过滤 aggregate label 分析 指标 聚合 特征 工程 输出 训练 数据 learn optimize ab 测试 试验 简单 机器 学习 算法 ai deep learning 人工智能 深度 学习 数据 科学家 核心 要义 需要 复杂 算法 需要 任何 手段 解决 公司 问题 一切都是 为了 解决问题
2564,机器学习常用数据集大全,机器 学习 常用 数据 大全 uci machine learning adult datasetbusiness problem classification person earns more than 50k or less predictor variable label predictors country age education occupation marital status etc 文章 https towardsdatascience com pandas index explained b131beaf6f7b 数据 地址 https archive ics uci edu ml machine learning databases adult adult datakaggle avazu click through rate predictionpredict whether mobile ad will be clickedin online advertising click through rate ctr is very important metric for evaluating ad performance as result click prediction systems are essential and widely used for sponsored search and real time bidding kaggle 地址 https www kaggle com avazu ctr prediction overviewuci adult data set 50kpredict whether income exceeds 50k yr based on census data also known as census income datasethttps archive ics uci edu ml datasets adultuci iris data setthis is perhaps the best known database to be found in the pattern recognition literature fisher paper is classic in the field and is referenced frequently to this dayhttps archive ics uci edu ml datasets iriskaggle titanic machine learning from disasteruse machine learning to create model that predicts which passengers survived the titanic shipwreck https www kaggle com titanic
2574,Pandas的Index索引有什么用途？,pandas index 索引 什么 用途 数据 存储 普通 column 用于 数据 查询 使用 index 什么 好处 index 用途 总结 方便 数据 查询 使用 index 可以 获得 性能 提升 自动 数据 对齐 功能 强大 数据结构 支持 import pandas as pddf pd read csv datas ml latest small ratings csv df head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right useridmovieidratingtimestamp0114.09649827031134 09649812472164.096498222431475 096498381541505.0964982931 df count userid 100836movieid 100836rating 100836timestamp 100836dtype int641 使用 index 查询 数据 drop false 索引 保持 columndf set index userid inplace true drop false df head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right useridmovieidratingtimestampuserid1114.09649827031134 09649812471164.096498222411475 096498381511505.0964982931 df indexint64index ... 610 610 610 610 610 610 610 610 610 610 dtype int64 name userid length 100836 使用 index 查询方法 df loc 500 head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right useridmovieidratingtimestampuserid50050014.01005527755500500111 01005528017500500391.010055279265005001011 010055279805005001044.01005528065 使用 column condition 查询方法 df loc df userid 500 head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right useridmovieidratingtimestampuserid50050014.01005527755500500111 01005528017500500391.010055279265005001011 010055279805005001044.010055280652 使用 index 提升 查询 性能 如果 index 唯一 pandas 使用 哈希 优化 查询 性能 如果 index 不是 唯一 但是 有序 pandas 使用 二分 查找 算法 查询 性能 logn 如果 index 完全 随机 那么 每次 查询 扫描 全表 查询 性能 实验 完全 随机 顺序 查询 数据 随机 打散 from sklearn utils import shuffledf shuffle shuffle df df shuffle head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right useridmovieidratingtimestampuserid16016023401.098538331412912911363 51167375403167167441914.511547189155365362763 0832839990676759522.01501274082 索引 是否是 递增 df shuffle index is monotonic increasingfalsedf shuffle index is uniquefalse 计时 查询 id 500 数据 性能 timeit df shuffle loc 500 376 52.4 per loop mean std dev of runs 1000 loops each 实验 index 排序 查询 df sorted df shuffle sort index df sorted head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right useridmovieidratingtimestampuserid1129854.09649830341126172 09649825881136394.09649822711164 0964982224117334.0964982400 索引 是否是 递增 df sorted index is monotonic increasingtruedf sorted index is uniquefalse% timeit df sorted loc 500 203 20.8 per loop mean std dev of runs 1000 loops each 使用 index 自动 对齐 数据 包括 series dataframes1 pd series index list abc s1a 1b 2c 3dtype int64s2 pd series index list bcd s2b 2c 3d 4dtype int64s1 s2a nanb 4.0 6.0 nandtype float644 使用 index 强大 数据结构 支持 很多 强大 索引 数据结构 categoricalindex 基于 分类 数据 index 提升 性能 multiindex 多维 索引 用于 groupby 多维 聚合 结果 datetimeindex 时间 类型 索引 强大 日期 时间 方法 支持
2583,Pandas实现数据的合并concat,pandas 实现 数据 合并 concat 使用 场景 批量 合并 相同 格式 excel dataframe 添加 dataframe 添加 一句 说明 concat 语法 使用 某种 合并 方式 inner outer 沿着 某个 轴向 axis 多个 pandas 对象 dataframe series 合并 一个 concat 语法 pandas concat objs axis join outer ignore index false objs 一个 列表 内容 可以 dataframe 或者 series 可以 混合 axis 默认 代表 按行 合并 如果 等于 代表 按列 合并 join 合并 时候 索引 对齐 方式 默认 outer join 可以 inner joinignore index 是否 忽略 原来 数据 索引 append 语法 dataframe append other ignore index false append 只有 按行 合并 没有 按列 合并 相当于 concat 按行 简写 形式 other 单个 dataframe series dict 或者 列表 ignore index 是否 忽略 原来 数据 索引 参考 文档 pandas concat api 文档 https pandas pydata org pandas docs stable reference api pandas concat htmlpandas concat 教程 https pandas pydata org pandas docs stable user guide merging htmlpandas append api 文档 https pandas pydata org pandas docs stable reference api pandas dataframe append htmlimport pandas as pdimport warningswarnings filterwarnings ignore 使用 pandas concat 合并 数据 df1 pd dataframe a0 a1 a2 a3 b0 b1 b2 b3 c0 c1 c2 c3 d0 d1 d2 d3 e0 e1 e2 e3 df1 dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right abcde0a0b0c0d0e01a1b1c1d1e12a2b2c2d2e23a3b3c3d3e3df2 pd dataframe a4 a5 a6 a7 b4 b5 b6 b7 c4 c5 c6 c7 d4 d5 d6 d7 f4 f5 f6 f7 df2 dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right abcdf0a4b4c4d4f41a5b5c5d5f52a6b6c6d6f63a7b7c7d7f71 默认 concat 参数 axis join outer ignore index falsepd concat df1 df2 dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right abcdef0a0b0c0d0e0nan1a1b1c1d1e1nan2a2b2c2d2e2nan3a3b3c3d3e3nan0a4b4c4d4nanf41a5b5c5d5nanf52a6b6c6d6nanf63a7b7c7d7nanf72 使用 ignore index true 可以 忽略 原来 索引 pd concat df1 df2 ignore index true dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right abcdef0a0b0c0d0e0nan1a1b1c1d1e1nan2a2b2c2d2e2nan3a3b3c3d3e3nan4a4b4c4d4nanf45a5b5c5d5nanf56a6b6c6d6nanf67a7b7c7d7nanf73 使用 join inner 过滤 匹配 pd concat df1 df2 ignore index true join inner dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right abcd0a0b0c0d01a1b1c1d12a2b2c2d23a3b3c3d34a4b4c4d45a5b5c5d56a6b6c6d67a7b7c7d74 使用 axis 相当于 添加 新列 df1 dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right abcde0a0b0c0d0e01a1b1c1d1e12a2b2c2d2e23a3b3c3d3e3a 添加 一列 seriess1 pd series list range name pd concat df1 s1 axis dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right abcdef0a0b0c0d0e001a1b1c1d1e112a2b2c2d2e223a3b3c3d3e33b 添加 多列 seriess2 df1 apply lambda gg axis s20 a0 gg1 a1 gg2 a2 gg3 a3 ggdtype objects2 name pd concat df1 s1 s2 axis dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right abcdefg0a0b0c0d0e00a0 gg1a1b1c1d1e11a1 gg2a2b2c2d2e22a2 gg3a3b3c3d3e33a3 gg 列表 可以 只有 seriespd concat s1 s2 axis dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right fg00a0 gg11a1 gg22a2 gg33a3 gg 列表 可以 混合 顺序 pd concat s1 df1 s2 axis dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right fabcdeg00a0b0c0d0e0a0 gg11a1b1c1d1e1a1 gg22a2b2c2d2e2a2 gg33a3b3c3d3e3a3 gg 使用 dataframe append 按行 合并 数据 df1 pd dataframe columns list ab df1 dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ab012134df2 pd dataframe columns list ab df2 dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ab0561781 dataframe 添加 一个 dataframedf1 append df2 dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ab0121340561782 忽略 原来 索引 ignore index truedf1 append df2 ignore index true dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ab0121342563783 可以 一行 一行 dataframe 添加 数据 一个 dfdf pd dataframe columns df dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right aa 性能 版本 for in range 注意 这里 每次 复制 df df append ignore index true df dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right a0011223344b 性能 版本 第一个 参是 一个 列表 避免 多次 复制 pd concat pd dataframe columns for in range ignore index true dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right a0011223344
2585,Tensorflow怎样接收变长列表特征,tensorflow 怎样 接收 列表 特征 比如 用户 分类 偏好 用户 历史观 行为 变长 元素 列表 怎么 输入 模型 这个 问题 很多 遇到 比如 这些 feeding variable length list data from csv to an indicator column featurehow to input list of lists with different sizes in tf data dataset 几种 方法 没有 完美 解决问题 multi onehot 自己 创建 一个 数组 变长 元素 对应 位置 设置 比如 这个 特征 两个 那么 词表 变成 变成 这种 方式 灵活 因为 如果 遇到 带有 权重 分类 列表 搞定 比如 0.8 0.7 0.6 0.5 0.4 0.3 那么 词表 依然 但是 对应 权重 可以 放到 原来 位置 变成 0.8 0.7 0.6 变成 0.5 0.4 0.3 然而 这种 方法 tensorflow feature column 支持 只能 自己 映射 转换 变成 以下 两种 方式 tensorflow feature column 可以 支持 变成 方法 截取 top 元素 来自 资料 http proceedings mlr press v7 niculescu09 有个 pdf 截图 使用 方法 计算 每个 词语 频率 然后 top10 频率 对于 这种 方法 个人感觉 如果 用户 分类 偏好 分类 权重 列表 可以 按照 权重 排序 top10 可以 提取 定长 10 元素 并且 反映 用户 个性化 偏好 变成 方法 使用 padding 来自 资料 tensorflow 官方 文档 https www tensorflow org tutorials text text classification rnn 补齐 方式
2591,怎样使用Pandas批量拆分与合并Excel文件？,怎样 使用 pandas 批量 拆分 合并 excel 文件 pandas 批量 拆分 excel 合并 excel 实例 演示 一个 excel 等份 拆成 多个 excel2 多个 excel 合并 一个 excel 标记 来源 work dir course datas c15 excel split merge splits dir work dir splits import osif not os path exists splits dir os mkdir splits dir 读取 excel pandasimport pandas as pddf source pd read excel work dir crazyant blog articles source xlsx df source head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right idtitletags02585tensorflow 怎样 接收 列表 特征 python tensorflow 特征 工程 12583pandas 实现 数据 合并 concatpandas python 数据分析 22574pandas index 索引 什么 用途 pandas python 数据分析 32564 机器 学习 常用 数据 大全 python 机器 学习 42561 一个 数据 科学家 修炼 路径 数据分析 df source indexrangeindex start stop 258 step df source shape 258 total row count df source shape total row count258 一个 excel 等份 拆成 多个 excel 使用 df iloc 方法 一个 dataframe 分成 多个 dataframe 使用 dataframe to excel 保存 每个 excel1 计算 拆分 每个 excel 行数 这个 excel 拆分 几个 user names xiao shuai xiao wang xiao ming xiao lei xiao bo xiao hong 每个 任务 数目 split size total row count len user names if total row count len user names split size 1split size432 分成 多个 dataframedf subs for idx user name in enumerate user names iloc 开始 索引 begin idx split size iloc 结束 索引 end begin split size 实现 df 按照 iloc 拆分 df sub df source iloc begin end 每个 df 存入 列表 df subs append idx user name df sub 每个 datafame 存入 excelfor idx user name df sub in df subs file name splits dir crazyant blog articles idx user name xlsx df sub to excel file name index false 合并 多个 excel 一个 excel 遍历 文件夹 得到 合并 excel 文件 列表 分别 读取 dataframe 每个 df 添加 一列 用于 标记 来源 使用 pd concat 进行 df 批量 合并 合并 dataframe 输出 excel1 遍历 文件夹 得到 合并 excel 名称 列表 import osexcel names for excel name in os listdir splits dir excel names append excel name excel names crazyant blog articles xiao shuai xlsx crazyant blog articles xiao wang xlsx crazyant blog articles xiao ming xlsx crazyant blog articles xiao lei xlsx crazyant blog articles xiao bo xlsx crazyant blog articles xiao hong xlsx 分别 读取 dataframedf list for excel name in excel names 读取 每个 excel df excel path splits dir excel name df split pd read excel excel path 得到 username username excel name replace crazyant blog articles replace xlsx print excel name username 每个 df 添加 用户 名字 df split username username df list append df split crazyant blog articles xiao shuai xlsx xiao shuaicrazyant blog articles xiao wang xlsx xiao wangcrazyant blog articles xiao ming xlsx xiao mingcrazyant blog articles xiao lei xlsx xiao leicrazyant blog articles xiao bo xlsx xiao bocrazyant blog articles xiao hong xlsx xiao hong3 使用 pd concat 进行 合并 df merged pd concat df list df merged shape 258 df merged head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right idtitletagsusername02585tensorflow 怎样 接收 列表 特征 python tensorflow 特征 工程 xiao shuai12583pandas 实现 数据 合并 concatpandas python 数据分析 xiao shuai22574pandas index 索引 什么 用途 pandas python 数据分析 xiao shuai32564 机器 学习 常用 数据 大全 python 机器 学习 xiao shuai42561 一个 数据 科学家 修炼 路径 数据分析 xiao shuaidf merged username value counts xiao hong 43xiao bo 43xiao shuai 43xiao lei 43xiao wang 43xiao ming 43name username dtype int644 合并 dataframe 输出 exceldf merged to excel work dir crazyant blog articles merged xlsx index false
2594,Pandas怎样实现对数据的分组统计？,pandas 怎样 实现 数据 分组 统计 pandas 怎样 实现 groupby 分组 统计 类似 sql select city max temperature from city weather group by city groupby 先对 数据 分组 然后 每个 分组 应用 聚合 函数 转换 函数 本次 演示 分组 使用 聚合 函数 数据 统计 遍历 groupby 结果 理解 执行 流程 实例 分组 探索 天气 数据 import pandas as pdimport numpy as np 加上 一句 jupyter notebook 展示 matplot 图表 matplotlib inlinedf pd dataframe foo bar foo bar foo bar foo foo one one two three two two one three np random randn np random randn df dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right abcd0fooone0.5429030 7888961barone 0.375789 0.3458692 footwo 0.9034070 4280313barthree 1.5647480 0811634footwo 1.0936020 8373485bartwo 0.2024030 7013016fooone 0.665189 1.5052907 foothree 0.4983390 534438 分组 使用 聚合 函数 数据 统计 单个 groupby 查询 所有 数据 统计 df groupby sum dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right cdabar 2.1429400 436595foo 2.6176331 083423 我们 看到 groupby 变成 数据 索引 因为 统计 sum 不是 数字 所以 自动 忽略 多个 groupby 查询 所有 数据 统计 df groupby mean dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right cdabbarone 0.375789 0.345869 three 1.5647480 081163two 0.2024030 701301fooone 0.061143 0.358197 three 0.4983390 534438two 0.9985040 632690 我们 看到 变成 二级 索引 df groupby as index false mean dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right abcd0barone 0.375789 0.3458691 barthree 1.5647480 0811632bartwo 0.2024030 7013013fooone 0.061143 0.3581974 foothree 0.4983390 5344385footwo 0.9985040 6326903 同时 查看 多种 数据 统计 df groupby agg np sum np mean np std dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead tr th text align left dataframe thead tr last of type th text align right cdsummeanstdsummeanstdabar 2.142940 0.7143130 7415830.4365950 1455320.526544 foo 2.617633 0.5235270 6378221.0834230 2166850.977686 我们 看到 变成 多级 索引 查看 单列 结果 数据 统计 方法 过滤 性能 更好 df groupby agg np sum np mean np std dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right summeanstdabar 2.142940 0.7143130 741583foo 2.617633 0.5235270 637822 方法 2df groupby agg np sum np mean np std dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right summeanstdabar 2.142940 0.7143130 741583foo 2.617633 0.5235270 6378225 不同 使用 不同 聚合 函数 df groupby agg np sum np mean dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right cdabar 2.1429400 145532foo 2.6176330 216685 遍历 groupby 结果 理解 执行 流程 for 循环 可以 直接 遍历 每个 group1 遍历 单个 聚合 分组 df groupby pandas core groupby generic dataframegroupby object at 0x00000123b250e548 for name group in print name print group print bar d1 bar one 0.375789 0.3458693 bar three 1.564748 0.0811635 bar two 0.202403 0.701301 foo d0 foo one 0.542903 0.7888962 foo two 0.903407 0.4280314 foo two 1.093602 0.8373486 foo one 0.665189 1.5052907 foo three 0.498339 0.534438 可以 获取 单个 分组 数据 get group bar dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right abcd1barone 0.375789 0.3458693 barthree 1.5647480 0811635bartwo 0.2024030 7013012 遍历 多个 聚合 分组 df groupby for name group in print name print group print bar one d1 bar one 0.375789 0.345869 bar three d3 bar three 1.564748 0.081163 bar two d5 bar two 0.202403 0.701301 foo one d0 foo one 0.542903 0.7888966 foo one 0.665189 1.505290 foo three d7 foo three 0.498339 0.534438 foo two d2 foo two 0.903407 0.4280314 foo two 1.093602 0.837348 可以 看到 name 一个 元素 tuple 代表 不同 get group foo one dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right abcd0fooone0.5429030 7888966fooone 0.665189 1.505290 可以 直接 查询 group 几列 生成 series 或者 dataframeg pandas core groupby generic seriesgroupby object at 0x00000123c33f64c8 for name group in print name print group print type group print bar one 0.375789 name dtype float64 class pandas core series series bar three 1.564748 name dtype float64 class pandas core series series bar two 0.202403 name dtype float64 class pandas core series series foo one 0.5429036 0.665189 name dtype float64 class pandas core series series foo three 0.498339 name dtype float64 class pandas core series series foo two 0.9034074 1.093602 name dtype float64 class pandas core series series 其实 所有 聚合 统计 dataframe series 进行 实例 分组 探索 天气 数据 fpath datas beijing tianqi beijing tianqi 2018 csv df pd read csv fpath 替换 温度 后缀 df loc bwendu df bwendu str replace astype int32 df loc ywendu df ywendu str replace astype int32 df head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ymdbwenduywendutianqifengxiangfengliaqiaqiinfoaqilevel02018 01 013 多云 东北风 59 212018 01 022 多云 东北风 49 122018 01 032 多云 北风 28 132018 01 040 东北风 28 142018 01 053 多云 西北风 50 新增 列为 月份 df month df ymd str df head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ymdbwenduywendutianqifengxiangfengliaqiaqiinfoaqilevelmonth02018 01 013 多云 东北风 59 22018 0112018 01 022 多云 东北风 49 12018 0122018 01 032 多云 北风 28 12018 0132018 01 040 东北风 28 12018 0142018 01 053 多云 西北风 50 12018 011 查看 每个 最高 温度 data df groupby month bwendu max datamonth2018 01 72018 02 122018 03 272018 04 302018 05 352018 06 382018 07 372018 08 362018 09 312018 10 252018 11 182018 12 10name bwendu dtype int32type data pandas core series seriesdata plot matplotlib axes ._ subplots axessubplot at 0x123c344b308 查看 每个 最高 温度 最低温度 平均 空气质量 指数 df head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ymdbwenduywendutianqifengxiangfengliaqiaqiinfoaqilevelmonth02018 01 013 多云 东北风 59 22018 0112018 01 022 多云 东北风 49 12018 0122018 01 032 多云 北风 28 12018 0132018 01 040 东北风 28 12018 0142018 01 053 多云 西北风 50 12018 01group data df groupby month agg bwendu np max ywendu np min aqi np mean group data dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right bwenduywenduaqimonth2018 017 1260.6774192018 0212 1078.8571432018 0327 4130.3225812018 04301102.8666672018 05351099.0645162018 06381782.3000002018 07372272.6774192018 08362059.5161292018 09311150.4333332018 1025167.0967742018 1118 4105.1000002018 1210 1277.354839 group data plot matplotlib axes ._ subplots axessubplot at 0x123c5502d48
2598,Pandas的分层索引MultiIndex怎样用？,pandas 分层 索引 multiindex 怎样 pandas 分层 索引 multiindex 为什么 学习 分层 索引 multiindex 分层 索引 一个 向上 拥有 多个 索引 层级 可以 表达 更高 维度 数据 形式 可以 方便 进行 数据 筛选 如果 有序 性能 更好 groupby 操作 结果 如果 key 结果 分层 索引 需要 使用 一般 需要 自己 创建 分层 索引 multiindex 构造函数 一般 不用 演示 数据 百度 阿里巴巴 爱奇艺 京东 四家 公司 10 股票 数据 数据 来自 英为 财经 https cn investing com 本次 演示 提纲 series 分层 索引 multiindex series 多层 索引 怎样 筛选 数据 dataframe 多层 索引 multiindex dataframe 多层 索引 怎样 筛选 数据 import pandas as pd% matplotlib inlinestocks pd read excel datas stocks 互联网 公司股票 xlsx stocks shape 12 stocks head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right 日期 公司 收盘 开盘 高低 交易量 涨跌幅 02019 10 03bidu104.32102 35104.73101 152.240 0212019 10 02bidu102.62100 85103.2499 502.690 0122019 10 01bidu102.00102 80103.26101 001.78 0.01 stocks 公司 unique array bidu baba iq jd dtype object stocks indexrangeindex start stop 12 step stocks groupby 公司 收盘 mean 公司 baba 166.80 bidu 102.98 iq 15.90 jd 28.35 name 收盘 dtype float64 series 分层 索引 multiindexser stocks groupby 公司 日期 收盘 mean ser 公司 日期 baba 2019 10 01 165.15 2019 10 02 165.77 2019 10 03 169.48 bidu 2019 10 01 102.00 2019 10 02 102.62 2019 10 03 104.32 iq 2019 10 01 15.92 2019 10 02 15.72 2019 10 03 16.06 jd 2019 10 01 28.19 2019 10 02 28.06 2019 10 03 28.80 name 收盘 dtype float64 多维 索引 空白 意思 使用 上面 ser indexmultiindex baba 2019 10 01 baba 2019 10 02 baba 2019 10 03 bidu 2019 10 01 bidu 2019 10 02 bidu 2019 10 03 iq 2019 10 01 iq 2019 10 02 iq 2019 10 03 jd 2019 10 01 jd 2019 10 02 jd 2019 10 03 names 公司 日期 unstack 二级 索引 变成 ser unstack dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right 日期 2019 10 012019 10 022019 10 03 公司 baba165.15165 77169.48 bidu102.00102 62104.32 iq15.9215 7216.06 jd28.1928 0628.80 ser 公司 日期 baba 2019 10 01 165.15 2019 10 02 165.77 2019 10 03 169.48 bidu 2019 10 01 102.00 2019 10 02 102.62 2019 10 03 104.32 iq 2019 10 01 15.92 2019 10 02 15.72 2019 10 03 16.06 jd 2019 10 01 28.19 2019 10 02 28.06 2019 10 03 28.80 name 收盘 dtype float64ser reset index dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right 公司 日期 收盘 0baba2019 10 01165.151 baba2019 10 02165.772 baba2019 10 03169.483 bidu2019 10 01102.004 bidu2019 10 02102.625 bidu2019 10 03104.326 iq2019 10 0115.927 iq2019 10 0215.728 iq2019 10 0316.069 jd2019 10 0128.1910 jd2019 10 0228.0611 jd2019 10 0328.80 series 多层 索引 multiindex 怎样 筛选 数据 ser 公司 日期 baba 2019 10 01 165.15 2019 10 02 165.77 2019 10 03 169.48 bidu 2019 10 01 102.00 2019 10 02 102.62 2019 10 03 104.32 iq 2019 10 01 15.92 2019 10 02 15.72 2019 10 03 16.06 jd 2019 10 01 28.19 2019 10 02 28.06 2019 10 03 28.80 name 收盘 dtype float64ser loc bidu 日期 2019 10 01 102.002019 10 02 102.622019 10 03 104.32 name 收盘 dtype float64 多层 索引 可以 元组 形式 筛选 ser loc bidu 2019 10 02 102.62 ser loc 2019 10 02 公司 baba 165.77 bidu 102.62 iq 15.72 jd 28.06 name 收盘 dtype float64 dataframe 多层 索引 multiindexstocks head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right 日期 公司 收盘 开盘 高低 交易量 涨跌幅 02019 10 03bidu104.32102 35104.73101 152.240 0212019 10 02bidu102.62100 85103.2499 502.690 0122019 10 01bidu102.00102 80103.26101 001.78 0.0132019 10 03baba169.48166 65170.18165 0010.390 0242019 10 02baba165.77162 82166.88161 9011.600 00stocks set index 公司 日期 inplace true stocks dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right 收盘 开盘 高低 交易量 涨跌幅 公司 日期 bidu2019 10 03104.32102 35104.73101 152.240 022019 10 02102.62100 85103.2499 502.690 012019 10 01102.00102 80103.26101 001.78 0.01 baba2019 10 03169.48166 65170.18165 0010.390 022019 10 02165.77162 82166.88161 9011.600 002019 10 01165.15168 01168.23163 6414.19 0.01 iq2019 10 0316.0615 7116.3815 3210.080 022019 10 0215.7215 8515.8715 128.10 0.012019 10 0115.9216 1416.2215 5011.65 0.01 jd2019 10 0328.8028 1128.9727 828.770 032019 10 0228.0628 0028.2227 539.530 002019 10 0128.1928 2228.5727 9710.640 00stocks indexmultiindex bidu 2019 10 03 bidu 2019 10 02 bidu 2019 10 01 baba 2019 10 03 baba 2019 10 02 baba 2019 10 01 iq 2019 10 03 iq 2019 10 02 iq 2019 10 01 jd 2019 10 03 jd 2019 10 02 jd 2019 10 01 names 公司 日期 stocks sort index inplace true stocks dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right 收盘 开盘 高低 交易量 涨跌幅 公司 日期 baba2019 10 01165.15168 01168.23163 6414.19 0.012019 10 02165.77162 82166.88161 9011.600 002019 10 03169.48166 65170.18165 0010.390 02bidu2019 10 01102.00102 80103.26101 001.78 0.012019 10 02102.62100 85103.2499 502.690 012019 10 03104.32102 35104.73101 152.240 02iq2019 10 0115.9216 1416.2215 5011.65 0.012019 10 0215.7215 8515.8715 128.10 0.012019 10 0316.0615 7116.3815 3210.080 02jd2019 10 0128.1928 2228.5727 9710.640 002019 10 0228.0628 0028.2227 539.530 002019 10 0328.8028 1128.9727 828.770 03 dataframe 多层 索引 multiindex 怎样 筛选 数据 重要 知识 选择 数据 元组 key1 key2 代表 筛选 多层 索引 其中 key1 索引 第一级 key2 第二级 比如 key1 jd key2 2019 10 02 列表 key1 key2 代表 一层 多个 key 其中 key1 key2 并列 同级 索引 比如 key1 jd key2 bidustocks loc bidu dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right 收盘 开盘 高低 交易量 涨跌幅 日期 2019 10 01102.00102 80103.26101 001.78 0.012019 10 02102.62100 85103.2499 502.690 012019 10 03104.32102 35104.73101 152.240 02stocks loc bidu 2019 10 02 收盘 102.62 开盘 100.85 103.24 99.50 交易量 2.69 涨跌幅 0.01 name bidu 2019 10 02 dtype float64stocks loc bidu 2019 10 02 开盘 100.85 stocks loc bidu jd dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right 收盘 开盘 高低 交易量 涨跌幅 公司 日期 bidu2019 10 01102.00102 80103.26101 001.78 0.012019 10 02102.62100 85103.2499 502.690 012019 10 03104.32102 35104.73101 152.240 02jd2019 10 0128.1928 2228.5727 9710.640 002019 10 0228.0628 0028.2227 539.530 002019 10 0328.8028 1128.9727 828.770 03stocks loc bidu jd 2019 10 03 dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right 收盘 开盘 高低 交易量 涨跌幅 公司 日期 bidu2019 10 03104.32102 35104.73101 152.240 02jd2019 10 0328.8028 1128.9727 828.770 03stocks loc bidu jd 2019 10 03 收盘 公司 日期 bidu 2019 10 03 104.32 jd 2019 10 03 28.80 name 收盘 dtype float64stocks loc bidu 2019 10 02 2019 10 03 收盘 公司 日期 bidu 2019 10 02 102.62 2019 10 03 104.32 name 收盘 dtype float64 slice none 代表 筛选 这一 索引 所有 内容 stocks loc slice none 2019 10 02 2019 10 03 dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right 收盘 开盘 高低 交易量 涨跌幅 公司 日期 baba2019 10 02165.77162 82166.88161 9011.600 002019 10 03169.48166 65170.18165 0010.390 02bidu2019 10 02102.62100 85103.2499 502.690 012019 10 03104.32102 35104.73101 152.240 02iq2019 10 0215.7215 8515.8715 128.10 0.012019 10 0316.0615 7116.3815 3210.080 02jd2019 10 0228.0628 0028.2227 539.530 002019 10 0328.8028 1128.9727 828.770 03stocks reset index dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right 公司 日期 收盘 开盘 高低 交易量 涨跌幅 0baba2019 10 01165.15168 01168.23163 6414.19 0.011 baba2019 10 02165.77162 82166.88161 9011.600 002baba2019 10 03169.48166 65170.18165 0010.390 023bidu2019 10 01102.00102 80103.26101 001.78 0.014 bidu2019 10 02102.62100 85103.2499 502.690 015bidu2019 10 03104.32102 35104.73101 152.240 026iq2019 10 0115.9216 1416.2215 5011.65 0.017 iq2019 10 0215.7215 8515.8715 128.10 0.018 iq2019 10 0316.0615 7116.3815 3210.080 029jd2019 10 0128.1928 2228.5727 9710.640 0010jd2019 10 0228.0628 0028.2227 539.530 0011jd2019 10 0328.8028 1128.9727 828.770 03 转载 注明 链接 http www crazyant net 2598 html
2602,怎样使用Pandas的map和apply函数？,怎样 使用 pandas map apply 函数 数据 转换 函数 对比 map apply applymap map 用于 series 实现 每个 映射 apply 用于 series 实现 每个 处理 用于 dataframe 实现 某个 series 处理 applymap 只能 用于 dataframe 用于 处理 dataframe 每个 元素 map 用于 series 转换 实例 股票代码 英文 转换成 中文 名字 series map dict or series map function import pandas as pdstocks pd read excel datas stocks 互联网 公司股票 xlsx stocks head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right 日期 公司 收盘 开盘 高低 交易量 涨跌幅 02019 10 03bidu104.32102 35104.73101 152.240 0212019 10 02bidu102.62100 85103.2499 502.690 0122019 10 01bidu102.00102 80103.26101 001.78 0.0132019 10 03baba169.48166 65170.18165 0010.390 0242019 10 02baba165.77162 82166.88161 9011.600 00stocks 公司 unique array bidu baba iq jd dtype object 公司 股票代码 中文 映射 注意 这里 小写 dict company names bidu 百度 baba 阿里巴巴 iq 爱奇艺 jd 京东 方法 series map dict stocks 公司 中文 stocks 公司 str lower map dict company names stocks head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right 日期 公司 收盘 开盘 高低 交易量 涨跌幅 公司 中文 102019 10 03bidu104.32102 35104.73101 152.240 02 百度 12019 10 02bidu102.62100 85103.2499 502.690 01 百度 22019 10 01bidu102.00102 80103.26101 001.78 0.01 百度 32019 10 03baba169.48166 65170.18165 0010.390 02 阿里巴巴 42019 10 02baba165.77162 82166.88161 9011.600 00 阿里巴巴 方法 series map function function 参数 series 每个 元素 stocks 公司 中文 stocks 公司 map lambda dict company names lower stocks head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right 日期 公司 收盘 开盘 高低 交易量 涨跌幅 公司 中文 公司 中文 202019 10 03bidu104.32102 35104.73101 152.240 02 百度 百度 12019 10 02bidu102.62100 85103.2499 502.690 01 百度 百度 22019 10 01bidu102.00102 80103.26101 001.78 0.01 百度 百度 32019 10 03baba169.48166 65170.18165 0010.390 02 阿里巴巴 阿里巴巴 42019 10 02baba165.77162 82166.88161 9011.600 00 阿里巴巴 阿里巴巴 apply 用于 series dataframe 转换 series apply function 函数 参数 每个 dataframe apply function 函数 参数 seriesseries apply function function 参数 series 每个 stocks 公司 中文 stocks 公司 apply lambda dict company names lower stocks head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right 日期 公司 收盘 开盘 高低 交易量 涨跌幅 公司 中文 公司 中文 公司 中文 302019 10 03bidu104.32102 35104.73101 152.240 02 百度 百度 百度 12019 10 02bidu102.62100 85103.2499 502.690 01 百度 百度 百度 22019 10 01bidu102.00102 80103.26101 001.78 0.01 百度 百度 百度 32019 10 03baba169.48166 65170.18165 0010.390 02 阿里巴巴 阿里巴巴 阿里巴巴 42019 10 02baba165.77162 82166.88161 9011.600 00 阿里巴巴 阿里巴巴 阿里巴巴 dataframe apply function function 参数 对应 seriesstocks 公司 中文 stocks apply lambda dict company names 公司 lower axis 注意 这个 代码 apply stocks 这个 dataframe 调用 lambda 一个 series 因为 指定 axis 所以 seires key 列名 可以 公司 获取 stocks head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right 日期 公司 收盘 开盘 高低 交易量 涨跌幅 公司 中文 公司 中文 公司 中文 公司 中文 402019 10 03bidu104.32102 35104.73101 152.240 02 百度 百度 百度 百度 12019 10 02bidu102.62100 85103.2499 502.690 01 百度 百度 百度 百度 22019 10 01bidu102.00102 80103.26101 001.78 0.01 百度 百度 百度 百度 32019 10 03baba169.48166 65170.18165 0010.390 02 阿里巴巴 阿里巴巴 阿里巴巴 阿里巴巴 42019 10 02baba165.77162 82166.88161 9011.600 00 阿里巴巴 阿里巴巴 阿里巴巴 阿里巴巴 applymap 用于 dataframe 所有 转换 sub df stocks 收盘 开盘 交易量 sub df head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right 收盘 开盘 高低 交易量 0104.32102 35104.73101 152.241102 62100.85103 2499.502 692102.00102 80103.26101 001.783169 48166.65170 18165.0010 394165.77162 82166.88161 9011.60 这些 数字 整数 应用 所有 元素 sub df applymap lambda int dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right 收盘 开盘 高低 交易量 0104102104101211021001039922102102103101131691661701651041651621661611151651681681631461615161510715151515881516161511928282827810282828279112828282710 直接 修改 df 几列 stocks loc 收盘 开盘 交易量 sub df applymap lambda int stocks head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right 日期 公司 收盘 开盘 高低 交易量 涨跌幅 公司 中文 公司 中文 公司 中文 公司 中文 402019 10 03bidu10410210410120.02 百度 百度 百度 百度 12019 10 02bidu1021001039920.01 百度 百度 百度 百度 22019 10 01bidu1021021031011 0.01 百度 百度 百度 百度 32019 10 03baba169166170165100.02 阿里巴巴 阿里巴巴 阿里巴巴 阿里巴巴 42019 10 02baba165162166161110.00 阿里巴巴 阿里巴巴 阿里巴巴 阿里巴巴
2604,Pandas怎样对每个分组应用apply函数?,pandas 怎样 每个 分组 应用 apply 函数 pandas 怎样 每个 分组 应用 apply 函数 知识 pandas groupby 遵从 split apply combine 模式 这里 split pandas groupby 我们 自己 实现 apply 函数 apply 返回 结果 pandas 进行 combine 得到 结果 groupby apply function function 第一个 参数 dataframefunction 返回 结果 可是 dataframe series 单个 甚至 输入 dataframe 完全 没关系 本次 实例 演示 怎样 数值 分组 归一化 怎样 每个 分组 topn 数据 实例 怎样 数值 分组 归一化 不同 范围 数值 进行 归一化 映射 区间 容易 数据 横向 对比 比如 价格 字段 几百 几千 增幅 字段 100 机器 学习 模型 性能 更好 归一化 公式 演示 用户 电影 评分 归一化 每个 用户 评分 不同 乐观 评分 悲观派 评分 用户 归一化 import pandas as pdratings pd read csv datas movielens 1m ratings dat sep engine python names userid movieid rating timestamp split ratings head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right useridmovieidratingtimestamp011193597830076011661397830210921914397830196831340849783002754123555978824291 实现 按照 用户 id 分组 然后 其中 一列 归一化 def ratings norm df param df 每个 用户 分组 dataframe min value df rating min max value df rating max df rating norm df rating apply lambda min value max value min value return dfratings ratings groupby userid apply ratings norm ratings ratings userid head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right useridmovieidratingtimestamprating norm01119359783007601.01166139783021090 02191439783019680.031340849783002750 541235559788242911.0 可以 看到 userid 这个 用户 rating 最低 乐观 我们 归一化 实例 怎样 每个 分组 topn 数据 获取 2018 每个 温度 最高 数据 fpath datas beijing tianqi beijing tianqi 2018 csv df pd read csv fpath 替换 温度 后缀 df loc bwendu df bwendu str replace astype int32 df loc ywendu df ywendu str replace astype int32 新增 列为 月份 df month df ymd str df head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ymdbwenduywendutianqifengxiangfengliaqiaqiinfoaqilevelmonth02018 01 013 多云 东北风 59 22018 0112018 01 022 多云 东北风 49 12018 0122018 01 032 多云 北风 28 12018 0132018 01 040 东北风 28 12018 0142018 01 053 多云 西北风 50 12018 01def getwendutopn df topn 这里 df 每个 月份 分组 group df return df sort values by bwendu ymd bwendu topn df groupby month apply getwendutopn topn head dataframe tbody tr th only of type vertical align middle dataframe tbody tr th vertical align top dataframe thead th text align right ymdbwendumonth2018 01182018 01 1972018 02562018 02 26122018 03852018 03 27272018 041182018 04 29302018 051502018 05 3135 我们 看到 grouby apply 函数 返回 dataframe 其实 原来 dataframe 其实 可以 完全 一样 视频 地址 http www iqiyi com 19rrhyyqix html
2615,推荐系统实现相似推荐的流程和资源,推荐 系统 实现 相似 推荐 流程 资源 视频 位于 链接 需要 资源 整理 视频 涉及 相关 资源 jieba 中文 词库 https github com fxsjy jieba2 spark word2vec 计算 http spark apache org docs latest ml features html word2vec3 腾讯 开源 800 word2vec 数据 https ai tencent com ailab nlp embedding html4 scipy 相似 计算 函数 https docs scipy org doc scipy 0.14 reference generated scipy spatial distance cosine html5 相似 近邻 搜索 优化 算法 lsh 局部 敏感 哈希 http spark apache org docs latest ml features html locality sensitive hashing
2623,文章写的好，但是没人看，原来标题可以这么写,文章 但是 没人 原来 标题 可以 这么 一种 方法 就是 三段式 标题 三段式 来自 百度 百科 地址 https baike baidu com item e4% b8% 89% e6% ae% b5% e5% bc% 8f 10868374 fr aladdin 德国 哲学家 黑格尔 用来 说明 发展 过程 公式 认为 一切 发展 经历 三个 阶段 发展 起点 正题 对立面 显现 反题 对立面 统一 合题 反题 否定 正题 合题 否定 反题 合题 否定 否定 黑格尔 三段式 作为 论证 客观唯心主义 工具 事物 低级 高级 发展 辩证法 开辟 道路 来自 头条 标题 一个 说明 三段式 指用 三个 分句 组成 标题 形式 容易 爆款 句式 因为 套路 比较 清晰 模仿 标题 可以 容纳 信息点 然后 递进 转折 增加 标题 争议 数据 显示 三段式 标题 两段式 标题 更加 吸引 用户 点击 例子 标题 这样 表达 听众 打动 点击 展示 4338 112326 3.86% 优化 标题 开会 怎么 发言 最有 水平 一个 技巧 领导 刮目相看 点击 展示 107387 997934 10.76% 案例 解析 标题 太过 简略 没有 具体 场景 优化 标题 设置 职场 场景 用户 强烈 代入 并且 突出 实用价值 领导 刮目相看 一个 例子
2629,自律使我自由,自律 自由 从来 没有 完全 自由 如果 节制 放纵 自己 大吃大喝 熬夜 玩游戏 那么 导致 现在 状态 就是 肥胖 精神 血脂高 颈椎病 等等 放纵 导致 恶果 如果 想要 身体 轻盈 健康 精神饱满 激情 四射 不能 通过 放纵 实现 而是 节制 如果 做到 这些 节制 不吃 高糖 高脂 油腻 食物 吃饭 不吃 过度 多次 健康 食物 比如 粗粮 高蛋白 时间 起来 活动 经常 颈椎 些许 锻炼 经常 散散步 走路 可以 尝试 做做 俯卧撑 熬夜 减少 趴着睡 颈椎 可以 冥想 方式 休息 那么 逐步 我会 收获 这些 健康 身体 指标 回归 正常 比如 高脂 肥胖 精神状态 变得 饱满 活力 更加 高产 学习 加快 向往 一天 自己 身体 轻盈 放松 需要 节制 实现 不是 放纵 放纵 只能 获得 当前 满足 过后 就是 恶果 痛苦 当前 节制 换来 将来 长期 健康 快乐 自律 自由 当前 自律 带来 长期 自由
2637,程序员-颈椎病-该练八段锦,程序员 颈椎病 该练 八段锦
